// Code generated by protoc-gen-go.
// source: hall_base.proto
// DO NOT EDIT!

package yjprotogo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_reg from common_client.proto

// Ignoring public import of common_ack_reg from common_client.proto

// Ignoring public import of cm_offline from common_client.proto

// Ignoring public import of cm_hearbeat from common_client.proto

// Ignoring public import of common_enum_reg from common_client.proto

// Ignoring public import of common_enum_os_type from common_client.proto

type YjEnumProtoId int32

const (
	YjEnumProtoId_HALL_PID_HEARTBEAT      YjEnumProtoId = 0
	YjEnumProtoId_HALL_PID_QUICK_CONN     YjEnumProtoId = 1
	YjEnumProtoId_HALL_PID_QUICK_CONN_ACK YjEnumProtoId = 2
	YjEnumProtoId_HALL_PID_GAME_LOGIN     YjEnumProtoId = 3
	YjEnumProtoId_HALL_PID_GAME_LOGIN_ACK YjEnumProtoId = 4
	YjEnumProtoId_HALL_PID_REG_REQ        YjEnumProtoId = 5
	YjEnumProtoId_HALL_PID_REG_ACK        YjEnumProtoId = 6
)

var YjEnumProtoId_name = map[int32]string{
	0: "HALL_PID_HEARTBEAT",
	1: "HALL_PID_QUICK_CONN",
	2: "HALL_PID_QUICK_CONN_ACK",
	3: "HALL_PID_GAME_LOGIN",
	4: "HALL_PID_GAME_LOGIN_ACK",
	5: "HALL_PID_REG_REQ",
	6: "HALL_PID_REG_ACK",
}
var YjEnumProtoId_value = map[string]int32{
	"HALL_PID_HEARTBEAT":      0,
	"HALL_PID_QUICK_CONN":     1,
	"HALL_PID_QUICK_CONN_ACK": 2,
	"HALL_PID_GAME_LOGIN":     3,
	"HALL_PID_GAME_LOGIN_ACK": 4,
	"HALL_PID_REG_REQ":        5,
	"HALL_PID_REG_ACK":        6,
}

func (x YjEnumProtoId) Enum() *YjEnumProtoId {
	p := new(YjEnumProtoId)
	*p = x
	return p
}
func (x YjEnumProtoId) String() string {
	return proto.EnumName(YjEnumProtoId_name, int32(x))
}
func (x *YjEnumProtoId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(YjEnumProtoId_value, data, "YjEnumProtoId")
	if err != nil {
		return err
	}
	*x = YjEnumProtoId(value)
	return nil
}
func (YjEnumProtoId) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type HallReqLogin struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Userid           *uint32      `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	Regtype          *int32       `protobuf:"varint,3,opt,name=regtype" json:"regtype,omitempty"`
	Password         *string      `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	Money            *uint32      `protobuf:"varint,5,opt,name=money" json:"money,omitempty"`
	Roomcard         *uint32      `protobuf:"varint,6,opt,name=roomcard" json:"roomcard,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqLogin) Reset()                    { *m = HallReqLogin{} }
func (m *HallReqLogin) String() string            { return proto.CompactTextString(m) }
func (*HallReqLogin) ProtoMessage()               {}
func (*HallReqLogin) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *HallReqLogin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqLogin) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *HallReqLogin) GetRegtype() int32 {
	if m != nil && m.Regtype != nil {
		return *m.Regtype
	}
	return 0
}

func (m *HallReqLogin) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *HallReqLogin) GetMoney() uint32 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *HallReqLogin) GetRoomcard() uint32 {
	if m != nil && m.Roomcard != nil {
		return *m.Roomcard
	}
	return 0
}

type HallAckLogin struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Userid           *uint32      `protobuf:"varint,2,opt,name=userid" json:"userid,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckLogin) Reset()                    { *m = HallAckLogin{} }
func (m *HallAckLogin) String() string            { return proto.CompactTextString(m) }
func (*HallAckLogin) ProtoMessage()               {}
func (*HallAckLogin) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *HallAckLogin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckLogin) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func init() {
	proto.RegisterType((*HallReqLogin)(nil), "yjprotogo.hall_req_login")
	proto.RegisterType((*HallAckLogin)(nil), "yjprotogo.hall_ack_login")
	proto.RegisterEnum("yjprotogo.YjEnumProtoId", YjEnumProtoId_name, YjEnumProtoId_value)
}

var fileDescriptor1 = []byte{
	// 316 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x8f, 0xcd, 0x4e, 0xf2, 0x40,
	0x14, 0x86, 0x19, 0xa0, 0xfd, 0x3e, 0x8e, 0x51, 0x9a, 0x81, 0xc0, 0x04, 0x37, 0x0d, 0xab, 0xc6,
	0x45, 0x17, 0xde, 0x41, 0xc5, 0x06, 0x1a, 0x90, 0x9f, 0x09, 0x26, 0xee, 0x26, 0x63, 0x3b, 0xe1,
	0xc7, 0xb6, 0x83, 0x53, 0x88, 0xe9, 0xdd, 0xe9, 0x9d, 0x19, 0x86, 0x5a, 0x43, 0x74, 0xe9, 0x6a,
	0xe6, 0x3d, 0xcf, 0x79, 0x4e, 0xf2, 0x42, 0x73, 0xcd, 0xe3, 0x98, 0x3d, 0xf3, 0x4c, 0xb8, 0x3b,
	0x25, 0xf7, 0x12, 0x37, 0xf2, 0xad, 0xfe, 0xac, 0x64, 0xaf, 0x15, 0xca, 0x24, 0x91, 0x29, 0x0b,
	0xe3, 0x8d, 0x48, 0xf7, 0x27, 0xde, 0x7f, 0x47, 0x70, 0xa5, 0x1d, 0x25, 0x5e, 0x59, 0x2c, 0x57,
	0x9b, 0x14, 0xbb, 0x60, 0xae, 0x05, 0x8f, 0x84, 0x22, 0xc8, 0x46, 0xce, 0xc5, 0x6d, 0xc7, 0x2d,
	0x6f, 0xb8, 0xf3, 0xe3, 0x3b, 0xd2, 0x94, 0x16, 0x5b, 0xb8, 0x03, 0xe6, 0x21, 0x13, 0x6a, 0x13,
	0x91, 0xaa, 0x8d, 0x9c, 0x4b, 0x5a, 0x24, 0x4c, 0xe0, 0x9f, 0x12, 0xab, 0x7d, 0xbe, 0x13, 0xa4,
	0x66, 0x23, 0xc7, 0xa0, 0x5f, 0x11, 0xf7, 0xe0, 0xff, 0x8e, 0x67, 0xd9, 0x9b, 0x54, 0x11, 0xa9,
	0xdb, 0xc8, 0x69, 0xd0, 0x32, 0xe3, 0x36, 0x18, 0x89, 0x4c, 0x45, 0x4e, 0x0c, 0x7d, 0xec, 0x14,
	0x8e, 0x86, 0x92, 0x32, 0x09, 0xb9, 0x8a, 0x88, 0xa9, 0x41, 0x99, 0xfb, 0x4f, 0x45, 0x03, 0x1e,
	0xbe, 0xfc, 0x6d, 0x83, 0x9b, 0x0f, 0x04, 0xcd, 0x7c, 0xcb, 0x44, 0x7a, 0x48, 0x98, 0xf6, 0x83,
	0x08, 0x77, 0x00, 0x8f, 0xbc, 0xc9, 0x84, 0xcd, 0x83, 0x7b, 0x36, 0xf2, 0x3d, 0xba, 0xbc, 0xf3,
	0xbd, 0xa5, 0x55, 0xc1, 0x5d, 0x68, 0x95, 0xf3, 0xc5, 0x63, 0x30, 0x18, 0xb3, 0xc1, 0x6c, 0x3a,
	0xb5, 0x10, 0xbe, 0x86, 0xee, 0x2f, 0x80, 0x79, 0x83, 0xb1, 0x55, 0x3d, 0xb3, 0x86, 0xde, 0x83,
	0xcf, 0x26, 0xb3, 0x61, 0x30, 0xb5, 0x6a, 0x67, 0xd6, 0x37, 0xd0, 0x56, 0x1d, 0xb7, 0xc1, 0x2a,
	0x21, 0xf5, 0x87, 0x8c, 0xfa, 0x0b, 0xcb, 0xf8, 0x31, 0x3d, 0xee, 0x9a, 0xf3, 0xca, 0x67, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x5a, 0x02, 0x0b, 0x5b, 0x14, 0x02, 0x00, 0x00,
}
