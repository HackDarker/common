// Code generated by protoc-gen-go.
// source: sdy_hall.proto
// DO NOT EDIT!

package yjprotogo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_reg from common_client.proto

// Ignoring public import of common_ack_reg from common_client.proto

// Ignoring public import of cm_offline from common_client.proto

// Ignoring public import of cm_hearbeat from common_client.proto

// Ignoring public import of common_enum_reg from common_client.proto

// Ignoring public import of common_enum_os_type from common_client.proto

// Ignoring public import of sdy_base_userPaiIds from sdy_base.proto

// Ignoring public import of sdy_base_roomTypeInfo from sdy_base.proto

// Ignoring public import of sdy_base_timerInfo from sdy_base.proto

// Ignoring public import of sdy_base_playerInfo from sdy_base.proto

// Ignoring public import of sdy_base_commonRateInfo from sdy_base.proto

// Ignoring public import of sdy_base_deskInfo from sdy_base.proto

// Ignoring public import of sdy_enum_protoId from sdy_base.proto

// Ignoring public import of sdy_enum_errorCode from sdy_base.proto

// Ignoring public import of sdy_enum_actType from sdy_base.proto

// Ignoring public import of sdy_enum_deskStatus from sdy_base.proto

// Ignoring public import of sdy_enum_userStatus from sdy_base.proto

// Ignoring public import of sdy_enum_enterType from sdy_base.proto

// Ignoring public import of sdy_enum_Option from sdy_base.proto

// Ignoring public import of sdy_enum_coinRoomLevel from sdy_base.proto

// Ignoring public import of sdy_enum_flowers from sdy_base.proto

// 创建房间
type SdyReqCreateDesk struct {
	Header           *ProtoHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	RoomTypeInfo     *SdyBaseRoomTypeInfo `protobuf:"bytes,2,opt,name=roomTypeInfo" json:"roomTypeInfo,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *SdyReqCreateDesk) Reset()                    { *m = SdyReqCreateDesk{} }
func (m *SdyReqCreateDesk) String() string            { return proto.CompactTextString(m) }
func (*SdyReqCreateDesk) ProtoMessage()               {}
func (*SdyReqCreateDesk) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *SdyReqCreateDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyReqCreateDesk) GetRoomTypeInfo() *SdyBaseRoomTypeInfo {
	if m != nil {
		return m.RoomTypeInfo
	}
	return nil
}

// 创建房间回复的信息
type SdyAckCreateDesk struct {
	Header           *ProtoHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	DeskId           *int32               `protobuf:"varint,2,opt,name=deskId" json:"deskId,omitempty"`
	Password         *string              `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	UserBalance      *int64               `protobuf:"varint,4,opt,name=userBalance" json:"userBalance,omitempty"`
	CreateFee        *int64               `protobuf:"varint,5,opt,name=createFee" json:"createFee,omitempty"`
	RoomTypeInfo     *SdyBaseRoomTypeInfo `protobuf:"bytes,6,opt,name=roomTypeInfo" json:"roomTypeInfo,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *SdyAckCreateDesk) Reset()                    { *m = SdyAckCreateDesk{} }
func (m *SdyAckCreateDesk) String() string            { return proto.CompactTextString(m) }
func (*SdyAckCreateDesk) ProtoMessage()               {}
func (*SdyAckCreateDesk) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{1} }

func (m *SdyAckCreateDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyAckCreateDesk) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *SdyAckCreateDesk) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *SdyAckCreateDesk) GetUserBalance() int64 {
	if m != nil && m.UserBalance != nil {
		return *m.UserBalance
	}
	return 0
}

func (m *SdyAckCreateDesk) GetCreateFee() int64 {
	if m != nil && m.CreateFee != nil {
		return *m.CreateFee
	}
	return 0
}

func (m *SdyAckCreateDesk) GetRoomTypeInfo() *SdyBaseRoomTypeInfo {
	if m != nil {
		return m.RoomTypeInfo
	}
	return nil
}

// 客户端请求进入 room, 服务器返回SendGameInfo
type SdyReqEnterDesk struct {
	Header           *ProtoHeader          `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MatchId          *int32                `protobuf:"varint,2,opt,name=matchId" json:"matchId,omitempty"`
	TableId          *int32                `protobuf:"varint,3,opt,name=tableId" json:"tableId,omitempty"`
	PassWord         *string               `protobuf:"bytes,4,opt,name=PassWord" json:"PassWord,omitempty"`
	UserId           *uint32               `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	EnterType        *SdyEnumEnterType     `protobuf:"varint,6,opt,name=enterType,enum=yjprotogo.SdyEnumEnterType" json:"enterType,omitempty"`
	CoinRoomLevel    *SdyEnumCoinRoomLevel `protobuf:"varint,7,opt,name=coinRoomLevel,enum=yjprotogo.SdyEnumCoinRoomLevel" json:"coinRoomLevel,omitempty"`
	IsContinuous     *bool                 `protobuf:"varint,8,opt,name=isContinuous" json:"isContinuous,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *SdyReqEnterDesk) Reset()                    { *m = SdyReqEnterDesk{} }
func (m *SdyReqEnterDesk) String() string            { return proto.CompactTextString(m) }
func (*SdyReqEnterDesk) ProtoMessage()               {}
func (*SdyReqEnterDesk) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{2} }

func (m *SdyReqEnterDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyReqEnterDesk) GetMatchId() int32 {
	if m != nil && m.MatchId != nil {
		return *m.MatchId
	}
	return 0
}

func (m *SdyReqEnterDesk) GetTableId() int32 {
	if m != nil && m.TableId != nil {
		return *m.TableId
	}
	return 0
}

func (m *SdyReqEnterDesk) GetPassWord() string {
	if m != nil && m.PassWord != nil {
		return *m.PassWord
	}
	return ""
}

func (m *SdyReqEnterDesk) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyReqEnterDesk) GetEnterType() SdyEnumEnterType {
	if m != nil && m.EnterType != nil {
		return *m.EnterType
	}
	return SdyEnumEnterType_SDY_FRIEND
}

func (m *SdyReqEnterDesk) GetCoinRoomLevel() SdyEnumCoinRoomLevel {
	if m != nil && m.CoinRoomLevel != nil {
		return *m.CoinRoomLevel
	}
	return SdyEnumCoinRoomLevel_LEVEL_ROOKIE
}

func (m *SdyReqEnterDesk) GetIsContinuous() bool {
	if m != nil && m.IsContinuous != nil {
		return *m.IsContinuous
	}
	return false
}

type SdyAckEnterDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	IsContinuous     *bool        `protobuf:"varint,2,opt,name=isContinuous" json:"isContinuous,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyAckEnterDesk) Reset()                    { *m = SdyAckEnterDesk{} }
func (m *SdyAckEnterDesk) String() string            { return proto.CompactTextString(m) }
func (*SdyAckEnterDesk) ProtoMessage()               {}
func (*SdyAckEnterDesk) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{3} }

func (m *SdyAckEnterDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyAckEnterDesk) GetIsContinuous() bool {
	if m != nil && m.IsContinuous != nil {
		return *m.IsContinuous
	}
	return false
}

// 玩家离线时发的广播，广播谁离线了
type SdyBcUserBreak struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyBcUserBreak) Reset()                    { *m = SdyBcUserBreak{} }
func (m *SdyBcUserBreak) String() string            { return proto.CompactTextString(m) }
func (*SdyBcUserBreak) ProtoMessage()               {}
func (*SdyBcUserBreak) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{4} }

func (m *SdyBcUserBreak) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyBcUserBreak) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 房主解散房间的请求
type SdyReqDissolveDeskOwner struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyReqDissolveDeskOwner) Reset()                    { *m = SdyReqDissolveDeskOwner{} }
func (m *SdyReqDissolveDeskOwner) String() string            { return proto.CompactTextString(m) }
func (*SdyReqDissolveDeskOwner) ProtoMessage()               {}
func (*SdyReqDissolveDeskOwner) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{5} }

func (m *SdyReqDissolveDeskOwner) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyReqDissolveDeskOwner) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 房主请求解散房间的回复
type SdyBcDissolveDeskOwner struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	DeskId           *int32       `protobuf:"varint,3,opt,name=deskId" json:"deskId,omitempty"`
	PassWord         *string      `protobuf:"bytes,4,opt,name=passWord" json:"passWord,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyBcDissolveDeskOwner) Reset()                    { *m = SdyBcDissolveDeskOwner{} }
func (m *SdyBcDissolveDeskOwner) String() string            { return proto.CompactTextString(m) }
func (*SdyBcDissolveDeskOwner) ProtoMessage()               {}
func (*SdyBcDissolveDeskOwner) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{6} }

func (m *SdyBcDissolveDeskOwner) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyBcDissolveDeskOwner) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyBcDissolveDeskOwner) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *SdyBcDissolveDeskOwner) GetPassWord() string {
	if m != nil && m.PassWord != nil {
		return *m.PassWord
	}
	return ""
}

// 玩家申请解散房间的请求
type SdyReqApplyDissolveDeskApllyer struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyReqApplyDissolveDeskApllyer) Reset()                    { *m = SdyReqApplyDissolveDeskApllyer{} }
func (m *SdyReqApplyDissolveDeskApllyer) String() string            { return proto.CompactTextString(m) }
func (*SdyReqApplyDissolveDeskApllyer) ProtoMessage()               {}
func (*SdyReqApplyDissolveDeskApllyer) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{7} }

func (m *SdyReqApplyDissolveDeskApllyer) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyReqApplyDissolveDeskApllyer) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 广播是谁申请解散房间 的消息并且广播该玩家的结果（默认true）
type SdyBcApplyDissolveDeskApplyer struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Result           *bool        `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyBcApplyDissolveDeskApplyer) Reset()                    { *m = SdyBcApplyDissolveDeskApplyer{} }
func (m *SdyBcApplyDissolveDeskApplyer) String() string            { return proto.CompactTextString(m) }
func (*SdyBcApplyDissolveDeskApplyer) ProtoMessage()               {}
func (*SdyBcApplyDissolveDeskApplyer) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{8} }

func (m *SdyBcApplyDissolveDeskApplyer) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyBcApplyDissolveDeskApplyer) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyBcApplyDissolveDeskApplyer) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

// 玩家同意还是拒绝解散房间的请求
type SdyReqApplyDissolveDeskUser struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsAgree          *bool        `protobuf:"varint,3,opt,name=isAgree" json:"isAgree,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyReqApplyDissolveDeskUser) Reset()                    { *m = SdyReqApplyDissolveDeskUser{} }
func (m *SdyReqApplyDissolveDeskUser) String() string            { return proto.CompactTextString(m) }
func (*SdyReqApplyDissolveDeskUser) ProtoMessage()               {}
func (*SdyReqApplyDissolveDeskUser) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{9} }

func (m *SdyReqApplyDissolveDeskUser) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyReqApplyDissolveDeskUser) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyReqApplyDissolveDeskUser) GetIsAgree() bool {
	if m != nil && m.IsAgree != nil {
		return *m.IsAgree
	}
	return false
}

// 广播玩家同意还是拒绝
type SdyAckApplyDissolveDeskUser struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsAgree          *bool        `protobuf:"varint,3,opt,name=isAgree" json:"isAgree,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyAckApplyDissolveDeskUser) Reset()                    { *m = SdyAckApplyDissolveDeskUser{} }
func (m *SdyAckApplyDissolveDeskUser) String() string            { return proto.CompactTextString(m) }
func (*SdyAckApplyDissolveDeskUser) ProtoMessage()               {}
func (*SdyAckApplyDissolveDeskUser) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{10} }

func (m *SdyAckApplyDissolveDeskUser) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyAckApplyDissolveDeskUser) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyAckApplyDissolveDeskUser) GetIsAgree() bool {
	if m != nil && m.IsAgree != nil {
		return *m.IsAgree
	}
	return false
}

// 离开房间的请求
type SdyReqLeaveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	IsExchange       *bool        `protobuf:"varint,2,opt,name=isExchange" json:"isExchange,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyReqLeaveDesk) Reset()                    { *m = SdyReqLeaveDesk{} }
func (m *SdyReqLeaveDesk) String() string            { return proto.CompactTextString(m) }
func (*SdyReqLeaveDesk) ProtoMessage()               {}
func (*SdyReqLeaveDesk) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{11} }

func (m *SdyReqLeaveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyReqLeaveDesk) GetIsExchange() bool {
	if m != nil && m.IsExchange != nil {
		return *m.IsExchange
	}
	return false
}

// 离开房间的回复
type SdyAckLeaveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsExchange       *bool        `protobuf:"varint,3,opt,name=isExchange" json:"isExchange,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyAckLeaveDesk) Reset()                    { *m = SdyAckLeaveDesk{} }
func (m *SdyAckLeaveDesk) String() string            { return proto.CompactTextString(m) }
func (*SdyAckLeaveDesk) ProtoMessage()               {}
func (*SdyAckLeaveDesk) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{12} }

func (m *SdyAckLeaveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyAckLeaveDesk) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyAckLeaveDesk) GetIsExchange() bool {
	if m != nil && m.IsExchange != nil {
		return *m.IsExchange
	}
	return false
}

// 发送消息的请求
type SdyReqSendMessage struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MsgType          *int32       `protobuf:"varint,2,opt,name=msgType" json:"msgType,omitempty"`
	Id               *int32       `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Msg              *string      `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	DeskId           *uint32      `protobuf:"varint,6,opt,name=deskId" json:"deskId,omitempty"`
	ToUserId         *uint32      `protobuf:"varint,7,opt,name=toUserId" json:"toUserId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyReqSendMessage) Reset()                    { *m = SdyReqSendMessage{} }
func (m *SdyReqSendMessage) String() string            { return proto.CompactTextString(m) }
func (*SdyReqSendMessage) ProtoMessage()               {}
func (*SdyReqSendMessage) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{13} }

func (m *SdyReqSendMessage) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyReqSendMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *SdyReqSendMessage) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SdyReqSendMessage) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *SdyReqSendMessage) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyReqSendMessage) GetDeskId() uint32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *SdyReqSendMessage) GetToUserId() uint32 {
	if m != nil && m.ToUserId != nil {
		return *m.ToUserId
	}
	return 0
}

// 发送消息的回复
type SdyAckSendMessage struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MsgType          *int32       `protobuf:"varint,2,opt,name=msgType" json:"msgType,omitempty"`
	Id               *int32       `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Msg              *string      `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	ToUserId         *uint32      `protobuf:"varint,6,opt,name=toUserId" json:"toUserId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyAckSendMessage) Reset()                    { *m = SdyAckSendMessage{} }
func (m *SdyAckSendMessage) String() string            { return proto.CompactTextString(m) }
func (*SdyAckSendMessage) ProtoMessage()               {}
func (*SdyAckSendMessage) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{14} }

func (m *SdyAckSendMessage) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyAckSendMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *SdyAckSendMessage) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *SdyAckSendMessage) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *SdyAckSendMessage) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyAckSendMessage) GetToUserId() uint32 {
	if m != nil && m.ToUserId != nil {
		return *m.ToUserId
	}
	return 0
}

func init() {
	proto.RegisterType((*SdyReqCreateDesk)(nil), "yjprotogo.sdy_req_createDesk")
	proto.RegisterType((*SdyAckCreateDesk)(nil), "yjprotogo.sdy_ack_createDesk")
	proto.RegisterType((*SdyReqEnterDesk)(nil), "yjprotogo.sdy_req_enterDesk")
	proto.RegisterType((*SdyAckEnterDesk)(nil), "yjprotogo.sdy_ack_enterDesk")
	proto.RegisterType((*SdyBcUserBreak)(nil), "yjprotogo.sdy_bc_userBreak")
	proto.RegisterType((*SdyReqDissolveDeskOwner)(nil), "yjprotogo.sdy_req_dissolveDeskOwner")
	proto.RegisterType((*SdyBcDissolveDeskOwner)(nil), "yjprotogo.sdy_bc_dissolveDeskOwner")
	proto.RegisterType((*SdyReqApplyDissolveDeskApllyer)(nil), "yjprotogo.sdy_req_applyDissolveDeskApllyer")
	proto.RegisterType((*SdyBcApplyDissolveDeskApplyer)(nil), "yjprotogo.sdy_bc_applyDissolveDeskApplyer")
	proto.RegisterType((*SdyReqApplyDissolveDeskUser)(nil), "yjprotogo.sdy_req_applyDissolveDeskUser")
	proto.RegisterType((*SdyAckApplyDissolveDeskUser)(nil), "yjprotogo.sdy_ack_applyDissolveDeskUser")
	proto.RegisterType((*SdyReqLeaveDesk)(nil), "yjprotogo.sdy_req_leaveDesk")
	proto.RegisterType((*SdyAckLeaveDesk)(nil), "yjprotogo.sdy_ack_leaveDesk")
	proto.RegisterType((*SdyReqSendMessage)(nil), "yjprotogo.sdy_req_sendMessage")
	proto.RegisterType((*SdyAckSendMessage)(nil), "yjprotogo.sdy_ack_sendMessage")
}

var fileDescriptor8 = []byte{
	// 579 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xbc, 0x54, 0x4f, 0x6f, 0xd3, 0x4e,
	0x10, 0xfd, 0x25, 0x69, 0xf3, 0x67, 0xd2, 0xe4, 0xd7, 0x6e, 0x10, 0x32, 0x95, 0x2a, 0x82, 0x0f,
	0x88, 0x53, 0x84, 0x7a, 0x40, 0x5c, 0x5b, 0x0a, 0x6a, 0x10, 0xa8, 0xe1, 0x4f, 0x85, 0xc4, 0xc5,
	0xda, 0xda, 0x43, 0x62, 0xba, 0xd9, 0x35, 0x5e, 0x27, 0x25, 0x47, 0x8e, 0x7c, 0x04, 0xbe, 0x0c,
	0x9f, 0x8d, 0xdd, 0x71, 0x9c, 0x38, 0x51, 0x2b, 0xe1, 0x06, 0x38, 0x25, 0x9e, 0x7d, 0x3b, 0xef,
	0xbd, 0x99, 0xd9, 0x81, 0xb6, 0x0e, 0x66, 0xde, 0x88, 0x0b, 0xd1, 0x8b, 0x62, 0x95, 0x28, 0xd6,
	0x98, 0x7d, 0xa6, 0x3f, 0x43, 0xb5, 0xdf, 0xf1, 0xd5, 0x78, 0xac, 0xa4, 0xe7, 0x8b, 0x10, 0x65,
	0x92, 0x9e, 0xef, 0x13, 0xfe, 0x82, 0x6b, 0x4c, 0xbf, 0xdd, 0x04, 0x98, 0x8d, 0xc4, 0xf8, 0xc5,
	0xf3, 0x63, 0xe4, 0x09, 0x9e, 0xa0, 0xbe, 0x64, 0x0f, 0xa1, 0x3a, 0x42, 0x1e, 0x60, 0xec, 0x94,
	0xba, 0xa5, 0x47, 0xcd, 0xc3, 0xbb, 0xbd, 0x45, 0xda, 0xde, 0xc0, 0xfe, 0x9e, 0xd2, 0x29, 0x7b,
	0x02, 0x3b, 0xb1, 0x52, 0xe3, 0xf7, 0xb3, 0x08, 0xfb, 0xf2, 0x93, 0x72, 0xca, 0x84, 0xee, 0xe6,
	0xd0, 0x19, 0x9d, 0x97, 0xc7, 0xb9, 0x3f, 0x4b, 0x29, 0x2d, 0xf7, 0x2f, 0x6f, 0x43, 0xdb, 0x86,
	0x6a, 0x60, 0xf0, 0xfd, 0x80, 0x08, 0xb7, 0xd9, 0x2e, 0xd4, 0x23, 0xae, 0xf5, 0x95, 0x8a, 0x03,
	0xa7, 0x62, 0x22, 0x0d, 0xd6, 0x81, 0xe6, 0x44, 0x63, 0x7c, 0xcc, 0x05, 0x97, 0x3e, 0x3a, 0x5b,
	0x26, 0x58, 0x61, 0x7b, 0xd0, 0x48, 0xc9, 0x5e, 0x20, 0x3a, 0xdb, 0x14, 0x5a, 0x37, 0x50, 0xfd,
	0x4d, 0x03, 0xdf, 0xca, 0xb0, 0x97, 0xd5, 0xcd, 0x14, 0x17, 0xe3, 0x42, 0xfa, 0xff, 0x87, 0xda,
	0x98, 0x27, 0xfe, 0x68, 0x61, 0xc0, 0x04, 0x12, 0x7e, 0x21, 0xb0, 0x9f, 0xea, 0x27, 0x47, 0x03,
	0xe3, 0xe8, 0x83, 0x75, 0xb4, 0x45, 0x8e, 0x8c, 0x67, 0xeb, 0xc8, 0x20, 0xac, 0xf2, 0x16, 0x7b,
	0x0c, 0x0d, 0x22, 0xb6, 0x92, 0x48, 0x76, 0xfb, 0xf0, 0x60, 0x4d, 0x36, 0xca, 0xc9, 0xd8, 0x5b,
	0x80, 0xd8, 0x53, 0x68, 0xf9, 0x2a, 0x94, 0x6f, 0x8d, 0x8f, 0x57, 0x38, 0x45, 0xe1, 0xd4, 0xe8,
	0xd6, 0x83, 0xeb, 0x6e, 0xad, 0x00, 0xd9, 0x1d, 0xd8, 0x09, 0xf5, 0x33, 0x25, 0x93, 0x50, 0x4e,
	0xd4, 0x44, 0x3b, 0x75, 0x73, 0xb1, 0xee, 0xbe, 0x49, 0x4b, 0x60, 0x7b, 0x58, 0xbc, 0x04, 0xeb,
	0x29, 0xcb, 0x94, 0xf2, 0x25, 0xec, 0x52, 0xbd, 0x7d, 0x8f, 0xba, 0x67, 0x9a, 0x55, 0x68, 0x28,
	0xe6, 0x05, 0xb2, 0xb9, 0x5a, 0xee, 0x3b, 0xb8, 0x97, 0x75, 0x28, 0x08, 0xb5, 0x56, 0x62, 0x4a,
	0x43, 0x76, 0x76, 0x25, 0x0d, 0xf8, 0xb6, 0x49, 0x13, 0x70, 0xe6, 0x02, 0xff, 0x58, 0xce, 0xdc,
	0x34, 0x57, 0xf2, 0xd3, 0xbc, 0xec, 0xbd, 0xfb, 0x11, 0xba, 0x99, 0x15, 0x1e, 0x45, 0x62, 0x76,
	0x92, 0xe3, 0x3e, 0x8a, 0x84, 0x98, 0x6d, 0xe0, 0x28, 0x84, 0xfb, 0x73, 0x47, 0xd7, 0xa4, 0x8e,
	0x36, 0x49, 0x6d, 0xbf, 0x63, 0xd4, 0x13, 0x91, 0x90, 0xb1, 0xba, 0x3b, 0x82, 0x83, 0x1b, 0x6d,
	0x9c, 0xeb, 0x0d, 0x88, 0xcc, 0xf3, 0x09, 0xf5, 0xd1, 0x30, 0x36, 0xcf, 0x7a, 0x85, 0xc9, 0x8e,
	0xe6, 0x5f, 0x66, 0x3a, 0x5b, 0xee, 0x01, 0x81, 0x7c, 0x5a, 0x6c, 0x8f, 0x31, 0x80, 0x50, 0x3f,
	0xff, 0xea, 0x8f, 0xb8, 0x1c, 0xe2, 0xfc, 0x09, 0x78, 0xcb, 0x57, 0x55, 0x3c, 0xe1, 0xba, 0xdc,
	0x55, 0x82, 0x54, 0xf1, 0x8f, 0x12, 0x74, 0x32, 0xc9, 0x1a, 0x65, 0xf0, 0x1a, 0xb5, 0xe6, 0x43,
	0x2c, 0xb4, 0xbc, 0xf4, 0x90, 0xd6, 0x4e, 0xba, 0xbc, 0x00, 0xca, 0x61, 0x36, 0xbb, 0x4d, 0xa8,
	0x98, 0xc3, 0x1b, 0x56, 0xd6, 0x72, 0xd0, 0xab, 0xf4, 0x6d, 0x06, 0x3d, 0x51, 0xe7, 0x29, 0xa2,
	0x46, 0xc3, 0xf8, 0x7d, 0xae, 0xcd, 0xba, 0xff, 0xb7, 0xda, 0xf2, 0x5a, 0x48, 0xdd, 0x71, 0xf9,
	0xb4, 0x32, 0xf8, 0x6f, 0x50, 0xfa, 0x15, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x59, 0x03, 0x43, 0x62,
	0x07, 0x00, 0x00,
}
