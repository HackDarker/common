// Code generated by protoc-gen-go.
// source: hall_playback.proto
// DO NOT EDIT!

package yjprotogo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_reg from common_client.proto

// Ignoring public import of common_ack_reg from common_client.proto

// Ignoring public import of cm_offline from common_client.proto

// Ignoring public import of cm_hearbeat from common_client.proto

// Ignoring public import of common_enum_reg from common_client.proto

// Ignoring public import of common_enum_os_type from common_client.proto

// Ignoring public import of user_coin_bean from mj_changchun_base.proto

// Ignoring public import of RoomTypeInfo from mj_changchun_base.proto

// Ignoring public import of EndLotteryInfo from mj_changchun_base.proto

// Ignoring public import of PlayOptions from mj_changchun_base.proto

// Ignoring public import of DeskGameInfo from mj_changchun_base.proto

// Ignoring public import of PlayerInfo from mj_changchun_base.proto

// Ignoring public import of CardInfo from mj_changchun_base.proto

// Ignoring public import of ComposeCard from mj_changchun_base.proto

// Ignoring public import of PlayerCard from mj_changchun_base.proto

// Ignoring public import of WinCoinInfo from mj_changchun_base.proto

// Ignoring public import of ccmj_protoId from mj_changchun_base.proto

// Ignoring public import of RECONNECT_TYPE from mj_changchun_base.proto

// Ignoring public import of ComposeCardType from mj_changchun_base.proto

// Ignoring public import of DeskGameStatus from mj_changchun_base.proto

// Ignoring public import of PaiType from mj_changchun_base.proto

// Ignoring public import of MJRoomType from mj_changchun_base.proto

// 麻将的操作类型
type PlaybackMjActType int32

const (
	PlaybackMjActType_PMAT_MO        PlaybackMjActType = 1
	PlaybackMjActType_PMAT_OUT       PlaybackMjActType = 2
	PlaybackMjActType_PMAT_PENG      PlaybackMjActType = 3
	PlaybackMjActType_PMAT_GANG_BA   PlaybackMjActType = 4
	PlaybackMjActType_PMAT_GANG_AN   PlaybackMjActType = 5
	PlaybackMjActType_PMAT_GANG_DIAN PlaybackMjActType = 6
	PlaybackMjActType_PMAT_CHI       PlaybackMjActType = 7
	PlaybackMjActType_PMAT_HU        PlaybackMjActType = 8
	PlaybackMjActType_PMAT_BU        PlaybackMjActType = 9
	PlaybackMjActType_PMAT_BU_XIA    PlaybackMjActType = 10
)

var PlaybackMjActType_name = map[int32]string{
	1:  "PMAT_MO",
	2:  "PMAT_OUT",
	3:  "PMAT_PENG",
	4:  "PMAT_GANG_BA",
	5:  "PMAT_GANG_AN",
	6:  "PMAT_GANG_DIAN",
	7:  "PMAT_CHI",
	8:  "PMAT_HU",
	9:  "PMAT_BU",
	10: "PMAT_BU_XIA",
}
var PlaybackMjActType_value = map[string]int32{
	"PMAT_MO":        1,
	"PMAT_OUT":       2,
	"PMAT_PENG":      3,
	"PMAT_GANG_BA":   4,
	"PMAT_GANG_AN":   5,
	"PMAT_GANG_DIAN": 6,
	"PMAT_CHI":       7,
	"PMAT_HU":        8,
	"PMAT_BU":        9,
	"PMAT_BU_XIA":    10,
}

func (x PlaybackMjActType) Enum() *PlaybackMjActType {
	p := new(PlaybackMjActType)
	*p = x
	return p
}
func (x PlaybackMjActType) String() string {
	return proto.EnumName(PlaybackMjActType_name, int32(x))
}
func (x *PlaybackMjActType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlaybackMjActType_value, data, "PlaybackMjActType")
	if err != nil {
		return err
	}
	*x = PlaybackMjActType(value)
	return nil
}
func (PlaybackMjActType) EnumDescriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

// Start： 201704142049 下面是麻将回放的 Proto
// 当前页显示记录：第（length * page）条 到 第（length * (page + 1) - 1）条
type PlaybackReqPage struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Length           *int32       `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	Page             *int32       `protobuf:"varint,3,opt,name=page" json:"page,omitempty"`
	GameNumber       *int32       `protobuf:"varint,4,opt,name=gameNumber" json:"gameNumber,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PlaybackReqPage) Reset()                    { *m = PlaybackReqPage{} }
func (m *PlaybackReqPage) String() string            { return proto.CompactTextString(m) }
func (*PlaybackReqPage) ProtoMessage()               {}
func (*PlaybackReqPage) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{0} }

func (m *PlaybackReqPage) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PlaybackReqPage) GetLength() int32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *PlaybackReqPage) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *PlaybackReqPage) GetGameNumber() int32 {
	if m != nil && m.GameNumber != nil {
		return *m.GameNumber
	}
	return 0
}

type PlaybackAckPage struct {
	Header *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// 分页信息
	Length *int32 `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	Page   *int32 `protobuf:"varint,3,opt,name=page" json:"page,omitempty"`
	Total  *int32 `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	// 快照信息
	PlaybackSnapshots []*PlaybackSnapshot `protobuf:"bytes,5,rep,name=playbackSnapshots" json:"playbackSnapshots,omitempty"`
	XXX_unrecognized  []byte              `json:"-"`
}

func (m *PlaybackAckPage) Reset()                    { *m = PlaybackAckPage{} }
func (m *PlaybackAckPage) String() string            { return proto.CompactTextString(m) }
func (*PlaybackAckPage) ProtoMessage()               {}
func (*PlaybackAckPage) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{1} }

func (m *PlaybackAckPage) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PlaybackAckPage) GetLength() int32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *PlaybackAckPage) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *PlaybackAckPage) GetTotal() int32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *PlaybackAckPage) GetPlaybackSnapshots() []*PlaybackSnapshot {
	if m != nil {
		return m.PlaybackSnapshots
	}
	return nil
}

// 回放快照信息（包含玩家信息、桌面信息、房间信息、右上角时间信息等），另外包含协议信息（PID 和 二进制数据）
type PlaybackSnapshot struct {
	PlayerInfo       []*PlayerInfo     `protobuf:"bytes,1,rep,name=playerInfo" json:"playerInfo,omitempty"`
	PlayBackDeskInfo *PlaybackDeskInfo `protobuf:"bytes,2,opt,name=playBackDeskInfo" json:"playBackDeskInfo,omitempty"`
	RoomTypeInfo     *RoomTypeInfo     `protobuf:"bytes,3,opt,name=RoomTypeInfo" json:"RoomTypeInfo,omitempty"`
	Time             *string           `protobuf:"bytes,4,opt,name=time" json:"time,omitempty"`
	OverturnType     *int32            `protobuf:"varint,5,opt,name=overturnType" json:"overturnType,omitempty"`
	Userid           *uint32           `protobuf:"varint,6,opt,name=userid" json:"userid,omitempty"`
	UseridOut        *uint32           `protobuf:"varint,7,opt,name=useridOut" json:"useridOut,omitempty"`
	Cardinfo         []*CardInfo       `protobuf:"bytes,8,rep,name=cardinfo" json:"cardinfo,omitempty"`
	Humsg            *string           `protobuf:"bytes,9,opt,name=humsg" json:"humsg,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *PlaybackSnapshot) Reset()                    { *m = PlaybackSnapshot{} }
func (m *PlaybackSnapshot) String() string            { return proto.CompactTextString(m) }
func (*PlaybackSnapshot) ProtoMessage()               {}
func (*PlaybackSnapshot) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{2} }

func (m *PlaybackSnapshot) GetPlayerInfo() []*PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *PlaybackSnapshot) GetPlayBackDeskInfo() *PlaybackDeskInfo {
	if m != nil {
		return m.PlayBackDeskInfo
	}
	return nil
}

func (m *PlaybackSnapshot) GetRoomTypeInfo() *RoomTypeInfo {
	if m != nil {
		return m.RoomTypeInfo
	}
	return nil
}

func (m *PlaybackSnapshot) GetTime() string {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return ""
}

func (m *PlaybackSnapshot) GetOverturnType() int32 {
	if m != nil && m.OverturnType != nil {
		return *m.OverturnType
	}
	return 0
}

func (m *PlaybackSnapshot) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *PlaybackSnapshot) GetUseridOut() uint32 {
	if m != nil && m.UseridOut != nil {
		return *m.UseridOut
	}
	return 0
}

func (m *PlaybackSnapshot) GetCardinfo() []*CardInfo {
	if m != nil {
		return m.Cardinfo
	}
	return nil
}

func (m *PlaybackSnapshot) GetHumsg() string {
	if m != nil && m.Humsg != nil {
		return *m.Humsg
	}
	return ""
}

// 按霄霄需求的【回放桌面信息】
type PlaybackDeskInfo struct {
	GameStatus       *int32  `protobuf:"varint,1,opt,name=GameStatus" json:"GameStatus,omitempty"`
	PlayerNum        *int32  `protobuf:"varint,2,opt,name=playerNum" json:"playerNum,omitempty"`
	ActiveUserId     *uint32 `protobuf:"varint,3,opt,name=activeUserId" json:"activeUserId,omitempty"`
	DeskInfo         *string `protobuf:"bytes,4,opt,name=deskInfo" json:"deskInfo,omitempty"`
	RemainCards      *int32  `protobuf:"varint,5,opt,name=remainCards" json:"remainCards,omitempty"`
	Time             *string `protobuf:"bytes,6,opt,name=time" json:"time,omitempty"`
	RoomType         *int32  `protobuf:"varint,7,opt,name=roomType" json:"roomType,omitempty"`
	RoomNumber       *string `protobuf:"bytes,8,opt,name=roomNumber" json:"roomNumber,omitempty"`
	CurrPlayCount    *int32  `protobuf:"varint,9,opt,name=currPlayCount" json:"currPlayCount,omitempty"`
	TotalPlayCount   *int32  `protobuf:"varint,10,opt,name=totalPlayCount" json:"totalPlayCount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlaybackDeskInfo) Reset()                    { *m = PlaybackDeskInfo{} }
func (m *PlaybackDeskInfo) String() string            { return proto.CompactTextString(m) }
func (*PlaybackDeskInfo) ProtoMessage()               {}
func (*PlaybackDeskInfo) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{3} }

func (m *PlaybackDeskInfo) GetGameStatus() int32 {
	if m != nil && m.GameStatus != nil {
		return *m.GameStatus
	}
	return 0
}

func (m *PlaybackDeskInfo) GetPlayerNum() int32 {
	if m != nil && m.PlayerNum != nil {
		return *m.PlayerNum
	}
	return 0
}

func (m *PlaybackDeskInfo) GetActiveUserId() uint32 {
	if m != nil && m.ActiveUserId != nil {
		return *m.ActiveUserId
	}
	return 0
}

func (m *PlaybackDeskInfo) GetDeskInfo() string {
	if m != nil && m.DeskInfo != nil {
		return *m.DeskInfo
	}
	return ""
}

func (m *PlaybackDeskInfo) GetRemainCards() int32 {
	if m != nil && m.RemainCards != nil {
		return *m.RemainCards
	}
	return 0
}

func (m *PlaybackDeskInfo) GetTime() string {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return ""
}

func (m *PlaybackDeskInfo) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

func (m *PlaybackDeskInfo) GetRoomNumber() string {
	if m != nil && m.RoomNumber != nil {
		return *m.RoomNumber
	}
	return ""
}

func (m *PlaybackDeskInfo) GetCurrPlayCount() int32 {
	if m != nil && m.CurrPlayCount != nil {
		return *m.CurrPlayCount
	}
	return 0
}

func (m *PlaybackDeskInfo) GetTotalPlayCount() int32 {
	if m != nil && m.TotalPlayCount != nil {
		return *m.TotalPlayCount
	}
	return 0
}

// 一项回放记录
type PlaybackItem struct {
	Id *uint32 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// optional common_enum_game gameId = 2; // 回放记录 游戏类型，显示用
	GameId           *uint32 `protobuf:"varint,2,opt,name=gameId" json:"gameId,omitempty"`
	Time             *string `protobuf:"bytes,3,opt,name=time" json:"time,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PlaybackItem) Reset()                    { *m = PlaybackItem{} }
func (m *PlaybackItem) String() string            { return proto.CompactTextString(m) }
func (*PlaybackItem) ProtoMessage()               {}
func (*PlaybackItem) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{4} }

func (m *PlaybackItem) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PlaybackItem) GetGameId() uint32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *PlaybackItem) GetTime() string {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return ""
}

// 为了不修改原有的协议 这里新增一个通用的请求协议
// 请求各个游戏回放的协议
type PlaybackReqPageByGameid struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Length           *int32       `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	Page             *int32       `protobuf:"varint,3,opt,name=page" json:"page,omitempty"`
	GameNumber       *int32       `protobuf:"varint,4,opt,name=gameNumber" json:"gameNumber,omitempty"`
	GameId           *int32       `protobuf:"varint,5,opt,name=gameId" json:"gameId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PlaybackReqPageByGameid) Reset()                    { *m = PlaybackReqPageByGameid{} }
func (m *PlaybackReqPageByGameid) String() string            { return proto.CompactTextString(m) }
func (*PlaybackReqPageByGameid) ProtoMessage()               {}
func (*PlaybackReqPageByGameid) Descriptor() ([]byte, []int) { return fileDescriptor7, []int{5} }

func (m *PlaybackReqPageByGameid) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PlaybackReqPageByGameid) GetLength() int32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *PlaybackReqPageByGameid) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *PlaybackReqPageByGameid) GetGameNumber() int32 {
	if m != nil && m.GameNumber != nil {
		return *m.GameNumber
	}
	return 0
}

func (m *PlaybackReqPageByGameid) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func init() {
	proto.RegisterType((*PlaybackReqPage)(nil), "yjprotogo.playback_req_page")
	proto.RegisterType((*PlaybackAckPage)(nil), "yjprotogo.playback_ack_page")
	proto.RegisterType((*PlaybackSnapshot)(nil), "yjprotogo.PlaybackSnapshot")
	proto.RegisterType((*PlaybackDeskInfo)(nil), "yjprotogo.PlaybackDeskInfo")
	proto.RegisterType((*PlaybackItem)(nil), "yjprotogo.PlaybackItem")
	proto.RegisterType((*PlaybackReqPageByGameid)(nil), "yjprotogo.playback_req_page_by_gameid")
	proto.RegisterEnum("yjprotogo.PlaybackMjActType", PlaybackMjActType_name, PlaybackMjActType_value)
}

var fileDescriptor7 = []byte{
	// 615 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xb4, 0x53, 0xdd, 0x6e, 0x12, 0x41,
	0x14, 0x76, 0xa1, 0x50, 0x38, 0x40, 0x9d, 0x0e, 0xfd, 0xd9, 0xb4, 0x37, 0x0d, 0x89, 0x46, 0x4d,
	0xec, 0x85, 0x89, 0xc6, 0x5b, 0xda, 0x1a, 0xca, 0x45, 0x29, 0xb1, 0x25, 0xf1, 0x6e, 0x32, 0x2c,
	0x23, 0xbb, 0x2d, 0xbb, 0x83, 0xb3, 0xb3, 0x4d, 0x78, 0x02, 0x5f, 0xa3, 0xaf, 0xe0, 0xe3, 0xf8,
	0x36, 0x9e, 0x39, 0xcb, 0xcf, 0x5a, 0xbd, 0xd4, 0x8b, 0xa6, 0x9c, 0xdf, 0xef, 0x67, 0xce, 0x42,
	0x3b, 0x94, 0xb3, 0x99, 0x98, 0xcf, 0xe4, 0x62, 0x2c, 0x83, 0xfb, 0xd3, 0xb9, 0xd1, 0x56, 0xf3,
	0xfa, 0xe2, 0x8e, 0x7e, 0x4c, 0xf5, 0x51, 0x3b, 0xd0, 0x71, 0xac, 0x13, 0x11, 0xcc, 0x22, 0x95,
	0xd8, 0xbc, 0x7e, 0x74, 0x18, 0xdf, 0x89, 0x20, 0x94, 0xc9, 0x34, 0x08, 0xb3, 0x44, 0x8c, 0x65,
	0xaa, 0xf2, 0x42, 0x27, 0x86, 0xdd, 0xd5, 0x2a, 0x61, 0xd4, 0x37, 0x31, 0x97, 0x53, 0xc5, 0x5f,
	0x42, 0x35, 0x54, 0x72, 0xa2, 0x8c, 0xef, 0x9d, 0x78, 0xaf, 0x1a, 0xef, 0x0e, 0x4e, 0xd7, 0xeb,
	0x4f, 0x87, 0xee, 0xff, 0x25, 0x55, 0xf9, 0x0e, 0x54, 0x67, 0x2a, 0x99, 0xda, 0xd0, 0x2f, 0x61,
	0x5f, 0x85, 0x37, 0x61, 0xcb, 0xcd, 0xfb, 0x65, 0x8a, 0x38, 0xc0, 0x54, 0xc6, 0x6a, 0x90, 0xc5,
	0x63, 0xdc, 0xb4, 0xe5, 0x72, 0x9d, 0x47, 0xaf, 0x80, 0xe7, 0xfe, 0xfe, 0x21, 0x5e, 0x0b, 0x2a,
	0x56, 0x5b, 0x39, 0xcb, 0xa1, 0xf8, 0x87, 0x0d, 0xd2, 0x4d, 0x22, 0xe7, 0x69, 0xa8, 0x6d, 0xea,
	0x57, 0x4e, 0xca, 0xb8, 0xff, 0xb8, 0xb8, 0xff, 0x49, 0x4f, 0xe7, 0xb1, 0x04, 0xec, 0x69, 0x92,
	0xbf, 0x06, 0x70, 0xcb, 0x94, 0xe9, 0x27, 0x5f, 0x35, 0xb2, 0x74, 0x5b, 0xf6, 0x9f, 0x6c, 0xc9,
	0x8b, 0xfc, 0x3d, 0x30, 0xd7, 0x7a, 0x86, 0xe3, 0x17, 0x2a, 0xbd, 0xa7, 0x81, 0x12, 0xc9, 0xfa,
	0x1b, 0xec, 0xaa, 0x85, 0xbf, 0x85, 0xe6, 0x67, 0xad, 0xe3, 0xdb, 0xc5, 0x5c, 0xd1, 0x48, 0x99,
	0x46, 0x0e, 0x0b, 0x23, 0xc5, 0xb2, 0x93, 0x6e, 0xa3, 0x58, 0x91, 0xd6, 0x3a, 0xdf, 0x83, 0xa6,
	0x7e, 0x50, 0xc6, 0x66, 0x26, 0x71, 0x1d, 0x28, 0xd3, 0x39, 0x80, 0x76, 0x65, 0xa9, 0x32, 0xd1,
	0xc4, 0xaf, 0x62, 0xdc, 0xe2, 0xbb, 0x50, 0xcf, 0xe3, 0xeb, 0xcc, 0xfa, 0xdb, 0x94, 0x7a, 0x01,
	0xb5, 0x40, 0x9a, 0x49, 0xe4, 0x10, 0x6b, 0xa4, 0xaa, 0x5d, 0x40, 0x3c, 0xc7, 0x12, 0xa1, 0xa1,
	0xb5, 0x61, 0x16, 0xa7, 0x53, 0xbf, 0xee, 0xe0, 0x3a, 0x3f, 0xbd, 0x8d, 0x45, 0x6b, 0x01, 0xf8,
	0xdc, 0x3d, 0x7c, 0xee, 0x1b, 0x2b, 0x6d, 0x96, 0xd2, 0x43, 0x56, 0x1c, 0x62, 0x6e, 0x1b, 0x1e,
	0xc1, 0xf2, 0xcd, 0x90, 0xaa, 0x0c, 0x6c, 0xf4, 0xa0, 0x46, 0x48, 0xa5, 0x3f, 0x21, 0x9d, 0x2d,
	0xce, 0xa0, 0x36, 0x59, 0x99, 0x95, 0x4b, 0x6a, 0x43, 0xc3, 0xa8, 0x58, 0x46, 0x89, 0x23, 0x91,
	0x2e, 0x15, 0xad, 0x54, 0x57, 0xa9, 0x05, 0x87, 0xcc, 0xd2, 0x13, 0x92, 0x43, 0x27, 0xe7, 0x32,
	0xcb, 0x93, 0xab, 0x51, 0xd7, 0x3e, 0xb4, 0x82, 0xcc, 0x18, 0xc7, 0xf7, 0x5c, 0x67, 0x89, 0x25,
	0x0d, 0x15, 0x7e, 0x00, 0x3b, 0x74, 0x2d, 0x9b, 0x3c, 0xd0, 0x85, 0x7e, 0x84, 0xe6, 0x4a, 0x5a,
	0xdf, 0xaa, 0x18, 0x37, 0x96, 0xd0, 0x40, 0x8f, 0x58, 0xa2, 0xa1, 0xee, 0xa2, 0x91, 0x75, 0x89,
	0xe2, 0x15, 0x9d, 0x32, 0xb9, 0xf2, 0xdd, 0x83, 0xe3, 0x3f, 0xbe, 0x25, 0x31, 0x5e, 0x08, 0x37,
	0x13, 0x4d, 0xfe, 0xdf, 0x57, 0x55, 0xe0, 0x45, 0x36, 0xbd, 0xf9, 0xe1, 0xc1, 0xde, 0x9a, 0x09,
	0x7e, 0xf9, 0x68, 0xb8, 0xb0, 0xe8, 0x12, 0x6f, 0xc0, 0xf6, 0xf0, 0xaa, 0x7b, 0x2b, 0xae, 0xae,
	0x99, 0x87, 0x7b, 0x6b, 0x14, 0x5c, 0x8f, 0x6e, 0x59, 0x09, 0x9f, 0xb8, 0x4e, 0xd1, 0xf0, 0xd3,
	0xa0, 0xc7, 0xca, 0xe8, 0x6d, 0x93, 0xc2, 0x5e, 0x77, 0xd0, 0x13, 0x67, 0x5d, 0xb6, 0xf5, 0x7b,
	0xa6, 0x3b, 0x60, 0x8e, 0xca, 0xce, 0x26, 0x73, 0xd1, 0xc7, 0x5c, 0x75, 0xbd, 0xf4, 0xfc, 0xb2,
	0xcf, 0xb6, 0xd7, 0x78, 0x97, 0x23, 0x56, 0x5b, 0x07, 0x67, 0x23, 0x56, 0xe7, 0xcf, 0xa1, 0xb1,
	0x0c, 0xc4, 0x97, 0x7e, 0x97, 0xc1, 0xf0, 0xd9, 0xd0, 0xfb, 0x15, 0x00, 0x00, 0xff, 0xff, 0x6e,
	0x6a, 0x13, 0xd0, 0xdb, 0x04, 0x00, 0x00,
}
