// Code generated by protoc-gen-go.
// source: sdy_play.proto
// DO NOT EDIT!

package yjprotogo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of cm_offline from common_client.proto

// Ignoring public import of cm_hearbeat from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of sdy_base_roomTypeInfo from sdy_base.proto

// Ignoring public import of sdy_base_timerInfo from sdy_base.proto

// Ignoring public import of sdy_base_playerInfo from sdy_base.proto

// Ignoring public import of sdy_base_commonRateInfo from sdy_base.proto

// Ignoring public import of sdy_base_deskInfo from sdy_base.proto

// Ignoring public import of sdy_enum_protoId from sdy_base.proto

// Ignoring public import of pdk_enum_errorCode from sdy_base.proto

// Ignoring public import of sdy_enum_actType from sdy_base.proto

// Ignoring public import of sdy_enum_deskStatus from sdy_base.proto

// Ignoring public import of sdy_enum_userStatus from sdy_base.proto

// Ignoring public import of sdy_enum_enterType from sdy_base.proto

// Ignoring public import of sdy_enum_Option from sdy_base.proto

type SdyEnumJdScore int32

const (
	SdyEnumJdScore_SDY_SIXTY       SdyEnumJdScore = 1
	SdyEnumJdScore_SDY_SIXTYFIVE   SdyEnumJdScore = 2
	SdyEnumJdScore_SDY_SEVENTY     SdyEnumJdScore = 3
	SdyEnumJdScore_SDY_SEVENTYFIVE SdyEnumJdScore = 4
	SdyEnumJdScore_SDY_NONE        SdyEnumJdScore = 5
)

var SdyEnumJdScore_name = map[int32]string{
	1: "SDY_SIXTY",
	2: "SDY_SIXTYFIVE",
	3: "SDY_SEVENTY",
	4: "SDY_SEVENTYFIVE",
	5: "SDY_NONE",
}
var SdyEnumJdScore_value = map[string]int32{
	"SDY_SIXTY":       1,
	"SDY_SIXTYFIVE":   2,
	"SDY_SEVENTY":     3,
	"SDY_SEVENTYFIVE": 4,
	"SDY_NONE":        5,
}

func (x SdyEnumJdScore) Enum() *SdyEnumJdScore {
	p := new(SdyEnumJdScore)
	*p = x
	return p
}
func (x SdyEnumJdScore) String() string {
	return proto.EnumName(SdyEnumJdScore_name, int32(x))
}
func (x *SdyEnumJdScore) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(SdyEnumJdScore_value, data, "SdyEnumJdScore")
	if err != nil {
		return err
	}
	*x = SdyEnumJdScore(value)
	return nil
}
func (SdyEnumJdScore) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

// 开局（接收服务端消息）
type PdkBcOpening struct {
	Header           *ProtoHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32              `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Ticket           *int64               `protobuf:"varint,3,opt,name=ticket" json:"ticket,omitempty"`
	UserCoin         *int64               `protobuf:"varint,4,opt,name=userCoin" json:"userCoin,omitempty"`
	UserRoomCard     *int64               `protobuf:"varint,5,opt,name=userRoomCard" json:"userRoomCard,omitempty"`
	PlayerInfos      []*SdyBasePlayerInfo `protobuf:"bytes,6,rep,name=playerInfos" json:"playerInfos,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *PdkBcOpening) Reset()                    { *m = PdkBcOpening{} }
func (m *PdkBcOpening) String() string            { return proto.CompactTextString(m) }
func (*PdkBcOpening) ProtoMessage()               {}
func (*PdkBcOpening) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

func (m *PdkBcOpening) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PdkBcOpening) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *PdkBcOpening) GetTicket() int64 {
	if m != nil && m.Ticket != nil {
		return *m.Ticket
	}
	return 0
}

func (m *PdkBcOpening) GetUserCoin() int64 {
	if m != nil && m.UserCoin != nil {
		return *m.UserCoin
	}
	return 0
}

func (m *PdkBcOpening) GetUserRoomCard() int64 {
	if m != nil && m.UserRoomCard != nil {
		return *m.UserRoomCard
	}
	return 0
}

func (m *PdkBcOpening) GetPlayerInfos() []*SdyBasePlayerInfo {
	if m != nil {
		return m.PlayerInfos
	}
	return nil
}

// 发牌
type PdkBcDealCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PlayerPokers     []int32      `protobuf:"varint,2,rep,name=playerPokers" json:"playerPokers,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *PdkBcDealCards) Reset()                    { *m = PdkBcDealCards{} }
func (m *PdkBcDealCards) String() string            { return proto.CompactTextString(m) }
func (*PdkBcDealCards) ProtoMessage()               {}
func (*PdkBcDealCards) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

func (m *PdkBcDealCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PdkBcDealCards) GetPlayerPokers() []int32 {
	if m != nil {
		return m.PlayerPokers
	}
	return nil
}

// 叫分
type SdyReqJiaoFen struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32         `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Jiao             *bool           `protobuf:"varint,3,opt,name=jiao" json:"jiao,omitempty"`
	Score            *SdyEnumJdScore `protobuf:"varint,4,opt,name=score,enum=yjprotogo.SdyEnumJdScore" json:"score,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SdyReqJiaoFen) Reset()                    { *m = SdyReqJiaoFen{} }
func (m *SdyReqJiaoFen) String() string            { return proto.CompactTextString(m) }
func (*SdyReqJiaoFen) ProtoMessage()               {}
func (*SdyReqJiaoFen) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

func (m *SdyReqJiaoFen) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyReqJiaoFen) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyReqJiaoFen) GetJiao() bool {
	if m != nil && m.Jiao != nil {
		return *m.Jiao
	}
	return false
}

func (m *SdyReqJiaoFen) GetScore() SdyEnumJdScore {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return SdyEnumJdScore_SDY_SIXTY
}

// 叫分回复
type SdyAckJiaoFen struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32         `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Jiao             *bool           `protobuf:"varint,3,opt,name=jiao" json:"jiao,omitempty"`
	Score            *SdyEnumJdScore `protobuf:"varint,4,opt,name=score,enum=yjprotogo.SdyEnumJdScore" json:"score,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *SdyAckJiaoFen) Reset()                    { *m = SdyAckJiaoFen{} }
func (m *SdyAckJiaoFen) String() string            { return proto.CompactTextString(m) }
func (*SdyAckJiaoFen) ProtoMessage()               {}
func (*SdyAckJiaoFen) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

func (m *SdyAckJiaoFen) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyAckJiaoFen) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyAckJiaoFen) GetJiao() bool {
	if m != nil && m.Jiao != nil {
		return *m.Jiao
	}
	return false
}

func (m *SdyAckJiaoFen) GetScore() SdyEnumJdScore {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return SdyEnumJdScore_SDY_SIXTY
}

// 叫地主结束，开始游戏 (广播)
type SdyBcStartPlay struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	FootPokers       []int32      `protobuf:"varint,2,rep,name=footPokers" json:"footPokers,omitempty"`
	Banker           *uint32      `protobuf:"varint,3,opt,name=banker" json:"banker,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyBcStartPlay) Reset()                    { *m = SdyBcStartPlay{} }
func (m *SdyBcStartPlay) String() string            { return proto.CompactTextString(m) }
func (*SdyBcStartPlay) ProtoMessage()               {}
func (*SdyBcStartPlay) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

func (m *SdyBcStartPlay) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyBcStartPlay) GetFootPokers() []int32 {
	if m != nil {
		return m.FootPokers
	}
	return nil
}

func (m *SdyBcStartPlay) GetBanker() uint32 {
	if m != nil && m.Banker != nil {
		return *m.Banker
	}
	return 0
}

// 出牌
type SdyReqOutCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	OutCards         []int32      `protobuf:"varint,2,rep,name=outCards" json:"outCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyReqOutCards) Reset()                    { *m = SdyReqOutCards{} }
func (m *SdyReqOutCards) String() string            { return proto.CompactTextString(m) }
func (*SdyReqOutCards) ProtoMessage()               {}
func (*SdyReqOutCards) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

func (m *SdyReqOutCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyReqOutCards) GetOutCards() []int32 {
	if m != nil {
		return m.OutCards
	}
	return nil
}

type SdyAckOutCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	RemainPokers     *int32       `protobuf:"varint,3,opt,name=remainPokers" json:"remainPokers,omitempty"`
	OutCards         []int32      `protobuf:"varint,4,rep,name=outCards" json:"outCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyAckOutCards) Reset()                    { *m = SdyAckOutCards{} }
func (m *SdyAckOutCards) String() string            { return proto.CompactTextString(m) }
func (*SdyAckOutCards) ProtoMessage()               {}
func (*SdyAckOutCards) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

func (m *SdyAckOutCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyAckOutCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyAckOutCards) GetRemainPokers() int32 {
	if m != nil && m.RemainPokers != nil {
		return *m.RemainPokers
	}
	return 0
}

func (m *SdyAckOutCards) GetOutCards() []int32 {
	if m != nil {
		return m.OutCards
	}
	return nil
}

// 轮到谁操作
type SdyBcOverTurn struct {
	Header           *ProtoHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32              `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Time             *int32               `protobuf:"varint,3,opt,name=time" json:"time,omitempty"`
	ActType          *SdyEnumActType      `protobuf:"varint,4,opt,name=actType,enum=yjprotogo.SdyEnumActType" json:"actType,omitempty"`
	CanOutCards      *bool                `protobuf:"varint,5,opt,name=canOutCards" json:"canOutCards,omitempty"`
	PlayerInfos      []*SdyBasePlayerInfo `protobuf:"bytes,6,rep,name=playerInfos" json:"playerInfos,omitempty"`
	JiaoScore        *SdyEnumJdScore      `protobuf:"varint,7,opt,name=jiaoScore,enum=yjprotogo.SdyEnumJdScore" json:"jiaoScore,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *SdyBcOverTurn) Reset()                    { *m = SdyBcOverTurn{} }
func (m *SdyBcOverTurn) String() string            { return proto.CompactTextString(m) }
func (*SdyBcOverTurn) ProtoMessage()               {}
func (*SdyBcOverTurn) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{7} }

func (m *SdyBcOverTurn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyBcOverTurn) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyBcOverTurn) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *SdyBcOverTurn) GetActType() SdyEnumActType {
	if m != nil && m.ActType != nil {
		return *m.ActType
	}
	return SdyEnumActType_SDY_T_NORMAL_ACT
}

func (m *SdyBcOverTurn) GetCanOutCards() bool {
	if m != nil && m.CanOutCards != nil {
		return *m.CanOutCards
	}
	return false
}

func (m *SdyBcOverTurn) GetPlayerInfos() []*SdyBasePlayerInfo {
	if m != nil {
		return m.PlayerInfos
	}
	return nil
}

func (m *SdyBcOverTurn) GetJiaoScore() SdyEnumJdScore {
	if m != nil && m.JiaoScore != nil {
		return *m.JiaoScore
	}
	return SdyEnumJdScore_SDY_SIXTY
}

// 游戏信息(广播)
type SdyBcGameInfo struct {
	Header           *ProtoHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PlayerInfo       []*SdyBasePlayerInfo `protobuf:"bytes,2,rep,name=playerInfo" json:"playerInfo,omitempty"`
	PdkDeskInfo      *SdyBaseDeskInfo     `protobuf:"bytes,3,opt,name=pdkDeskInfo" json:"pdkDeskInfo,omitempty"`
	SenderUserId     *uint32              `protobuf:"varint,4,opt,name=senderUserId" json:"senderUserId,omitempty"`
	IsReconnect      *int32               `protobuf:"varint,5,opt,name=isReconnect" json:"isReconnect,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *SdyBcGameInfo) Reset()                    { *m = SdyBcGameInfo{} }
func (m *SdyBcGameInfo) String() string            { return proto.CompactTextString(m) }
func (*SdyBcGameInfo) ProtoMessage()               {}
func (*SdyBcGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{8} }

func (m *SdyBcGameInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyBcGameInfo) GetPlayerInfo() []*SdyBasePlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *SdyBcGameInfo) GetPdkDeskInfo() *SdyBaseDeskInfo {
	if m != nil {
		return m.PdkDeskInfo
	}
	return nil
}

func (m *SdyBcGameInfo) GetSenderUserId() uint32 {
	if m != nil && m.SenderUserId != nil {
		return *m.SenderUserId
	}
	return 0
}

func (m *SdyBcGameInfo) GetIsReconnect() int32 {
	if m != nil && m.IsReconnect != nil {
		return *m.IsReconnect
	}
	return 0
}

type SdyBcHuandi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyBcHuandi) Reset()                    { *m = SdyBcHuandi{} }
func (m *SdyBcHuandi) String() string            { return proto.CompactTextString(m) }
func (*SdyBcHuandi) ProtoMessage()               {}
func (*SdyBcHuandi) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{9} }

func (m *SdyBcHuandi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyBcHuandi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type SdyHuandi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	FootPokers       []int32      `protobuf:"varint,3,rep,name=footPokers" json:"footPokers,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyHuandi) Reset()                    { *m = SdyHuandi{} }
func (m *SdyHuandi) String() string            { return proto.CompactTextString(m) }
func (*SdyHuandi) ProtoMessage()               {}
func (*SdyHuandi) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{10} }

func (m *SdyHuandi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyHuandi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyHuandi) GetFootPokers() []int32 {
	if m != nil {
		return m.FootPokers
	}
	return nil
}

type SdyReqHuanDi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	OutCards         []int32      `protobuf:"varint,3,rep,name=outCards" json:"outCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyReqHuanDi) Reset()                    { *m = SdyReqHuanDi{} }
func (m *SdyReqHuanDi) String() string            { return proto.CompactTextString(m) }
func (*SdyReqHuanDi) ProtoMessage()               {}
func (*SdyReqHuanDi) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{11} }

func (m *SdyReqHuanDi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyReqHuanDi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyReqHuanDi) GetOutCards() []int32 {
	if m != nil {
		return m.OutCards
	}
	return nil
}

type SdyAckHuandi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsHuanDiOver     *bool        `protobuf:"varint,3,opt,name=isHuanDiOver" json:"isHuanDiOver,omitempty"`
	OutCards         []int32      `protobuf:"varint,4,rep,name=outCards" json:"outCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *SdyAckHuandi) Reset()                    { *m = SdyAckHuandi{} }
func (m *SdyAckHuandi) String() string            { return proto.CompactTextString(m) }
func (*SdyAckHuandi) ProtoMessage()               {}
func (*SdyAckHuandi) Descriptor() ([]byte, []int) { return fileDescriptor6, []int{12} }

func (m *SdyAckHuandi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *SdyAckHuandi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *SdyAckHuandi) GetIsHuanDiOver() bool {
	if m != nil && m.IsHuanDiOver != nil {
		return *m.IsHuanDiOver
	}
	return false
}

func (m *SdyAckHuandi) GetOutCards() []int32 {
	if m != nil {
		return m.OutCards
	}
	return nil
}

func init() {
	proto.RegisterType((*PdkBcOpening)(nil), "yjprotogo.pdk_bc_opening")
	proto.RegisterType((*PdkBcDealCards)(nil), "yjprotogo.pdk_bc_dealCards")
	proto.RegisterType((*SdyReqJiaoFen)(nil), "yjprotogo.sdy_req_jiaoFen")
	proto.RegisterType((*SdyAckJiaoFen)(nil), "yjprotogo.sdy_ack_jiaoFen")
	proto.RegisterType((*SdyBcStartPlay)(nil), "yjprotogo.sdy_bc_startPlay")
	proto.RegisterType((*SdyReqOutCards)(nil), "yjprotogo.sdy_req_outCards")
	proto.RegisterType((*SdyAckOutCards)(nil), "yjprotogo.sdy_ack_outCards")
	proto.RegisterType((*SdyBcOverTurn)(nil), "yjprotogo.sdy_bc_overTurn")
	proto.RegisterType((*SdyBcGameInfo)(nil), "yjprotogo.sdy_bc_gameInfo")
	proto.RegisterType((*SdyBcHuandi)(nil), "yjprotogo.sdy_bc_huandi")
	proto.RegisterType((*SdyHuandi)(nil), "yjprotogo.sdy_huandi")
	proto.RegisterType((*SdyReqHuanDi)(nil), "yjprotogo.sdy_req_huanDi")
	proto.RegisterType((*SdyAckHuandi)(nil), "yjprotogo.sdy_ack_huandi")
	proto.RegisterEnum("yjprotogo.SdyEnumJdScore", SdyEnumJdScore_name, SdyEnumJdScore_value)
}

var fileDescriptor6 = []byte{
	// 699 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0xc1, 0x4e, 0xdb, 0x4c,
	0x10, 0xfe, 0x1d, 0xc7, 0x10, 0x26, 0x09, 0xe4, 0x5f, 0x24, 0x64, 0xa5, 0x15, 0x8a, 0xf6, 0x14,
	0xf5, 0x10, 0xa9, 0x48, 0x3d, 0xf4, 0x82, 0xaa, 0x42, 0x10, 0xb9, 0x40, 0xb4, 0xa4, 0xb4, 0x5c,
	0x6a, 0x2d, 0xf6, 0x02, 0xc6, 0xf1, 0x6e, 0xba, 0xde, 0x20, 0xa5, 0x2f, 0xd0, 0x57, 0xa8, 0x7a,
	0xea, 0xbb, 0xf4, 0x8d, 0xfa, 0x04, 0xd5, 0xae, 0x9d, 0xc4, 0x8e, 0x5a, 0x10, 0xd4, 0x87, 0x9e,
	0xb2, 0xf3, 0xed, 0xec, 0xcc, 0x37, 0x33, 0x9f, 0x27, 0xb0, 0x99, 0x04, 0x33, 0x6f, 0x32, 0xa6,
	0xb3, 0xde, 0x44, 0x0a, 0x25, 0xd0, 0xc6, 0xec, 0xd6, 0x1c, 0xae, 0x45, 0x7b, 0xdb, 0x17, 0x71,
	0x2c, 0xb8, 0xe7, 0x8f, 0x43, 0xc6, 0x55, 0x7a, 0xdf, 0x36, 0xfe, 0x97, 0x34, 0x61, 0xa9, 0x8d,
	0x7f, 0x5a, 0xb0, 0x39, 0x09, 0x22, 0xef, 0xd2, 0xf7, 0xc4, 0x84, 0xf1, 0x90, 0x5f, 0xa3, 0x1e,
	0xac, 0xdd, 0x30, 0x1a, 0x30, 0xe9, 0x5a, 0x1d, 0xab, 0x5b, 0xdf, 0xdb, 0xe9, 0x2d, 0x62, 0xf6,
	0x86, 0xfa, 0xf7, 0xd8, 0xdc, 0x92, 0xcc, 0x0b, 0xed, 0xc0, 0xda, 0x34, 0x61, 0x72, 0x10, 0xb8,
	0x95, 0x8e, 0xd5, 0x6d, 0x92, 0xcc, 0xd2, 0xb8, 0x0a, 0xfd, 0x88, 0x29, 0xd7, 0xee, 0x58, 0x5d,
	0x9b, 0x64, 0x16, 0x6a, 0x43, 0x4d, 0x7b, 0x1c, 0x88, 0x90, 0xbb, 0x55, 0x73, 0xb3, 0xb0, 0x11,
	0x86, 0x86, 0x3e, 0x13, 0x21, 0xe2, 0x03, 0x2a, 0x03, 0xd7, 0x31, 0xf7, 0x05, 0x0c, 0xbd, 0x81,
	0xba, 0x2e, 0x98, 0xc9, 0x01, 0xbf, 0x12, 0x89, 0xbb, 0xd6, 0xb1, 0xbb, 0xf5, 0xbd, 0xdd, 0x1c,
	0xc9, 0x79, 0x89, 0xde, 0xd2, 0x8d, 0xe4, 0x9f, 0xe0, 0x2b, 0x68, 0x65, 0x35, 0x07, 0x8c, 0x8e,
	0x75, 0xd0, 0xe4, 0xd1, 0x55, 0x63, 0x68, 0xa4, 0x21, 0x87, 0x22, 0x62, 0x32, 0x71, 0x2b, 0x1d,
	0xbb, 0xeb, 0x90, 0x02, 0x86, 0xbf, 0x5b, 0xb0, 0xa5, 0xc9, 0x48, 0xf6, 0xc9, 0xbb, 0x0d, 0xa9,
	0x38, 0x62, 0xbc, 0xb4, 0xee, 0x22, 0xa8, 0xea, 0x90, 0xa6, 0xb7, 0x35, 0x62, 0xce, 0xe8, 0x25,
	0x38, 0x89, 0x2f, 0x24, 0x33, 0x6d, 0xdd, 0xdc, 0x7b, 0xb6, 0xd2, 0x13, 0xc6, 0xa7, 0xb1, 0x77,
	0x1b, 0x9c, 0x69, 0x17, 0x92, 0x7a, 0x2e, 0x28, 0x52, 0x3f, 0xfa, 0x57, 0x29, 0x7e, 0x86, 0x96,
	0x99, 0xa8, 0xef, 0x25, 0x8a, 0x4a, 0x35, 0x1c, 0xd3, 0xd9, 0xa3, 0x29, 0xee, 0x02, 0x5c, 0x09,
	0xa1, 0x0a, 0xb3, 0xca, 0x21, 0xba, 0x84, 0x4b, 0xca, 0x23, 0x26, 0x0d, 0xd9, 0x26, 0xc9, 0x2c,
	0xfc, 0x31, 0xcd, 0xad, 0x07, 0x28, 0xa6, 0xea, 0x69, 0x4a, 0x69, 0x43, 0x6d, 0xfe, 0x36, 0xcb,
	0xbc, 0xb0, 0xf1, 0x37, 0x2b, 0x4d, 0xa0, 0xdb, 0xff, 0xe4, 0x04, 0x7f, 0xea, 0x3f, 0x86, 0x86,
	0x64, 0x31, 0x0d, 0x79, 0x56, 0xb6, 0x2e, 0xcd, 0x21, 0x05, 0xac, 0x40, 0xae, 0xba, 0x42, 0xee,
	0x47, 0x25, 0xd5, 0x86, 0xde, 0x0d, 0x77, 0x4c, 0x8e, 0xa6, 0xb2, 0x54, 0x6d, 0xa8, 0x30, 0x66,
	0x19, 0x27, 0x73, 0x46, 0xaf, 0x60, 0x9d, 0xfa, 0x6a, 0x34, 0x9b, 0xdc, 0xab, 0x8e, 0xcc, 0x85,
	0xcc, 0x7d, 0x51, 0x07, 0xea, 0x3e, 0xe5, 0xa7, 0xf3, 0x2a, 0x1c, 0xa3, 0xb6, 0x3c, 0xf4, 0xf7,
	0x1b, 0x03, 0xbd, 0x86, 0x0d, 0x2d, 0x5f, 0xa3, 0x4b, 0x77, 0xfd, 0x61, 0xe9, 0x2e, 0xbd, 0xf1,
	0x97, 0x65, 0x17, 0xaf, 0x69, 0xcc, 0x74, 0xbc, 0x47, 0x77, 0x71, 0x1f, 0x60, 0xc9, 0xc6, 0x88,
	0xe8, 0x61, 0xfe, 0xb9, 0x17, 0x68, 0x1f, 0xea, 0x93, 0x20, 0x3a, 0x64, 0x49, 0x64, 0x02, 0xd8,
	0x26, 0xe9, 0xf3, 0xdf, 0x05, 0x08, 0x32, 0x1f, 0x92, 0x7f, 0xa0, 0x95, 0x94, 0x30, 0x1e, 0x30,
	0xf9, 0x2e, 0x9d, 0x65, 0xd5, 0xcc, 0xb2, 0x80, 0xe9, 0x31, 0x84, 0x09, 0x61, 0xbe, 0xe0, 0x9c,
	0xf9, 0xca, 0x8c, 0xc1, 0x21, 0x79, 0x08, 0xbf, 0x87, 0x66, 0xd6, 0x88, 0x9b, 0x29, 0xe5, 0x41,
	0x58, 0x96, 0x98, 0xb0, 0x02, 0xd0, 0x81, 0xcb, 0x8d, 0xba, 0xb2, 0x33, 0xec, 0xd5, 0x9d, 0x81,
	0x55, 0xfa, 0xe7, 0xab, 0x77, 0x83, 0xce, 0x7c, 0x58, 0x5e, 0xe6, 0xfc, 0x47, 0x69, 0xaf, 0x7c,
	0x94, 0x5f, 0xad, 0x34, 0xad, 0xde, 0x18, 0x25, 0x17, 0x8c, 0xa1, 0x11, 0x26, 0xc7, 0xa6, 0x94,
	0xd3, 0xbb, 0x6c, 0x15, 0xd6, 0x48, 0x01, 0xbb, 0x6f, 0x5f, 0xbc, 0xb8, 0x49, 0x77, 0x59, 0xfe,
	0x43, 0x40, 0x4d, 0xd8, 0x38, 0x3b, 0xbc, 0xf0, 0xce, 0x06, 0x1f, 0x46, 0x17, 0x2d, 0x0b, 0xfd,
	0x0f, 0xcd, 0x85, 0x79, 0x34, 0x38, 0xef, 0xb7, 0x2a, 0x68, 0x0b, 0xea, 0x06, 0xea, 0x9f, 0xf7,
	0x4f, 0x46, 0x17, 0x2d, 0x1b, 0x6d, 0xc3, 0x56, 0x0e, 0x30, 0x5e, 0x55, 0xd4, 0x80, 0x9a, 0x06,
	0x4f, 0x4e, 0x4f, 0xfa, 0x2d, 0xe7, 0x6d, 0xe5, 0xd8, 0x1e, 0xfe, 0x37, 0xb4, 0x7e, 0x05, 0x00,
	0x00, 0xff, 0xff, 0x7e, 0x13, 0x8b, 0x47, 0xfe, 0x08, 0x00, 0x00,
}
