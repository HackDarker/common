// Code generated by protoc-gen-go. DO NOT EDIT.
// source: zhadan_play.proto

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of Heartbeat from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_reg from common_client.proto

// Ignoring public import of common_req_reg_via_input from common_client.proto

// Ignoring public import of common_ack_reg from common_client.proto

// Ignoring public import of common_req_gameLogin from common_client.proto

// Ignoring public import of common_req_gameLogin_via_input from common_client.proto

// Ignoring public import of common_ack_gameLogin from common_client.proto

// Ignoring public import of common_req_qrLogin from common_client.proto

// Ignoring public import of common_ack_qrLogin from common_client.proto

// Ignoring public import of common_req_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_reconnect from common_client.proto

// Ignoring public import of common_req_reconnect from common_client.proto

// Ignoring public import of common_req_gameState from common_client.proto

// Ignoring public import of common_ack_gameState from common_client.proto

// Ignoring public import of common_req_logout from common_client.proto

// Ignoring public import of common_ack_logout from common_client.proto

// Ignoring public import of common_req_feedback from common_client.proto

// Ignoring public import of client_base_poker from common_client.proto

// Ignoring public import of common_req_message from common_client.proto

// Ignoring public import of common_bc_message from common_client.proto

// Ignoring public import of common_req_notice from common_client.proto

// Ignoring public import of common_ack_notice from common_client.proto

// Ignoring public import of common_req_enterAgentMode from common_client.proto

// Ignoring public import of common_ack_enterAgentMode from common_client.proto

// Ignoring public import of common_req_quitAgentMode from common_client.proto

// Ignoring public import of common_ack_quitAgentMode from common_client.proto

// Ignoring public import of common_req_leaveDesk from common_client.proto

// Ignoring public import of common_ack_leaveDesk from common_client.proto

// Ignoring public import of common_req_kickout from common_client.proto

// Ignoring public import of common_bc_kickout from common_client.proto

// Ignoring public import of common_req_allowance from common_client.proto

// Ignoring public import of common_ack_allowance from common_client.proto

// Ignoring public import of common_req_applyDissolve from common_client.proto

// Ignoring public import of common_bc_applyDissolve from common_client.proto

// Ignoring public import of common_req_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_timeout from common_client.proto

// Ignoring public import of common_bc_userBreak from common_client.proto

// Ignoring public import of common_req_clickStatistic from common_client.proto

// Ignoring public import of common_req_offline from common_client.proto

// Ignoring public import of common_req_upload_location from common_client.proto

// Ignoring public import of common_bc_leaveTimeout from common_client.proto

// Ignoring public import of common_desk_by_agent from common_client.proto

// Ignoring public import of common_req_list_coin_desk from common_client.proto

// Ignoring public import of common_ack_list_coin_desk from common_client.proto

// Ignoring public import of CommonCoinDeskInfo from common_client.proto

// Ignoring public import of common_enum_reg from common_client.proto

// Ignoring public import of common_enum_os_type from common_client.proto

// Ignoring public import of common_enum_pokerColor from common_client.proto

// Ignoring public import of zhadan_client_poker from zhadan_base.proto

// Ignoring public import of zhadan_user_bill from zhadan_base.proto

// Ignoring public import of zhadan_desk_option from zhadan_base.proto

// Ignoring public import of zhadan_srv_room from zhadan_base.proto

// Ignoring public import of zhadan_enum_protoid from zhadan_base.proto

// Ignoring public import of zhadan_enum_pokerType from zhadan_base.proto

// Ignoring public import of zhadan_enum_desk_status from zhadan_base.proto

// Ignoring public import of zhadan_gan_opt from zhadan_base.proto

// desk 的信息
type ZhadanClientDesk struct {
	DeskId         *int32                `protobuf:"varint,1,opt,name=deskId" json:"deskId,omitempty"`
	Pwd            *string               `protobuf:"bytes,2,opt,name=pwd" json:"pwd,omitempty"`
	GameNumber     *int32                `protobuf:"varint,3,opt,name=gameNumber" json:"gameNumber,omitempty"`
	RoomId         *int32                `protobuf:"varint,4,opt,name=roomId" json:"roomId,omitempty"`
	Status         *ZhadanEnumDeskStatus `protobuf:"varint,5,opt,name=status,enum=ddproto.ZhadanEnumDeskStatus" json:"status,omitempty"`
	CircleNo       *int32                `protobuf:"varint,7,opt,name=circleNo" json:"circleNo,omitempty"`
	CurrDeskScore  *int32                `protobuf:"varint,8,opt,name=currDeskScore" json:"currDeskScore,omitempty"`
	DeskScorePais  *ZhadanClientPoker    `protobuf:"bytes,24,opt,name=deskScorePais" json:"deskScorePais,omitempty"`
	ShowPoker      *int32                `protobuf:"varint,25,opt,name=showPoker" json:"showPoker,omitempty"`
	CanGuo         *bool                 `protobuf:"varint,23,opt,name=canGuo" json:"canGuo,omitempty"`
	Owner          *uint32               `protobuf:"varint,11,opt,name=owner" json:"owner,omitempty"`
	IsDaikai       *bool                 `protobuf:"varint,12,opt,name=isDaikai" json:"isDaikai,omitempty"`
	DaikaiUser     *uint32               `protobuf:"varint,13,opt,name=daikaiUser" json:"daikaiUser,omitempty"`
	BaoZhuangUser  *uint32               `protobuf:"varint,22,opt,name=baoZhuangUser" json:"baoZhuangUser,omitempty"`
	DeskOption     *ZhadanDeskOption     `protobuf:"bytes,14,opt,name=deskOption" json:"deskOption,omitempty"`
	PlayerInfo     []*ZhadanClientUser   `protobuf:"bytes,15,rep,name=playerInfo" json:"playerInfo,omitempty"`
	LastChupaiUser *uint32               `protobuf:"varint,16,opt,name=lastChupaiUser" json:"lastChupaiUser,omitempty"`
	CurrActUser    *uint32               `protobuf:"varint,17,opt,name=currActUser" json:"currActUser,omitempty"`
	IsOnDissolve   *bool                 `protobuf:"varint,18,opt,name=isOnDissolve" json:"isOnDissolve,omitempty"`
	DissolveTime   *int64                `protobuf:"varint,19,opt,name=dissolveTime" json:"dissolveTime,omitempty"`
	// 金币场
	IsCoinRoom       *bool  `protobuf:"varint,20,opt,name=isCoinRoom" json:"isCoinRoom,omitempty"`
	SurplusTime      *int32 `protobuf:"varint,21,opt,name=surplusTime" json:"surplusTime,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ZhadanClientDesk) Reset()                    { *m = ZhadanClientDesk{} }
func (m *ZhadanClientDesk) String() string            { return proto.CompactTextString(m) }
func (*ZhadanClientDesk) ProtoMessage()               {}
func (*ZhadanClientDesk) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{0} }

func (m *ZhadanClientDesk) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *ZhadanClientDesk) GetPwd() string {
	if m != nil && m.Pwd != nil {
		return *m.Pwd
	}
	return ""
}

func (m *ZhadanClientDesk) GetGameNumber() int32 {
	if m != nil && m.GameNumber != nil {
		return *m.GameNumber
	}
	return 0
}

func (m *ZhadanClientDesk) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *ZhadanClientDesk) GetStatus() ZhadanEnumDeskStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ZhadanEnumDeskStatus_ZHADAN_DESK_STATUS_WAIT_READY
}

func (m *ZhadanClientDesk) GetCircleNo() int32 {
	if m != nil && m.CircleNo != nil {
		return *m.CircleNo
	}
	return 0
}

func (m *ZhadanClientDesk) GetCurrDeskScore() int32 {
	if m != nil && m.CurrDeskScore != nil {
		return *m.CurrDeskScore
	}
	return 0
}

func (m *ZhadanClientDesk) GetDeskScorePais() *ZhadanClientPoker {
	if m != nil {
		return m.DeskScorePais
	}
	return nil
}

func (m *ZhadanClientDesk) GetShowPoker() int32 {
	if m != nil && m.ShowPoker != nil {
		return *m.ShowPoker
	}
	return 0
}

func (m *ZhadanClientDesk) GetCanGuo() bool {
	if m != nil && m.CanGuo != nil {
		return *m.CanGuo
	}
	return false
}

func (m *ZhadanClientDesk) GetOwner() uint32 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

func (m *ZhadanClientDesk) GetIsDaikai() bool {
	if m != nil && m.IsDaikai != nil {
		return *m.IsDaikai
	}
	return false
}

func (m *ZhadanClientDesk) GetDaikaiUser() uint32 {
	if m != nil && m.DaikaiUser != nil {
		return *m.DaikaiUser
	}
	return 0
}

func (m *ZhadanClientDesk) GetBaoZhuangUser() uint32 {
	if m != nil && m.BaoZhuangUser != nil {
		return *m.BaoZhuangUser
	}
	return 0
}

func (m *ZhadanClientDesk) GetDeskOption() *ZhadanDeskOption {
	if m != nil {
		return m.DeskOption
	}
	return nil
}

func (m *ZhadanClientDesk) GetPlayerInfo() []*ZhadanClientUser {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *ZhadanClientDesk) GetLastChupaiUser() uint32 {
	if m != nil && m.LastChupaiUser != nil {
		return *m.LastChupaiUser
	}
	return 0
}

func (m *ZhadanClientDesk) GetCurrActUser() uint32 {
	if m != nil && m.CurrActUser != nil {
		return *m.CurrActUser
	}
	return 0
}

func (m *ZhadanClientDesk) GetIsOnDissolve() bool {
	if m != nil && m.IsOnDissolve != nil {
		return *m.IsOnDissolve
	}
	return false
}

func (m *ZhadanClientDesk) GetDissolveTime() int64 {
	if m != nil && m.DissolveTime != nil {
		return *m.DissolveTime
	}
	return 0
}

func (m *ZhadanClientDesk) GetIsCoinRoom() bool {
	if m != nil && m.IsCoinRoom != nil {
		return *m.IsCoinRoom
	}
	return false
}

func (m *ZhadanClientDesk) GetSurplusTime() int32 {
	if m != nil && m.SurplusTime != nil {
		return *m.SurplusTime
	}
	return 0
}

// 用户属性
type ZhadanClientUser struct {
	UserId           *uint32            `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	IsOnline         *bool              `protobuf:"varint,3,opt,name=isOnline" json:"isOnline,omitempty"`
	Index            *int32             `protobuf:"varint,4,opt,name=index" json:"index,omitempty"`
	Pokers           *ZhadanClientPoker `protobuf:"bytes,5,opt,name=pokers" json:"pokers,omitempty"`
	OutPai           *ZhadanClientPoker `protobuf:"bytes,6,opt,name=out_pai,json=outPai" json:"out_pai,omitempty"`
	SurplusPokerNum  *int32             `protobuf:"varint,14,opt,name=surplusPokerNum" json:"surplusPokerNum,omitempty"`
	IsPass           *bool              `protobuf:"varint,8,opt,name=isPass" json:"isPass,omitempty"`
	IsReady          *bool              `protobuf:"varint,9,opt,name=isReady" json:"isReady,omitempty"`
	AllScore         *int32             `protobuf:"varint,11,opt,name=allScore" json:"allScore,omitempty"`
	DeskScore        *int32             `protobuf:"varint,16,opt,name=deskScore" json:"deskScore,omitempty"`
	IsBanker         *bool              `protobuf:"varint,15,opt,name=isBanker" json:"isBanker,omitempty"`
	BaozhuangStatus  *int32             `protobuf:"varint,18,opt,name=baozhuangStatus" json:"baozhuangStatus,omitempty"`
	WxInfo           *WeixinInfo        `protobuf:"bytes,12,opt,name=wxInfo" json:"wxInfo,omitempty"`
	DissolveState    *int32             `protobuf:"varint,13,opt,name=dissolveState" json:"dissolveState,omitempty"`
	ScorePais        *ZhadanClientPoker `protobuf:"bytes,20,opt,name=score_pais,json=scorePais" json:"score_pais,omitempty"`
	PaoNo            *int32             `protobuf:"varint,17,opt,name=paoNo" json:"paoNo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ZhadanClientUser) Reset()                    { *m = ZhadanClientUser{} }
func (m *ZhadanClientUser) String() string            { return proto.CompactTextString(m) }
func (*ZhadanClientUser) ProtoMessage()               {}
func (*ZhadanClientUser) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{1} }

func (m *ZhadanClientUser) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ZhadanClientUser) GetIsOnline() bool {
	if m != nil && m.IsOnline != nil {
		return *m.IsOnline
	}
	return false
}

func (m *ZhadanClientUser) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *ZhadanClientUser) GetPokers() *ZhadanClientPoker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

func (m *ZhadanClientUser) GetOutPai() *ZhadanClientPoker {
	if m != nil {
		return m.OutPai
	}
	return nil
}

func (m *ZhadanClientUser) GetSurplusPokerNum() int32 {
	if m != nil && m.SurplusPokerNum != nil {
		return *m.SurplusPokerNum
	}
	return 0
}

func (m *ZhadanClientUser) GetIsPass() bool {
	if m != nil && m.IsPass != nil {
		return *m.IsPass
	}
	return false
}

func (m *ZhadanClientUser) GetIsReady() bool {
	if m != nil && m.IsReady != nil {
		return *m.IsReady
	}
	return false
}

func (m *ZhadanClientUser) GetAllScore() int32 {
	if m != nil && m.AllScore != nil {
		return *m.AllScore
	}
	return 0
}

func (m *ZhadanClientUser) GetDeskScore() int32 {
	if m != nil && m.DeskScore != nil {
		return *m.DeskScore
	}
	return 0
}

func (m *ZhadanClientUser) GetIsBanker() bool {
	if m != nil && m.IsBanker != nil {
		return *m.IsBanker
	}
	return false
}

func (m *ZhadanClientUser) GetBaozhuangStatus() int32 {
	if m != nil && m.BaozhuangStatus != nil {
		return *m.BaozhuangStatus
	}
	return 0
}

func (m *ZhadanClientUser) GetWxInfo() *WeixinInfo {
	if m != nil {
		return m.WxInfo
	}
	return nil
}

func (m *ZhadanClientUser) GetDissolveState() int32 {
	if m != nil && m.DissolveState != nil {
		return *m.DissolveState
	}
	return 0
}

func (m *ZhadanClientUser) GetScorePais() *ZhadanClientPoker {
	if m != nil {
		return m.ScorePais
	}
	return nil
}

func (m *ZhadanClientUser) GetPaoNo() int32 {
	if m != nil && m.PaoNo != nil {
		return *m.PaoNo
	}
	return 0
}

// ==============================创建房间===============================
type ZhadanCreateDeskReq struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Option           *ZhadanDeskOption `protobuf:"bytes,2,opt,name=option" json:"option,omitempty"`
	IsDaikai         *bool             `protobuf:"varint,3,opt,name=isDaikai" json:"isDaikai,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ZhadanCreateDeskReq) Reset()                    { *m = ZhadanCreateDeskReq{} }
func (m *ZhadanCreateDeskReq) String() string            { return proto.CompactTextString(m) }
func (*ZhadanCreateDeskReq) ProtoMessage()               {}
func (*ZhadanCreateDeskReq) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{2} }

func (m *ZhadanCreateDeskReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanCreateDeskReq) GetOption() *ZhadanDeskOption {
	if m != nil {
		return m.Option
	}
	return nil
}

func (m *ZhadanCreateDeskReq) GetIsDaikai() bool {
	if m != nil && m.IsDaikai != nil {
		return *m.IsDaikai
	}
	return false
}

// ==============================进入房间===============================
type ZhadanEnterDeskReq struct {
	Header  *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	DeskPwd *string      `protobuf:"bytes,2,opt,name=deskPwd" json:"deskPwd,omitempty"`
	// 金币场
	RoomId           *int32 `protobuf:"varint,3,opt,name=roomId" json:"roomId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *ZhadanEnterDeskReq) Reset()                    { *m = ZhadanEnterDeskReq{} }
func (m *ZhadanEnterDeskReq) String() string            { return proto.CompactTextString(m) }
func (*ZhadanEnterDeskReq) ProtoMessage()               {}
func (*ZhadanEnterDeskReq) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{3} }

func (m *ZhadanEnterDeskReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanEnterDeskReq) GetDeskPwd() string {
	if m != nil && m.DeskPwd != nil {
		return *m.DeskPwd
	}
	return ""
}

func (m *ZhadanEnterDeskReq) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

type ZhadanEnterDeskAck struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	DeskState        *ZhadanClientDesk `protobuf:"bytes,2,opt,name=deskState" json:"deskState,omitempty"`
	IsReconnect      *bool             `protobuf:"varint,3,opt,name=isReconnect" json:"isReconnect,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ZhadanEnterDeskAck) Reset()                    { *m = ZhadanEnterDeskAck{} }
func (m *ZhadanEnterDeskAck) String() string            { return proto.CompactTextString(m) }
func (*ZhadanEnterDeskAck) ProtoMessage()               {}
func (*ZhadanEnterDeskAck) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{4} }

func (m *ZhadanEnterDeskAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanEnterDeskAck) GetDeskState() *ZhadanClientDesk {
	if m != nil {
		return m.DeskState
	}
	return nil
}

func (m *ZhadanEnterDeskAck) GetIsReconnect() bool {
	if m != nil && m.IsReconnect != nil {
		return *m.IsReconnect
	}
	return false
}

type ZhadanEnterDeskBc struct {
	Header           *ProtoHeader        `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PlayerInfo       []*ZhadanClientUser `protobuf:"bytes,2,rep,name=playerInfo" json:"playerInfo,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *ZhadanEnterDeskBc) Reset()                    { *m = ZhadanEnterDeskBc{} }
func (m *ZhadanEnterDeskBc) String() string            { return proto.CompactTextString(m) }
func (*ZhadanEnterDeskBc) ProtoMessage()               {}
func (*ZhadanEnterDeskBc) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{5} }

func (m *ZhadanEnterDeskBc) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanEnterDeskBc) GetPlayerInfo() []*ZhadanClientUser {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

// =============================准备===================================
type ZhadanSwitchReadyReq struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	IsReady          *bool        `protobuf:"varint,2,opt,name=isReady" json:"isReady,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZhadanSwitchReadyReq) Reset()                    { *m = ZhadanSwitchReadyReq{} }
func (m *ZhadanSwitchReadyReq) String() string            { return proto.CompactTextString(m) }
func (*ZhadanSwitchReadyReq) ProtoMessage()               {}
func (*ZhadanSwitchReadyReq) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{6} }

func (m *ZhadanSwitchReadyReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanSwitchReadyReq) GetIsReady() bool {
	if m != nil && m.IsReady != nil {
		return *m.IsReady
	}
	return false
}

type ZhadanSwitchReadyBc struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsReady          *bool        `protobuf:"varint,3,opt,name=isReady" json:"isReady,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZhadanSwitchReadyBc) Reset()                    { *m = ZhadanSwitchReadyBc{} }
func (m *ZhadanSwitchReadyBc) String() string            { return proto.CompactTextString(m) }
func (*ZhadanSwitchReadyBc) ProtoMessage()               {}
func (*ZhadanSwitchReadyBc) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{7} }

func (m *ZhadanSwitchReadyBc) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanSwitchReadyBc) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ZhadanSwitchReadyBc) GetIsReady() bool {
	if m != nil && m.IsReady != nil {
		return *m.IsReady
	}
	return false
}

// ==============================发牌overturn===================================
type ZhadanFapaiOt struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Pokers           *ZhadanClientPoker `protobuf:"bytes,2,opt,name=pokers" json:"pokers,omitempty"`
	CurrCircle       *int32             `protobuf:"varint,3,opt,name=currCircle" json:"currCircle,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ZhadanFapaiOt) Reset()                    { *m = ZhadanFapaiOt{} }
func (m *ZhadanFapaiOt) String() string            { return proto.CompactTextString(m) }
func (*ZhadanFapaiOt) ProtoMessage()               {}
func (*ZhadanFapaiOt) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{8} }

func (m *ZhadanFapaiOt) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanFapaiOt) GetPokers() *ZhadanClientPoker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

func (m *ZhadanFapaiOt) GetCurrCircle() int32 {
	if m != nil && m.CurrCircle != nil {
		return *m.CurrCircle
	}
	return 0
}

// =============================包庄overturn===========================
type ZhadanBaozhuangOt struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ActUser          *uint32      `protobuf:"varint,2,opt,name=actUser" json:"actUser,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZhadanBaozhuangOt) Reset()                    { *m = ZhadanBaozhuangOt{} }
func (m *ZhadanBaozhuangOt) String() string            { return proto.CompactTextString(m) }
func (*ZhadanBaozhuangOt) ProtoMessage()               {}
func (*ZhadanBaozhuangOt) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{9} }

func (m *ZhadanBaozhuangOt) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanBaozhuangOt) GetActUser() uint32 {
	if m != nil && m.ActUser != nil {
		return *m.ActUser
	}
	return 0
}

type ZhadanBaozhuangReq struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	IsBaozhuang      *bool        `protobuf:"varint,2,opt,name=isBaozhuang" json:"isBaozhuang,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZhadanBaozhuangReq) Reset()                    { *m = ZhadanBaozhuangReq{} }
func (m *ZhadanBaozhuangReq) String() string            { return proto.CompactTextString(m) }
func (*ZhadanBaozhuangReq) ProtoMessage()               {}
func (*ZhadanBaozhuangReq) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{10} }

func (m *ZhadanBaozhuangReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanBaozhuangReq) GetIsBaozhuang() bool {
	if m != nil && m.IsBaozhuang != nil {
		return *m.IsBaozhuang
	}
	return false
}

type ZhadanBaozhuangAck struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BaozhuangUser    *uint32      `protobuf:"varint,2,opt,name=baozhuangUser" json:"baozhuangUser,omitempty"`
	IsBaozhuang      *bool        `protobuf:"varint,3,opt,name=isBaozhuang" json:"isBaozhuang,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZhadanBaozhuangAck) Reset()                    { *m = ZhadanBaozhuangAck{} }
func (m *ZhadanBaozhuangAck) String() string            { return proto.CompactTextString(m) }
func (*ZhadanBaozhuangAck) ProtoMessage()               {}
func (*ZhadanBaozhuangAck) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{11} }

func (m *ZhadanBaozhuangAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanBaozhuangAck) GetBaozhuangUser() uint32 {
	if m != nil && m.BaozhuangUser != nil {
		return *m.BaozhuangUser
	}
	return 0
}

func (m *ZhadanBaozhuangAck) GetIsBaozhuang() bool {
	if m != nil && m.IsBaozhuang != nil {
		return *m.IsBaozhuang
	}
	return false
}

// =============================包庄及组队结果==========================
type ZhadanBaozhuangResItem struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	IsBanker         *bool   `protobuf:"varint,2,opt,name=isBanker" json:"isBanker,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ZhadanBaozhuangResItem) Reset()                    { *m = ZhadanBaozhuangResItem{} }
func (m *ZhadanBaozhuangResItem) String() string            { return proto.CompactTextString(m) }
func (*ZhadanBaozhuangResItem) ProtoMessage()               {}
func (*ZhadanBaozhuangResItem) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{12} }

func (m *ZhadanBaozhuangResItem) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ZhadanBaozhuangResItem) GetIsBanker() bool {
	if m != nil && m.IsBanker != nil {
		return *m.IsBanker
	}
	return false
}

type ZhadanBaozhuangRes struct {
	BaoZhuangUser    *uint32                   `protobuf:"varint,1,opt,name=baoZhuangUser" json:"baoZhuangUser,omitempty"`
	Result           []*ZhadanBaozhuangResItem `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
	ShowPoker        *int32                    `protobuf:"varint,3,opt,name=showPoker" json:"showPoker,omitempty"`
	XXX_unrecognized []byte                    `json:"-"`
}

func (m *ZhadanBaozhuangRes) Reset()                    { *m = ZhadanBaozhuangRes{} }
func (m *ZhadanBaozhuangRes) String() string            { return proto.CompactTextString(m) }
func (*ZhadanBaozhuangRes) ProtoMessage()               {}
func (*ZhadanBaozhuangRes) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{13} }

func (m *ZhadanBaozhuangRes) GetBaoZhuangUser() uint32 {
	if m != nil && m.BaoZhuangUser != nil {
		return *m.BaoZhuangUser
	}
	return 0
}

func (m *ZhadanBaozhuangRes) GetResult() []*ZhadanBaozhuangResItem {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ZhadanBaozhuangRes) GetShowPoker() int32 {
	if m != nil && m.ShowPoker != nil {
		return *m.ShowPoker
	}
	return 0
}

// =============================出牌===================================
type ZhadanChupaiOt struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CurrActUser      *uint32      `protobuf:"varint,2,opt,name=currActUser" json:"currActUser,omitempty"`
	CanGuo           *bool        `protobuf:"varint,3,opt,name=canGuo" json:"canGuo,omitempty"`
	DeskTime         *int32       `protobuf:"varint,5,opt,name=deskTime" json:"deskTime,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZhadanChupaiOt) Reset()                    { *m = ZhadanChupaiOt{} }
func (m *ZhadanChupaiOt) String() string            { return proto.CompactTextString(m) }
func (*ZhadanChupaiOt) ProtoMessage()               {}
func (*ZhadanChupaiOt) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{14} }

func (m *ZhadanChupaiOt) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanChupaiOt) GetCurrActUser() uint32 {
	if m != nil && m.CurrActUser != nil {
		return *m.CurrActUser
	}
	return 0
}

func (m *ZhadanChupaiOt) GetCanGuo() bool {
	if m != nil && m.CanGuo != nil {
		return *m.CanGuo
	}
	return false
}

func (m *ZhadanChupaiOt) GetDeskTime() int32 {
	if m != nil && m.DeskTime != nil {
		return *m.DeskTime
	}
	return 0
}

type ZhadanChupaiReq struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Pokers           *ZhadanClientPoker `protobuf:"bytes,2,opt,name=pokers" json:"pokers,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ZhadanChupaiReq) Reset()                    { *m = ZhadanChupaiReq{} }
func (m *ZhadanChupaiReq) String() string            { return proto.CompactTextString(m) }
func (*ZhadanChupaiReq) ProtoMessage()               {}
func (*ZhadanChupaiReq) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{15} }

func (m *ZhadanChupaiReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanChupaiReq) GetPokers() *ZhadanClientPoker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

type ZhadanChupaiBc struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	OutPai           *ZhadanClientPoker `protobuf:"bytes,2,opt,name=outPai" json:"outPai,omitempty"`
	SurplusPokerNum  *int32             `protobuf:"varint,3,opt,name=surplusPokerNum" json:"surplusPokerNum,omitempty"`
	DeskScore        *int32             `protobuf:"varint,5,opt,name=deskScore" json:"deskScore,omitempty"`
	PaoNo            *int32             `protobuf:"varint,7,opt,name=paoNo" json:"paoNo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ZhadanChupaiBc) Reset()                    { *m = ZhadanChupaiBc{} }
func (m *ZhadanChupaiBc) String() string            { return proto.CompactTextString(m) }
func (*ZhadanChupaiBc) ProtoMessage()               {}
func (*ZhadanChupaiBc) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{16} }

func (m *ZhadanChupaiBc) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanChupaiBc) GetOutPai() *ZhadanClientPoker {
	if m != nil {
		return m.OutPai
	}
	return nil
}

func (m *ZhadanChupaiBc) GetSurplusPokerNum() int32 {
	if m != nil && m.SurplusPokerNum != nil {
		return *m.SurplusPokerNum
	}
	return 0
}

func (m *ZhadanChupaiBc) GetDeskScore() int32 {
	if m != nil && m.DeskScore != nil {
		return *m.DeskScore
	}
	return 0
}

func (m *ZhadanChupaiBc) GetPaoNo() int32 {
	if m != nil && m.PaoNo != nil {
		return *m.PaoNo
	}
	return 0
}

// ============================过牌===================================
type ZhadanGuopaiReq struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZhadanGuopaiReq) Reset()                    { *m = ZhadanGuopaiReq{} }
func (m *ZhadanGuopaiReq) String() string            { return proto.CompactTextString(m) }
func (*ZhadanGuopaiReq) ProtoMessage()               {}
func (*ZhadanGuopaiReq) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{17} }

func (m *ZhadanGuopaiReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type ZhadanGuopaiBc struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32            `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	AddUser          *int32             `protobuf:"varint,6,opt,name=addUser" json:"addUser,omitempty"`
	AddScore         *int32             `protobuf:"varint,8,opt,name=addScore" json:"addScore,omitempty"`
	Score            *int32             `protobuf:"varint,9,opt,name=score" json:"score,omitempty"`
	ScorePais        *ZhadanClientPoker `protobuf:"bytes,10,opt,name=score_pais,json=scorePais" json:"score_pais,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *ZhadanGuopaiBc) Reset()                    { *m = ZhadanGuopaiBc{} }
func (m *ZhadanGuopaiBc) String() string            { return proto.CompactTextString(m) }
func (*ZhadanGuopaiBc) ProtoMessage()               {}
func (*ZhadanGuopaiBc) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{18} }

func (m *ZhadanGuopaiBc) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanGuopaiBc) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ZhadanGuopaiBc) GetAddUser() int32 {
	if m != nil && m.AddUser != nil {
		return *m.AddUser
	}
	return 0
}

func (m *ZhadanGuopaiBc) GetAddScore() int32 {
	if m != nil && m.AddScore != nil {
		return *m.AddScore
	}
	return 0
}

func (m *ZhadanGuopaiBc) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *ZhadanGuopaiBc) GetScorePais() *ZhadanClientPoker {
	if m != nil {
		return m.ScorePais
	}
	return nil
}

// ============================单局结算================================
type ZhadanGameEndOneItem struct {
	User             *uint32              `protobuf:"varint,1,opt,name=user" json:"user,omitempty"`
	ExtScorePoker    []*ZhadanClientPoker `protobuf:"bytes,2,rep,name=ext_score_poker,json=extScorePoker" json:"ext_score_poker,omitempty"`
	PaoNo            *int32               `protobuf:"varint,3,opt,name=paoNo" json:"paoNo,omitempty"`
	Score            *int32               `protobuf:"varint,4,opt,name=score" json:"score,omitempty"`
	BaseScore        *int32               `protobuf:"varint,5,opt,name=baseScore" json:"baseScore,omitempty"`
	GroupScore       *int32               `protobuf:"varint,6,opt,name=groupScore" json:"groupScore,omitempty"`
	ExtScore         *int32               `protobuf:"varint,7,opt,name=extScore" json:"extScore,omitempty"`
	AllScore         *int32               `protobuf:"varint,8,opt,name=allScore" json:"allScore,omitempty"`
	TotalScore       *int32               `protobuf:"varint,11,opt,name=totalScore" json:"totalScore,omitempty"`
	SurplusPoker     *ZhadanClientPoker   `protobuf:"bytes,9,opt,name=surplus_poker,json=surplusPoker" json:"surplus_poker,omitempty"`
	IsBanker         *bool                `protobuf:"varint,10,opt,name=isBanker" json:"isBanker,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *ZhadanGameEndOneItem) Reset()                    { *m = ZhadanGameEndOneItem{} }
func (m *ZhadanGameEndOneItem) String() string            { return proto.CompactTextString(m) }
func (*ZhadanGameEndOneItem) ProtoMessage()               {}
func (*ZhadanGameEndOneItem) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{19} }

func (m *ZhadanGameEndOneItem) GetUser() uint32 {
	if m != nil && m.User != nil {
		return *m.User
	}
	return 0
}

func (m *ZhadanGameEndOneItem) GetExtScorePoker() []*ZhadanClientPoker {
	if m != nil {
		return m.ExtScorePoker
	}
	return nil
}

func (m *ZhadanGameEndOneItem) GetPaoNo() int32 {
	if m != nil && m.PaoNo != nil {
		return *m.PaoNo
	}
	return 0
}

func (m *ZhadanGameEndOneItem) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *ZhadanGameEndOneItem) GetBaseScore() int32 {
	if m != nil && m.BaseScore != nil {
		return *m.BaseScore
	}
	return 0
}

func (m *ZhadanGameEndOneItem) GetGroupScore() int32 {
	if m != nil && m.GroupScore != nil {
		return *m.GroupScore
	}
	return 0
}

func (m *ZhadanGameEndOneItem) GetExtScore() int32 {
	if m != nil && m.ExtScore != nil {
		return *m.ExtScore
	}
	return 0
}

func (m *ZhadanGameEndOneItem) GetAllScore() int32 {
	if m != nil && m.AllScore != nil {
		return *m.AllScore
	}
	return 0
}

func (m *ZhadanGameEndOneItem) GetTotalScore() int32 {
	if m != nil && m.TotalScore != nil {
		return *m.TotalScore
	}
	return 0
}

func (m *ZhadanGameEndOneItem) GetSurplusPoker() *ZhadanClientPoker {
	if m != nil {
		return m.SurplusPoker
	}
	return nil
}

func (m *ZhadanGameEndOneItem) GetIsBanker() bool {
	if m != nil && m.IsBanker != nil {
		return *m.IsBanker
	}
	return false
}

// 单局结算广播
type ZhadanGameEndOneBc struct {
	Header           *ProtoHeader            `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Result           []*ZhadanGameEndOneItem `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
	BaozhuangUser    *uint32                 `protobuf:"varint,3,opt,name=baozhuangUser" json:"baozhuangUser,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *ZhadanGameEndOneBc) Reset()                    { *m = ZhadanGameEndOneBc{} }
func (m *ZhadanGameEndOneBc) String() string            { return proto.CompactTextString(m) }
func (*ZhadanGameEndOneBc) ProtoMessage()               {}
func (*ZhadanGameEndOneBc) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{20} }

func (m *ZhadanGameEndOneBc) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanGameEndOneBc) GetResult() []*ZhadanGameEndOneItem {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ZhadanGameEndOneBc) GetBaozhuangUser() uint32 {
	if m != nil && m.BaozhuangUser != nil {
		return *m.BaozhuangUser
	}
	return 0
}

// ============================全局结算================================
type ZhadanGameEndAllItem struct {
	User             *uint32 `protobuf:"varint,1,opt,name=user" json:"user,omitempty"`
	AllScore         *int32  `protobuf:"varint,2,opt,name=allScore" json:"allScore,omitempty"`
	IsOwner          *bool   `protobuf:"varint,6,opt,name=isOwner" json:"isOwner,omitempty"`
	IsBigWinner      *bool   `protobuf:"varint,7,opt,name=isBigWinner" json:"isBigWinner,omitempty"`
	AllBaseScore     *int32  `protobuf:"varint,8,opt,name=allBaseScore" json:"allBaseScore,omitempty"`
	AllExtScore      *int32  `protobuf:"varint,9,opt,name=allExtScore" json:"allExtScore,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ZhadanGameEndAllItem) Reset()                    { *m = ZhadanGameEndAllItem{} }
func (m *ZhadanGameEndAllItem) String() string            { return proto.CompactTextString(m) }
func (*ZhadanGameEndAllItem) ProtoMessage()               {}
func (*ZhadanGameEndAllItem) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{21} }

func (m *ZhadanGameEndAllItem) GetUser() uint32 {
	if m != nil && m.User != nil {
		return *m.User
	}
	return 0
}

func (m *ZhadanGameEndAllItem) GetAllScore() int32 {
	if m != nil && m.AllScore != nil {
		return *m.AllScore
	}
	return 0
}

func (m *ZhadanGameEndAllItem) GetIsOwner() bool {
	if m != nil && m.IsOwner != nil {
		return *m.IsOwner
	}
	return false
}

func (m *ZhadanGameEndAllItem) GetIsBigWinner() bool {
	if m != nil && m.IsBigWinner != nil {
		return *m.IsBigWinner
	}
	return false
}

func (m *ZhadanGameEndAllItem) GetAllBaseScore() int32 {
	if m != nil && m.AllBaseScore != nil {
		return *m.AllBaseScore
	}
	return 0
}

func (m *ZhadanGameEndAllItem) GetAllExtScore() int32 {
	if m != nil && m.AllExtScore != nil {
		return *m.AllExtScore
	}
	return 0
}

// 全局结算广播
type ZhadanGameEndAllBc struct {
	Header           *ProtoHeader            `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Result           []*ZhadanGameEndAllItem `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte                  `json:"-"`
}

func (m *ZhadanGameEndAllBc) Reset()                    { *m = ZhadanGameEndAllBc{} }
func (m *ZhadanGameEndAllBc) String() string            { return proto.CompactTextString(m) }
func (*ZhadanGameEndAllBc) ProtoMessage()               {}
func (*ZhadanGameEndAllBc) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{22} }

func (m *ZhadanGameEndAllBc) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanGameEndAllBc) GetResult() []*ZhadanGameEndAllItem {
	if m != nil {
		return m.Result
	}
	return nil
}

// ==============================离线广播================================
type ZhadanOfflineBc struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	IsOffline        *bool   `protobuf:"varint,2,opt,name=isOffline" json:"isOffline,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ZhadanOfflineBc) Reset()                    { *m = ZhadanOfflineBc{} }
func (m *ZhadanOfflineBc) String() string            { return proto.CompactTextString(m) }
func (*ZhadanOfflineBc) ProtoMessage()               {}
func (*ZhadanOfflineBc) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{23} }

func (m *ZhadanOfflineBc) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ZhadanOfflineBc) GetIsOffline() bool {
	if m != nil && m.IsOffline != nil {
		return *m.IsOffline
	}
	return false
}

// ==============================金币场-房间列表===========================
type ZhadanCoinRoomListReq struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZhadanCoinRoomListReq) Reset()                    { *m = ZhadanCoinRoomListReq{} }
func (m *ZhadanCoinRoomListReq) String() string            { return proto.CompactTextString(m) }
func (*ZhadanCoinRoomListReq) ProtoMessage()               {}
func (*ZhadanCoinRoomListReq) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{24} }

func (m *ZhadanCoinRoomListReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type ZhadanCoinRoomListAck struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Rooms            []*ZhadanSrvRoom `protobuf:"bytes,2,rep,name=rooms" json:"rooms,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *ZhadanCoinRoomListAck) Reset()                    { *m = ZhadanCoinRoomListAck{} }
func (m *ZhadanCoinRoomListAck) String() string            { return proto.CompactTextString(m) }
func (*ZhadanCoinRoomListAck) ProtoMessage()               {}
func (*ZhadanCoinRoomListAck) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{25} }

func (m *ZhadanCoinRoomListAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanCoinRoomListAck) GetRooms() []*ZhadanSrvRoom {
	if m != nil {
		return m.Rooms
	}
	return nil
}

// ============================房主解散房间==============================
// 房主解散房间（未开局时不扣除房卡）
type ZhadanOwnerDissolveReq struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	DeskId           *int32       `protobuf:"varint,2,opt,name=deskId" json:"deskId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZhadanOwnerDissolveReq) Reset()                    { *m = ZhadanOwnerDissolveReq{} }
func (m *ZhadanOwnerDissolveReq) String() string            { return proto.CompactTextString(m) }
func (*ZhadanOwnerDissolveReq) ProtoMessage()               {}
func (*ZhadanOwnerDissolveReq) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{26} }

func (m *ZhadanOwnerDissolveReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *ZhadanOwnerDissolveReq) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

// 房主解散房间ack
type ZhadanOwnerDissolveAck struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *ZhadanOwnerDissolveAck) Reset()                    { *m = ZhadanOwnerDissolveAck{} }
func (m *ZhadanOwnerDissolveAck) String() string            { return proto.CompactTextString(m) }
func (*ZhadanOwnerDissolveAck) ProtoMessage()               {}
func (*ZhadanOwnerDissolveAck) Descriptor() ([]byte, []int) { return fileDescriptor57, []int{27} }

func (m *ZhadanOwnerDissolveAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*ZhadanClientDesk)(nil), "ddproto.zhadan_client_desk")
	proto.RegisterType((*ZhadanClientUser)(nil), "ddproto.zhadan_client_user")
	proto.RegisterType((*ZhadanCreateDeskReq)(nil), "ddproto.zhadan_create_desk_req")
	proto.RegisterType((*ZhadanEnterDeskReq)(nil), "ddproto.zhadan_enter_desk_req")
	proto.RegisterType((*ZhadanEnterDeskAck)(nil), "ddproto.zhadan_enter_desk_ack")
	proto.RegisterType((*ZhadanEnterDeskBc)(nil), "ddproto.zhadan_enter_desk_bc")
	proto.RegisterType((*ZhadanSwitchReadyReq)(nil), "ddproto.zhadan_switch_ready_req")
	proto.RegisterType((*ZhadanSwitchReadyBc)(nil), "ddproto.zhadan_switch_ready_bc")
	proto.RegisterType((*ZhadanFapaiOt)(nil), "ddproto.zhadan_fapai_ot")
	proto.RegisterType((*ZhadanBaozhuangOt)(nil), "ddproto.zhadan_baozhuang_ot")
	proto.RegisterType((*ZhadanBaozhuangReq)(nil), "ddproto.zhadan_baozhuang_req")
	proto.RegisterType((*ZhadanBaozhuangAck)(nil), "ddproto.zhadan_baozhuang_ack")
	proto.RegisterType((*ZhadanBaozhuangResItem)(nil), "ddproto.zhadan_baozhuang_res_item")
	proto.RegisterType((*ZhadanBaozhuangRes)(nil), "ddproto.zhadan_baozhuang_res")
	proto.RegisterType((*ZhadanChupaiOt)(nil), "ddproto.zhadan_chupai_ot")
	proto.RegisterType((*ZhadanChupaiReq)(nil), "ddproto.zhadan_chupai_req")
	proto.RegisterType((*ZhadanChupaiBc)(nil), "ddproto.zhadan_chupai_bc")
	proto.RegisterType((*ZhadanGuopaiReq)(nil), "ddproto.zhadan_guopai_req")
	proto.RegisterType((*ZhadanGuopaiBc)(nil), "ddproto.zhadan_guopai_bc")
	proto.RegisterType((*ZhadanGameEndOneItem)(nil), "ddproto.zhadan_game_end_one_item")
	proto.RegisterType((*ZhadanGameEndOneBc)(nil), "ddproto.zhadan_game_end_one_bc")
	proto.RegisterType((*ZhadanGameEndAllItem)(nil), "ddproto.zhadan_game_end_all_item")
	proto.RegisterType((*ZhadanGameEndAllBc)(nil), "ddproto.zhadan_game_end_all_bc")
	proto.RegisterType((*ZhadanOfflineBc)(nil), "ddproto.zhadan_offline_bc")
	proto.RegisterType((*ZhadanCoinRoomListReq)(nil), "ddproto.zhadan_coin_room_list_req")
	proto.RegisterType((*ZhadanCoinRoomListAck)(nil), "ddproto.zhadan_coin_room_list_ack")
	proto.RegisterType((*ZhadanOwnerDissolveReq)(nil), "ddproto.zhadan_owner_dissolve_req")
	proto.RegisterType((*ZhadanOwnerDissolveAck)(nil), "ddproto.zhadan_owner_dissolve_ack")
}

func init() { proto.RegisterFile("zhadan_play.proto", fileDescriptor57) }

var fileDescriptor57 = []byte{
	// 1484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0xcf, 0x6f, 0xdc, 0xc4,
	0x17, 0xff, 0x7a, 0x9d, 0xf5, 0x66, 0x27, 0x49, 0xd3, 0x4e, 0xd2, 0x74, 0x9a, 0x6f, 0x54, 0x2d,
	0x16, 0x42, 0x2b, 0x81, 0x72, 0x28, 0x45, 0xa2, 0x70, 0x6a, 0x1a, 0x04, 0xb9, 0x24, 0x2b, 0x17,
	0x54, 0x09, 0x09, 0x59, 0x13, 0x7b, 0x92, 0x8c, 0xe2, 0xf5, 0x2c, 0x1e, 0xbb, 0x9b, 0xf6, 0xc6,
	0x9d, 0x6b, 0xe1, 0xce, 0x85, 0x3b, 0x7f, 0x07, 0xdc, 0xf8, 0x07, 0xf8, 0x4f, 0xd0, 0xbc, 0x19,
	0x8f, 0x7f, 0xec, 0x86, 0xd4, 0x11, 0x5c, 0x12, 0xbf, 0x37, 0x6f, 0xe6, 0xfd, 0x98, 0xf7, 0xe3,
	0x33, 0x8b, 0xee, 0xbd, 0xb9, 0xa0, 0x31, 0x4d, 0xc3, 0x59, 0x42, 0x5f, 0xef, 0xcf, 0x32, 0x91,
	0x0b, 0x3c, 0x88, 0x63, 0xf8, 0xd8, 0xdd, 0x8a, 0xc4, 0x74, 0x2a, 0xd2, 0x30, 0x4a, 0x38, 0x4b,
	0x73, 0xbd, 0xba, 0x5b, 0x6e, 0x38, 0xa5, 0x92, 0x69, 0x96, 0xff, 0x9b, 0x87, 0xb0, 0xe1, 0x6a,
	0xd1, 0x30, 0x66, 0xf2, 0x12, 0xef, 0x20, 0x4f, 0xfd, 0x3f, 0x8a, 0x89, 0x33, 0x72, 0xc6, 0xfd,
	0xc0, 0x50, 0xf8, 0x2e, 0x72, 0x67, 0xf3, 0x98, 0xf4, 0x46, 0xce, 0x78, 0x18, 0xa8, 0x4f, 0xfc,
	0x08, 0xa1, 0x73, 0x3a, 0x65, 0xc7, 0xc5, 0xf4, 0x94, 0x65, 0xc4, 0x05, 0xe9, 0x1a, 0x47, 0x9d,
	0x94, 0x09, 0x31, 0x3d, 0x8a, 0xc9, 0x8a, 0x3e, 0x49, 0x53, 0xf8, 0x53, 0xe4, 0xc9, 0x9c, 0xe6,
	0x85, 0x24, 0xfd, 0x91, 0x33, 0xbe, 0xf3, 0x78, 0xb4, 0x6f, 0x4c, 0xdf, 0x37, 0xe6, 0xb0, 0xb4,
	0x98, 0x82, 0x31, 0xa1, 0x96, 0x0b, 0x8c, 0x3c, 0xde, 0x45, 0xab, 0x11, 0xcf, 0xa2, 0x84, 0x1d,
	0x0b, 0x32, 0x80, 0x33, 0x2d, 0x8d, 0xdf, 0x47, 0x1b, 0x51, 0x91, 0x65, 0x87, 0x4c, 0x5e, 0xbe,
	0x88, 0x44, 0xc6, 0xc8, 0x2a, 0x08, 0x34, 0x99, 0xf8, 0x00, 0x6d, 0xc4, 0x25, 0x31, 0xa1, 0x5c,
	0x12, 0x32, 0x72, 0xc6, 0x6b, 0x8f, 0xf7, 0xda, 0x26, 0x98, 0x88, 0xcc, 0xc4, 0x25, 0xcb, 0x82,
	0xe6, 0x16, 0xbc, 0x87, 0x86, 0xf2, 0x42, 0xcc, 0x27, 0x6a, 0x8d, 0x3c, 0x04, 0x2d, 0x15, 0x43,
	0x79, 0x1d, 0xd1, 0xf4, 0xcb, 0x42, 0x90, 0x07, 0x23, 0x67, 0xbc, 0x1a, 0x18, 0x0a, 0x6f, 0xa3,
	0xbe, 0x98, 0xa7, 0x2c, 0x23, 0x6b, 0x23, 0x67, 0xbc, 0x11, 0x68, 0x42, 0x79, 0xc4, 0xe5, 0x21,
	0xe5, 0x97, 0x94, 0x93, 0x75, 0x90, 0xb7, 0xb4, 0x8a, 0x6f, 0x0c, 0x5f, 0xdf, 0x48, 0x96, 0x91,
	0x0d, 0xd8, 0x56, 0xe3, 0x28, 0x8f, 0x4f, 0xa9, 0xf8, 0xf6, 0xa2, 0xa0, 0xe9, 0x39, 0x88, 0xec,
	0x80, 0x48, 0x93, 0x89, 0x3f, 0x47, 0x48, 0x99, 0x7f, 0x32, 0xcb, 0xb9, 0x48, 0xc9, 0x1d, 0x70,
	0xf7, 0xff, 0x6d, 0x77, 0x21, 0xd8, 0x02, 0x44, 0x82, 0x9a, 0xb8, 0xda, 0xac, 0x52, 0x8c, 0x65,
	0x47, 0xe9, 0x99, 0x20, 0x9b, 0x23, 0x77, 0xd9, 0x66, 0x13, 0xab, 0x42, 0xb2, 0x2c, 0xa8, 0x89,
	0xe3, 0x0f, 0xd0, 0x9d, 0x84, 0xca, 0xfc, 0xf9, 0x45, 0x31, 0x33, 0x3e, 0xdc, 0x05, 0x03, 0x5b,
	0x5c, 0x3c, 0x42, 0x6b, 0xea, 0x92, 0x9e, 0x45, 0x39, 0x08, 0xdd, 0x03, 0xa1, 0x3a, 0x0b, 0xfb,
	0x68, 0x9d, 0xcb, 0x93, 0xf4, 0x90, 0x4b, 0x29, 0x92, 0x57, 0x8c, 0x60, 0x88, 0x54, 0x83, 0xa7,
	0x64, 0x62, 0xf3, 0xfd, 0x35, 0x9f, 0x32, 0xb2, 0x35, 0x72, 0xc6, 0x6e, 0xd0, 0xe0, 0xa9, 0x88,
	0x72, 0xf9, 0x5c, 0xf0, 0x34, 0x10, 0x62, 0x4a, 0xb6, 0xe1, 0x94, 0x1a, 0x47, 0x59, 0x22, 0x8b,
	0x6c, 0x96, 0x14, 0x12, 0x8e, 0xb8, 0x0f, 0x77, 0x5b, 0x67, 0xf9, 0x7f, 0xac, 0xb4, 0x8b, 0x46,
	0xb9, 0xad, 0x2e, 0x5d, 0xfd, 0x37, 0x45, 0xb3, 0x11, 0x18, 0x4a, 0x5f, 0xef, 0x49, 0x9a, 0xf0,
	0x94, 0x41, 0x81, 0xc0, 0xf5, 0x6a, 0x5a, 0x25, 0x04, 0x4f, 0x63, 0x76, 0x65, 0xaa, 0x43, 0x13,
	0xf8, 0x09, 0xf2, 0x20, 0xe9, 0x74, 0x71, 0xdc, 0x94, 0x99, 0x46, 0x16, 0x7f, 0x82, 0x06, 0xa2,
	0xc8, 0xc3, 0x19, 0xe5, 0xc4, 0x7b, 0x97, 0x6d, 0xa2, 0xc8, 0x27, 0x94, 0xe3, 0x31, 0xda, 0x34,
	0xce, 0x41, 0xee, 0x1e, 0x17, 0x53, 0x48, 0x90, 0x7e, 0xd0, 0x66, 0x2b, 0x07, 0xb9, 0x9c, 0x50,
	0x29, 0xa1, 0xac, 0x56, 0x03, 0x43, 0x61, 0x82, 0x06, 0x5c, 0x06, 0x8c, 0xc6, 0xaf, 0xc9, 0x10,
	0x16, 0x4a, 0x52, 0xb9, 0x4e, 0x93, 0x44, 0x97, 0xe2, 0x9a, 0xae, 0xd5, 0x92, 0x56, 0x15, 0x64,
	0x4b, 0x0a, 0x92, 0xa2, 0x1f, 0x54, 0x0c, 0x1d, 0xb4, 0x03, 0x9a, 0xaa, 0xf2, 0xda, 0x2c, 0x83,
	0xa6, 0x69, 0x65, 0xf1, 0x29, 0x15, 0x6f, 0x20, 0xbd, 0x5f, 0xe8, 0x26, 0x82, 0xb5, 0xc5, 0x2d,
	0x36, 0xfe, 0x10, 0x79, 0xf3, 0x2b, 0x48, 0xdb, 0x75, 0x88, 0xc8, 0x96, 0x8d, 0xc8, 0x4b, 0xc6,
	0xaf, 0x78, 0xaa, 0x96, 0x02, 0x23, 0xa2, 0x4a, 0xa9, 0x4c, 0x14, 0xb5, 0x9d, 0x41, 0xb5, 0xf5,
	0x83, 0x26, 0x53, 0x55, 0x83, 0x54, 0x16, 0xaa, 0x38, 0x4b, 0x48, 0x9f, 0x9b, 0x02, 0x3d, 0x94,
	0xb6, 0x6b, 0x6c, 0xa3, 0xfe, 0x8c, 0x8a, 0x63, 0x01, 0xf9, 0xdd, 0x0f, 0x34, 0xe1, 0xff, 0xec,
	0xa0, 0x9d, 0x72, 0x63, 0xc6, 0x68, 0xce, 0x74, 0x29, 0x66, 0xec, 0x7b, 0xfc, 0x11, 0xf2, 0x2e,
	0x18, 0x8d, 0x59, 0x06, 0x39, 0xb5, 0xf6, 0x78, 0xdb, 0x6a, 0x9a, 0xa8, 0xbf, 0x5f, 0xc1, 0x5a,
	0x60, 0x64, 0xf0, 0xc7, 0xc8, 0xd3, 0xf5, 0x0b, 0x1d, 0xfa, 0x86, 0x12, 0x37, 0xa2, 0x8d, 0xee,
	0xe3, 0x36, 0xbb, 0x8f, 0x3f, 0x47, 0xf7, 0x6d, 0x3b, 0xce, 0x59, 0x76, 0x5b, 0xbb, 0x08, 0x1a,
	0xa8, 0x9d, 0x13, 0x3b, 0x3a, 0x4a, 0xb2, 0x36, 0x1e, 0xdc, 0xfa, 0x78, 0xf0, 0x7f, 0x71, 0x96,
	0x69, 0xa6, 0xd1, 0x65, 0x47, 0xcd, 0x4f, 0x4d, 0x92, 0xc1, 0x7d, 0x5e, 0x13, 0x94, 0xda, 0xe0,
	0x0b, 0x2a, 0x69, 0xd5, 0x07, 0x54, 0x1a, 0x47, 0x22, 0x4d, 0x59, 0x94, 0x9b, 0xd0, 0xd4, 0x59,
	0xfe, 0x0f, 0x0e, 0xda, 0x5e, 0x34, 0xf2, 0x34, 0xea, 0x68, 0x63, 0xb3, 0xbf, 0xf6, 0x3a, 0xf5,
	0x57, 0x9f, 0xa2, 0x07, 0x46, 0x42, 0xce, 0x79, 0x1e, 0x5d, 0x84, 0x99, 0x2a, 0xbc, 0xdb, 0xdd,
	0x51, 0x59, 0xc4, 0xbd, 0x46, 0x11, 0xfb, 0x57, 0x36, 0x3b, 0x1b, 0x2a, 0x3a, 0xfb, 0x59, 0xf5,
	0xc7, 0x5e, 0xa3, 0x3f, 0xd6, 0x34, 0xbb, 0x4d, 0xcd, 0x6f, 0x1d, 0xb4, 0x69, 0x54, 0x9f, 0xd1,
	0x19, 0xe5, 0xa1, 0xc8, 0x3b, 0xea, 0xac, 0x3a, 0x69, 0xaf, 0x43, 0x27, 0x7d, 0x84, 0x90, 0x9a,
	0x3c, 0xcf, 0x01, 0x56, 0x94, 0xa0, 0xa6, 0xe2, 0xf8, 0xdf, 0xa1, 0x2d, 0x0b, 0xa5, 0x4c, 0xc3,
	0xe9, 0x6e, 0x1a, 0x41, 0x03, 0x6a, 0xa6, 0x9d, 0x8e, 0x47, 0x49, 0xfa, 0x67, 0x36, 0xad, 0xaa,
	0xe3, 0xbb, 0x5f, 0x28, 0xe4, 0xef, 0x41, 0x79, 0x80, 0xb9, 0xd4, 0x3a, 0xcb, 0xff, 0xd1, 0x59,
	0xa2, 0xa8, 0x7b, 0x8d, 0x69, 0x08, 0xf2, 0xa6, 0x82, 0x20, 0x3d, 0x0b, 0x41, 0x2a, 0x66, 0xdb,
	0x1c, 0x77, 0xd1, 0x9c, 0x13, 0xf4, 0x70, 0x89, 0xdb, 0x32, 0xe4, 0x39, 0x9b, 0xfe, 0xf3, 0x70,
	0x35, 0x73, 0xa2, 0xd7, 0x9c, 0x13, 0xfe, 0x4f, 0xce, 0xd2, 0x40, 0xca, 0x45, 0xd0, 0xe4, 0x2c,
	0x03, 0x4d, 0x9f, 0x21, 0x2f, 0x63, 0xb2, 0x48, 0x72, 0x53, 0x93, 0x7e, 0x3b, 0x77, 0x16, 0xcd,
	0x0c, 0xcc, 0x8e, 0x26, 0x3c, 0x74, 0x5b, 0xf0, 0x50, 0x19, 0x76, 0xb7, 0xcc, 0x3f, 0x80, 0x40,
	0xdd, 0xb3, 0xa7, 0x85, 0x97, 0x7a, 0x8b, 0x78, 0xa9, 0xc2, 0xa0, 0x6e, 0x03, 0x83, 0xee, 0xa2,
	0x55, 0xd5, 0xa7, 0x00, 0xdc, 0xf4, 0xf5, 0x4c, 0x2e, 0x69, 0x7f, 0x6e, 0x1f, 0x15, 0xc6, 0xae,
	0xee, 0x69, 0x77, 0xab, 0x8a, 0xf3, 0xff, 0x5c, 0x88, 0x48, 0xe7, 0xf6, 0xf2, 0x04, 0x19, 0x44,
	0xf3, 0x6e, 0x8a, 0xaf, 0x47, 0x3f, 0xee, 0x72, 0xf4, 0xd3, 0xc0, 0x2b, 0xfd, 0x36, 0x5e, 0xb1,
	0x93, 0x7d, 0x50, 0x9f, 0xec, 0xcf, 0x6c, 0x3c, 0xcf, 0x0b, 0x71, 0xab, 0x78, 0xfa, 0x7f, 0x55,
	0x91, 0x31, 0x67, 0xfc, 0x9b, 0x8d, 0x97, 0xc6, 0x31, 0xe4, 0x8f, 0x07, 0x56, 0x97, 0x24, 0xe0,
	0xb6, 0x38, 0xae, 0x3f, 0xa1, 0x2c, 0xad, 0x3c, 0x05, 0x40, 0x03, 0x58, 0xaf, 0x1f, 0x68, 0xa2,
	0x05, 0x8b, 0x50, 0x27, 0x58, 0xe4, 0xbf, 0x75, 0x11, 0x29, 0x7d, 0xa4, 0x53, 0x16, 0xb2, 0x34,
	0x0e, 0x45, 0xca, 0x74, 0xe5, 0x63, 0xb4, 0x52, 0x54, 0x35, 0x0a, 0xdf, 0xf8, 0x10, 0x6d, 0xb2,
	0xab, 0x3c, 0x34, 0x1a, 0x85, 0x2e, 0x7e, 0xf7, 0xe6, 0x37, 0x1c, 0xbb, 0xca, 0xf5, 0x13, 0x0e,
	0x5e, 0x69, 0xf6, 0xce, 0xdc, 0xda, 0x9d, 0x55, 0xfe, 0xad, 0xd4, 0xfd, 0xdb, 0x43, 0x43, 0xf5,
	0x6c, 0x6e, 0xdc, 0xbe, 0x65, 0xc0, 0x2b, 0x38, 0x13, 0xc5, 0x4c, 0x2f, 0x7b, 0xe6, 0x15, 0x6c,
	0x39, 0x2a, 0x9e, 0xa5, 0xea, 0xf2, 0xcd, 0x5a, 0xd2, 0x0d, 0x8c, 0xbc, 0xda, 0xc2, 0xc8, 0x8f,
	0x10, 0xca, 0x45, 0x4e, 0x1b, 0x08, 0xba, 0xc6, 0xc1, 0xcf, 0xd0, 0x86, 0x49, 0x53, 0x13, 0x85,
	0xe1, 0x3b, 0x04, 0x7e, 0xbd, 0x9e, 0xd9, 0x8d, 0x06, 0x8a, 0x5a, 0x0d, 0xf4, 0xd7, 0x0a, 0x98,
	0x36, 0xee, 0xa5, 0x73, 0x06, 0x3e, 0x6d, 0xb5, 0xd2, 0xf7, 0xda, 0x06, 0x2e, 0x5c, 0xbb, 0xed,
	0xa4, 0x0b, 0xd3, 0xc5, 0x5d, 0x32, 0x5d, 0xfc, 0xdf, 0x9d, 0xc5, 0x0c, 0xa2, 0x49, 0x72, 0x7d,
	0x06, 0xd5, 0xa3, 0xde, 0x6b, 0x45, 0x1d, 0x00, 0xc9, 0x09, 0xbc, 0xd3, 0xbd, 0x12, 0x90, 0x00,
	0x69, 0x86, 0x18, 0x3f, 0x7f, 0xc9, 0x53, 0xb5, 0x3a, 0xb0, 0x43, 0xac, 0x64, 0xa9, 0x17, 0x28,
	0x4d, 0x92, 0x03, 0x9b, 0x2a, 0xfa, 0x46, 0x1b, 0x3c, 0x75, 0x0a, 0x4d, 0x92, 0x2f, 0xca, 0x84,
	0xd0, 0x75, 0x54, 0x67, 0x29, 0x64, 0xb9, 0xb3, 0xcc, 0x9d, 0xff, 0x30, 0xf0, 0x65, 0xb4, 0xca,
	0xc0, 0xfb, 0x47, 0xb6, 0x77, 0x89, 0xb3, 0x33, 0xf5, 0x58, 0x55, 0xda, 0xaf, 0x1b, 0xc3, 0x7b,
	0x68, 0xc8, 0xe5, 0x89, 0x96, 0x33, 0x73, 0xb8, 0x62, 0xf8, 0x47, 0x76, 0xb2, 0x47, 0x82, 0xa7,
	0xa1, 0xc2, 0xf8, 0x61, 0xc2, 0x65, 0x7e, 0x8b, 0x76, 0xf8, 0xfa, 0xba, 0xa3, 0xba, 0xe3, 0x96,
	0x7d, 0xd4, 0x57, 0xdb, 0xa5, 0x09, 0x0d, 0x69, 0x87, 0x46, 0x66, 0xaf, 0xe0, 0xfc, 0x40, 0x8b,
	0xf9, 0xd4, 0xaa, 0x86, 0x9f, 0x6d, 0xc2, 0xf2, 0x5d, 0x78, 0x8b, 0x21, 0x59, 0xfd, 0xbe, 0xd6,
	0xab, 0xff, 0xbe, 0x56, 0x0b, 0x54, 0x4b, 0x45, 0x67, 0xef, 0x26, 0xff, 0x9b, 0x38, 0x7f, 0x07,
	0x00, 0x00, 0xff, 0xff, 0x2a, 0x50, 0xdf, 0xda, 0x22, 0x14, 0x00, 0x00,
}
