// Code generated by protoc-gen-go.
// source: niuniu_base.proto
// DO NOT EDIT!

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of Heartbeat from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_reg from common_client.proto

// Ignoring public import of common_req_reg_via_input from common_client.proto

// Ignoring public import of common_ack_reg from common_client.proto

// Ignoring public import of common_req_gameLogin from common_client.proto

// Ignoring public import of common_req_gameLogin_via_input from common_client.proto

// Ignoring public import of common_ack_gameLogin from common_client.proto

// Ignoring public import of common_req_qrLogin from common_client.proto

// Ignoring public import of common_ack_qrLogin from common_client.proto

// Ignoring public import of common_req_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_reconnect from common_client.proto

// Ignoring public import of common_req_reconnect from common_client.proto

// Ignoring public import of common_req_gameState from common_client.proto

// Ignoring public import of common_ack_gameState from common_client.proto

// Ignoring public import of common_req_logout from common_client.proto

// Ignoring public import of common_ack_logout from common_client.proto

// Ignoring public import of common_req_feedback from common_client.proto

// Ignoring public import of client_base_poker from common_client.proto

// Ignoring public import of common_req_message from common_client.proto

// Ignoring public import of common_bc_message from common_client.proto

// Ignoring public import of common_req_notice from common_client.proto

// Ignoring public import of common_ack_notice from common_client.proto

// Ignoring public import of common_req_enterAgentMode from common_client.proto

// Ignoring public import of common_ack_enterAgentMode from common_client.proto

// Ignoring public import of common_req_quitAgentMode from common_client.proto

// Ignoring public import of common_ack_quitAgentMode from common_client.proto

// Ignoring public import of common_req_leaveDesk from common_client.proto

// Ignoring public import of common_ack_leaveDesk from common_client.proto

// Ignoring public import of common_bc_kickout from common_client.proto

// Ignoring public import of common_req_allowance from common_client.proto

// Ignoring public import of common_ack_allowance from common_client.proto

// Ignoring public import of common_req_applyDissolve from common_client.proto

// Ignoring public import of common_bc_applyDissolve from common_client.proto

// Ignoring public import of common_req_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_timeout from common_client.proto

// Ignoring public import of common_bc_userBreak from common_client.proto

// Ignoring public import of common_req_clickStatistic from common_client.proto

// Ignoring public import of common_req_offline from common_client.proto

// Ignoring public import of common_enum_reg from common_client.proto

// Ignoring public import of common_enum_os_type from common_client.proto

// Ignoring public import of common_enum_pokerColor from common_client.proto

// Ignoring public import of niuniu_srv_poker from niuniu_server.proto

// Ignoring public import of niuniu_user_bill from niuniu_server.proto

// Ignoring public import of niuniu_srv_desk_option from niuniu_server.proto

// Ignoring public import of niuniu_client_desk from niuniu_server.proto

// Ignoring public import of niuniu_client_user from niuniu_server.proto

// Ignoring public import of niuniu_srv_desk from niuniu_server.proto

// Ignoring public import of niuniu_srv_user from niuniu_server.proto

// Ignoring public import of niuniu_srv_room from niuniu_server.proto

// Ignoring public import of niuniu_enum_PokerType from niuniu_server.proto

// Ignoring public import of niuniu_enum_user_state from niuniu_server.proto

// Ignoring public import of niuniu_enum_desk_state from niuniu_server.proto

// Ignoring public import of niuniu_enum_banker_rule from niuniu_server.proto

type NiuniuEnumProtoid int32

const (
	// //////////////////////////////////
	NiuniuEnumProtoid_NIU_PID_HEARTBEAT       NiuniuEnumProtoid = 0
	NiuniuEnumProtoid_NIU_PID_QUICK_CONN      NiuniuEnumProtoid = 1
	NiuniuEnumProtoid_NIU_PID_QUICK_CONN_ACK  NiuniuEnumProtoid = 2
	NiuniuEnumProtoid_NIU_PID_GAME_LOGIN      NiuniuEnumProtoid = 3
	NiuniuEnumProtoid_NIU_PID_GAME_LOGIN_ACK  NiuniuEnumProtoid = 4
	NiuniuEnumProtoid_NIU_PID_CREATE_DESK_REQ NiuniuEnumProtoid = 5
	NiuniuEnumProtoid_NIU_PID_ENTER_DESK_REQ  NiuniuEnumProtoid = 6
	NiuniuEnumProtoid_NIU_PID_ENTER_DESK_ACK  NiuniuEnumProtoid = 7
	NiuniuEnumProtoid_NIU_PID_ENTER_DESK_BC   NiuniuEnumProtoid = 8
	NiuniuEnumProtoid_NIU_PID_READY_REQ       NiuniuEnumProtoid = 9
	NiuniuEnumProtoid_NIU_PID_READY_BC        NiuniuEnumProtoid = 10
	NiuniuEnumProtoid_NIU_PID_QIANGZHUANG_OT  NiuniuEnumProtoid = 11
	NiuniuEnumProtoid_NIU_PID_QIANGZHUANG_REQ NiuniuEnumProtoid = 12
	NiuniuEnumProtoid_NIU_PID_QIANGZHUANG_BC  NiuniuEnumProtoid = 13
	NiuniuEnumProtoid_NIU_PID_JIABEI_OT       NiuniuEnumProtoid = 14
	NiuniuEnumProtoid_NIU_PID_JIABEI_REQ      NiuniuEnumProtoid = 15
	NiuniuEnumProtoid_NIU_PID_JIABEI_BC       NiuniuEnumProtoid = 16
	NiuniuEnumProtoid_NIU_PID_BIPAI_RESULT_BC NiuniuEnumProtoid = 17
	NiuniuEnumProtoid_NIU_PID_GAME_END_BC     NiuniuEnumProtoid = 18
)

var NiuniuEnumProtoid_name = map[int32]string{
	0:  "NIU_PID_HEARTBEAT",
	1:  "NIU_PID_QUICK_CONN",
	2:  "NIU_PID_QUICK_CONN_ACK",
	3:  "NIU_PID_GAME_LOGIN",
	4:  "NIU_PID_GAME_LOGIN_ACK",
	5:  "NIU_PID_CREATE_DESK_REQ",
	6:  "NIU_PID_ENTER_DESK_REQ",
	7:  "NIU_PID_ENTER_DESK_ACK",
	8:  "NIU_PID_ENTER_DESK_BC",
	9:  "NIU_PID_READY_REQ",
	10: "NIU_PID_READY_BC",
	11: "NIU_PID_QIANGZHUANG_OT",
	12: "NIU_PID_QIANGZHUANG_REQ",
	13: "NIU_PID_QIANGZHUANG_BC",
	14: "NIU_PID_JIABEI_OT",
	15: "NIU_PID_JIABEI_REQ",
	16: "NIU_PID_JIABEI_BC",
	17: "NIU_PID_BIPAI_RESULT_BC",
	18: "NIU_PID_GAME_END_BC",
}
var NiuniuEnumProtoid_value = map[string]int32{
	"NIU_PID_HEARTBEAT":       0,
	"NIU_PID_QUICK_CONN":      1,
	"NIU_PID_QUICK_CONN_ACK":  2,
	"NIU_PID_GAME_LOGIN":      3,
	"NIU_PID_GAME_LOGIN_ACK":  4,
	"NIU_PID_CREATE_DESK_REQ": 5,
	"NIU_PID_ENTER_DESK_REQ":  6,
	"NIU_PID_ENTER_DESK_ACK":  7,
	"NIU_PID_ENTER_DESK_BC":   8,
	"NIU_PID_READY_REQ":       9,
	"NIU_PID_READY_BC":        10,
	"NIU_PID_QIANGZHUANG_OT":  11,
	"NIU_PID_QIANGZHUANG_REQ": 12,
	"NIU_PID_QIANGZHUANG_BC":  13,
	"NIU_PID_JIABEI_OT":       14,
	"NIU_PID_JIABEI_REQ":      15,
	"NIU_PID_JIABEI_BC":       16,
	"NIU_PID_BIPAI_RESULT_BC": 17,
	"NIU_PID_GAME_END_BC":     18,
}

func (x NiuniuEnumProtoid) Enum() *NiuniuEnumProtoid {
	p := new(NiuniuEnumProtoid)
	*p = x
	return p
}
func (x NiuniuEnumProtoid) String() string {
	return proto.EnumName(NiuniuEnumProtoid_name, int32(x))
}
func (x *NiuniuEnumProtoid) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NiuniuEnumProtoid_value, data, "NiuniuEnumProtoid")
	if err != nil {
		return err
	}
	*x = NiuniuEnumProtoid(value)
	return nil
}
func (NiuniuEnumProtoid) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

// ==============================创建房间===============================
type NiuCreateDeskReq struct {
	Header           *ProtoHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Option           *NiuniuSrvDeskOption `protobuf:"bytes,2,opt,name=option" json:"option,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *NiuCreateDeskReq) Reset()                    { *m = NiuCreateDeskReq{} }
func (m *NiuCreateDeskReq) String() string            { return proto.CompactTextString(m) }
func (*NiuCreateDeskReq) ProtoMessage()               {}
func (*NiuCreateDeskReq) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

func (m *NiuCreateDeskReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuCreateDeskReq) GetOption() *NiuniuSrvDeskOption {
	if m != nil {
		return m.Option
	}
	return nil
}

// ==============================进入房间===============================
type NiuEnterDeskReq struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	DeskNumber       *string      `protobuf:"bytes,2,opt,name=deskNumber" json:"deskNumber,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *NiuEnterDeskReq) Reset()                    { *m = NiuEnterDeskReq{} }
func (m *NiuEnterDeskReq) String() string            { return proto.CompactTextString(m) }
func (*NiuEnterDeskReq) ProtoMessage()               {}
func (*NiuEnterDeskReq) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{1} }

func (m *NiuEnterDeskReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuEnterDeskReq) GetDeskNumber() string {
	if m != nil && m.DeskNumber != nil {
		return *m.DeskNumber
	}
	return ""
}

type NiuEnterDeskAck struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	DeskState        *NiuniuClientDesk `protobuf:"bytes,2,opt,name=deskState" json:"deskState,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *NiuEnterDeskAck) Reset()                    { *m = NiuEnterDeskAck{} }
func (m *NiuEnterDeskAck) String() string            { return proto.CompactTextString(m) }
func (*NiuEnterDeskAck) ProtoMessage()               {}
func (*NiuEnterDeskAck) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{2} }

func (m *NiuEnterDeskAck) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuEnterDeskAck) GetDeskState() *NiuniuClientDesk {
	if m != nil {
		return m.DeskState
	}
	return nil
}

type NiuEnterDeskBc struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	User             *NiuniuClientUser `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *NiuEnterDeskBc) Reset()                    { *m = NiuEnterDeskBc{} }
func (m *NiuEnterDeskBc) String() string            { return proto.CompactTextString(m) }
func (*NiuEnterDeskBc) ProtoMessage()               {}
func (*NiuEnterDeskBc) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{3} }

func (m *NiuEnterDeskBc) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuEnterDeskBc) GetUser() *NiuniuClientUser {
	if m != nil {
		return m.User
	}
	return nil
}

// =============================准备===================================
type NiuSwitchReadyReq struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	IsReady          *bool        `protobuf:"varint,2,opt,name=isReady" json:"isReady,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *NiuSwitchReadyReq) Reset()                    { *m = NiuSwitchReadyReq{} }
func (m *NiuSwitchReadyReq) String() string            { return proto.CompactTextString(m) }
func (*NiuSwitchReadyReq) ProtoMessage()               {}
func (*NiuSwitchReadyReq) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{4} }

func (m *NiuSwitchReadyReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuSwitchReadyReq) GetIsReady() bool {
	if m != nil && m.IsReady != nil {
		return *m.IsReady
	}
	return false
}

type NiuSwitchReadyBc struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	User             *uint32      `protobuf:"varint,2,opt,name=user" json:"user,omitempty"`
	IsReady          *bool        `protobuf:"varint,3,opt,name=isReady" json:"isReady,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *NiuSwitchReadyBc) Reset()                    { *m = NiuSwitchReadyBc{} }
func (m *NiuSwitchReadyBc) String() string            { return proto.CompactTextString(m) }
func (*NiuSwitchReadyBc) ProtoMessage()               {}
func (*NiuSwitchReadyBc) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{5} }

func (m *NiuSwitchReadyBc) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuSwitchReadyBc) GetUser() uint32 {
	if m != nil && m.User != nil {
		return *m.User
	}
	return 0
}

func (m *NiuSwitchReadyBc) GetIsReady() bool {
	if m != nil && m.IsReady != nil {
		return *m.IsReady
	}
	return false
}

// =============================抢庄(发牌)===================================
type NiuQiangzhuangOt struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Pokers           *NiuniuSrvPoker `protobuf:"bytes,2,opt,name=pokers" json:"pokers,omitempty"`
	CurrCircle       *int32          `protobuf:"varint,3,opt,name=currCircle" json:"currCircle,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *NiuQiangzhuangOt) Reset()                    { *m = NiuQiangzhuangOt{} }
func (m *NiuQiangzhuangOt) String() string            { return proto.CompactTextString(m) }
func (*NiuQiangzhuangOt) ProtoMessage()               {}
func (*NiuQiangzhuangOt) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{6} }

func (m *NiuQiangzhuangOt) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuQiangzhuangOt) GetPokers() *NiuniuSrvPoker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

func (m *NiuQiangzhuangOt) GetCurrCircle() int32 {
	if m != nil && m.CurrCircle != nil {
		return *m.CurrCircle
	}
	return 0
}

type NiuQiangzhuangReq struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Score            *int32       `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *NiuQiangzhuangReq) Reset()                    { *m = NiuQiangzhuangReq{} }
func (m *NiuQiangzhuangReq) String() string            { return proto.CompactTextString(m) }
func (*NiuQiangzhuangReq) ProtoMessage()               {}
func (*NiuQiangzhuangReq) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{7} }

func (m *NiuQiangzhuangReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuQiangzhuangReq) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type NiuQiangzhuangResItem struct {
	User             *uint32 `protobuf:"varint,1,opt,name=user" json:"user,omitempty"`
	Score            *int32  `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	IsBanker         *bool   `protobuf:"varint,3,opt,name=isBanker" json:"isBanker,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NiuQiangzhuangResItem) Reset()                    { *m = NiuQiangzhuangResItem{} }
func (m *NiuQiangzhuangResItem) String() string            { return proto.CompactTextString(m) }
func (*NiuQiangzhuangResItem) ProtoMessage()               {}
func (*NiuQiangzhuangResItem) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{8} }

func (m *NiuQiangzhuangResItem) GetUser() uint32 {
	if m != nil && m.User != nil {
		return *m.User
	}
	return 0
}

func (m *NiuQiangzhuangResItem) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *NiuQiangzhuangResItem) GetIsBanker() bool {
	if m != nil && m.IsBanker != nil {
		return *m.IsBanker
	}
	return false
}

// 抢庄结果广播
type NiuQiangzhuangResBc struct {
	Header           *ProtoHeader             `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Result           []*NiuQiangzhuangResItem `protobuf:"bytes,2,rep,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *NiuQiangzhuangResBc) Reset()                    { *m = NiuQiangzhuangResBc{} }
func (m *NiuQiangzhuangResBc) String() string            { return proto.CompactTextString(m) }
func (*NiuQiangzhuangResBc) ProtoMessage()               {}
func (*NiuQiangzhuangResBc) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{9} }

func (m *NiuQiangzhuangResBc) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuQiangzhuangResBc) GetResult() []*NiuQiangzhuangResItem {
	if m != nil {
		return m.Result
	}
	return nil
}

// =============================加倍（发牌）===================================
type NiuJiabeiOt struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CuurBanker       *int32          `protobuf:"varint,2,opt,name=cuurBanker" json:"cuurBanker,omitempty"`
	Pokers           *NiuniuSrvPoker `protobuf:"bytes,3,opt,name=pokers" json:"pokers,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *NiuJiabeiOt) Reset()                    { *m = NiuJiabeiOt{} }
func (m *NiuJiabeiOt) String() string            { return proto.CompactTextString(m) }
func (*NiuJiabeiOt) ProtoMessage()               {}
func (*NiuJiabeiOt) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{10} }

func (m *NiuJiabeiOt) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuJiabeiOt) GetCuurBanker() int32 {
	if m != nil && m.CuurBanker != nil {
		return *m.CuurBanker
	}
	return 0
}

func (m *NiuJiabeiOt) GetPokers() *NiuniuSrvPoker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

type NiuJiabeiReq struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Score            *int32       `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	CurrCircle       *int32       `protobuf:"varint,3,opt,name=currCircle" json:"currCircle,omitempty"`
	CuurBanker       *int32       `protobuf:"varint,4,opt,name=cuurBanker" json:"cuurBanker,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *NiuJiabeiReq) Reset()                    { *m = NiuJiabeiReq{} }
func (m *NiuJiabeiReq) String() string            { return proto.CompactTextString(m) }
func (*NiuJiabeiReq) ProtoMessage()               {}
func (*NiuJiabeiReq) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{11} }

func (m *NiuJiabeiReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuJiabeiReq) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *NiuJiabeiReq) GetCurrCircle() int32 {
	if m != nil && m.CurrCircle != nil {
		return *m.CurrCircle
	}
	return 0
}

func (m *NiuJiabeiReq) GetCuurBanker() int32 {
	if m != nil && m.CuurBanker != nil {
		return *m.CuurBanker
	}
	return 0
}

type NiuJiabeiBc struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Score            *int32       `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *NiuJiabeiBc) Reset()                    { *m = NiuJiabeiBc{} }
func (m *NiuJiabeiBc) String() string            { return proto.CompactTextString(m) }
func (*NiuJiabeiBc) ProtoMessage()               {}
func (*NiuJiabeiBc) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{12} }

func (m *NiuJiabeiBc) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuJiabeiBc) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

// ==============================跟庄家比牌结果============================
type NiuBipaiResultItem struct {
	Poker            *NiuniuSrvPoker `protobuf:"bytes,1,opt,name=poker" json:"poker,omitempty"`
	Score            *int32          `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *NiuBipaiResultItem) Reset()                    { *m = NiuBipaiResultItem{} }
func (m *NiuBipaiResultItem) String() string            { return proto.CompactTextString(m) }
func (*NiuBipaiResultItem) ProtoMessage()               {}
func (*NiuBipaiResultItem) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{13} }

func (m *NiuBipaiResultItem) GetPoker() *NiuniuSrvPoker {
	if m != nil {
		return m.Poker
	}
	return nil
}

func (m *NiuBipaiResultItem) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type NiuBipaiResultBc struct {
	UserState        []*NiuBipaiResultItem `protobuf:"bytes,1,rep,name=userState" json:"userState,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *NiuBipaiResultBc) Reset()                    { *m = NiuBipaiResultBc{} }
func (m *NiuBipaiResultBc) String() string            { return proto.CompactTextString(m) }
func (*NiuBipaiResultBc) ProtoMessage()               {}
func (*NiuBipaiResultBc) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{14} }

func (m *NiuBipaiResultBc) GetUserState() []*NiuBipaiResultItem {
	if m != nil {
		return m.UserState
	}
	return nil
}

type NiuGameEnd struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Data             []*NiuniuUserBill `protobuf:"bytes,2,rep,name=data" json:"data,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *NiuGameEnd) Reset()                    { *m = NiuGameEnd{} }
func (m *NiuGameEnd) String() string            { return proto.CompactTextString(m) }
func (*NiuGameEnd) ProtoMessage()               {}
func (*NiuGameEnd) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{15} }

func (m *NiuGameEnd) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *NiuGameEnd) GetData() []*NiuniuUserBill {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*NiuCreateDeskReq)(nil), "ddproto.niu_create_desk_req")
	proto.RegisterType((*NiuEnterDeskReq)(nil), "ddproto.niu_enter_desk_req")
	proto.RegisterType((*NiuEnterDeskAck)(nil), "ddproto.niu_enter_desk_ack")
	proto.RegisterType((*NiuEnterDeskBc)(nil), "ddproto.niu_enter_desk_bc")
	proto.RegisterType((*NiuSwitchReadyReq)(nil), "ddproto.niu_switch_ready_req")
	proto.RegisterType((*NiuSwitchReadyBc)(nil), "ddproto.niu_switch_ready_bc")
	proto.RegisterType((*NiuQiangzhuangOt)(nil), "ddproto.niu_qiangzhuang_ot")
	proto.RegisterType((*NiuQiangzhuangReq)(nil), "ddproto.niu_qiangzhuang_req")
	proto.RegisterType((*NiuQiangzhuangResItem)(nil), "ddproto.niu_qiangzhuang_res_item")
	proto.RegisterType((*NiuQiangzhuangResBc)(nil), "ddproto.niu_qiangzhuang_res_bc")
	proto.RegisterType((*NiuJiabeiOt)(nil), "ddproto.niu_jiabei_ot")
	proto.RegisterType((*NiuJiabeiReq)(nil), "ddproto.niu_jiabei_req")
	proto.RegisterType((*NiuJiabeiBc)(nil), "ddproto.niu_jiabei_bc")
	proto.RegisterType((*NiuBipaiResultItem)(nil), "ddproto.niu_bipai_result_item")
	proto.RegisterType((*NiuBipaiResultBc)(nil), "ddproto.niu_bipai_result_bc")
	proto.RegisterType((*NiuGameEnd)(nil), "ddproto.niu_game_end")
	proto.RegisterEnum("ddproto.NiuniuEnumProtoid", NiuniuEnumProtoid_name, NiuniuEnumProtoid_value)
}

var fileDescriptor28 = []byte{
	// 795 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x55, 0xcf, 0x6f, 0xe3, 0x44,
	0x14, 0x5e, 0xe7, 0x57, 0x9b, 0xd7, 0xed, 0xe2, 0xce, 0xa6, 0xdd, 0x6c, 0x57, 0x5a, 0x16, 0x9f,
	0x2a, 0x04, 0xa9, 0xe8, 0x05, 0x55, 0xe2, 0x62, 0x3b, 0x56, 0x6a, 0x5a, 0xdc, 0x74, 0x92, 0x1c,
	0xca, 0xa1, 0x83, 0x63, 0x8f, 0x5a, 0x93, 0xc4, 0x4e, 0xc7, 0x76, 0x11, 0x08, 0x0e, 0xf0, 0x17,
	0x70, 0x80, 0xff, 0x17, 0xcd, 0xd8, 0x69, 0xc6, 0x4d, 0x02, 0xb8, 0xda, 0x4b, 0x14, 0xbf, 0xf7,
	0xbd, 0xf7, 0xbd, 0xef, 0x7b, 0x2f, 0x31, 0xec, 0x85, 0x41, 0x1a, 0x06, 0x29, 0x19, 0xbb, 0x31,
	0xed, 0xcc, 0x59, 0x94, 0x44, 0x68, 0xcb, 0xf7, 0xc5, 0x97, 0xc3, 0xd7, 0x5e, 0x34, 0x9b, 0x45,
	0x21, 0xf1, 0xa6, 0x01, 0x0d, 0x93, 0x4e, 0x1e, 0xcc, 0x0b, 0x62, 0xca, 0x1e, 0x28, 0xcb, 0x82,
	0xda, 0xaf, 0xc0, 0xc3, 0xc4, 0x63, 0xd4, 0x4d, 0x28, 0xf1, 0x69, 0x3c, 0x21, 0x8c, 0xde, 0xa3,
	0x2f, 0xa0, 0x71, 0x47, 0x5d, 0x9f, 0xb2, 0xb6, 0xf2, 0x41, 0x39, 0xda, 0x39, 0x69, 0x75, 0xf2,
	0xd6, 0x9d, 0x3e, 0xff, 0x3c, 0x13, 0x39, 0x9c, 0x63, 0xd0, 0xd7, 0xd0, 0x88, 0xe6, 0x49, 0x10,
	0x85, 0xed, 0x8a, 0x40, 0x7f, 0xfa, 0x88, 0x5e, 0x50, 0xb2, 0x87, 0xac, 0x77, 0x06, 0xc3, 0x39,
	0x5c, 0x1b, 0x03, 0xe2, 0x69, 0x1a, 0x26, 0x94, 0x3d, 0x97, 0xfc, 0x3d, 0x00, 0xaf, 0x74, 0xd2,
	0xd9, 0x98, 0x32, 0x31, 0x40, 0x13, 0x4b, 0x11, 0xed, 0xb7, 0x15, 0x0e, 0xd7, 0x9b, 0x94, 0xe4,
	0x38, 0x85, 0x26, 0xaf, 0x1c, 0x24, 0x6e, 0x42, 0x73, 0x8d, 0xef, 0x9e, 0x6a, 0xcc, 0xbc, 0x16,
	0x0c, 0x78, 0x89, 0xd6, 0x98, 0x58, 0x94, 0x4c, 0x3f, 0xf6, 0x4a, 0xb2, 0x1f, 0x43, 0x2d, 0x8d,
	0x73, 0x6d, 0x9b, 0x89, 0x39, 0x04, 0x0b, 0xa0, 0x76, 0x03, 0x2d, 0xe1, 0xfa, 0x4f, 0x41, 0xe2,
	0xdd, 0x11, 0x46, 0x5d, 0xff, 0xe7, 0x67, 0x18, 0xdb, 0x86, 0xad, 0x20, 0xc6, 0xbc, 0x58, 0x30,
	0x6f, 0xe3, 0xc5, 0xa3, 0x76, 0x9f, 0x1d, 0x4d, 0xa1, 0x7f, 0x69, 0x55, 0x48, 0x52, 0xb5, 0x9b,
	0x0d, 0x2e, 0x53, 0x56, 0x8b, 0x94, 0x7f, 0x2b, 0xd9, 0x1a, 0xef, 0x03, 0x37, 0xbc, 0xfd, 0xe5,
	0x2e, 0x75, 0xc3, 0x5b, 0x12, 0x25, 0x25, 0x29, 0xbf, 0x82, 0xc6, 0x3c, 0x9a, 0x50, 0x16, 0xe7,
	0x56, 0xbe, 0x5d, 0x77, 0xa7, 0x02, 0x81, 0x73, 0x20, 0xbf, 0x2e, 0x2f, 0x65, 0xcc, 0x0c, 0x98,
	0x37, 0xa5, 0x62, 0xa8, 0x3a, 0x96, 0x22, 0xda, 0x75, 0x66, 0x85, 0x3c, 0x56, 0x79, 0xa7, 0x5b,
	0x50, 0x8f, 0xbd, 0x88, 0x65, 0xa7, 0x55, 0xc7, 0xd9, 0x83, 0xf6, 0x03, 0xb4, 0x57, 0x5b, 0xc7,
	0x24, 0x48, 0xe8, 0xec, 0xd1, 0x3c, 0x45, 0x32, 0x6f, 0x6d, 0x17, 0x74, 0x08, 0xdb, 0x41, 0x6c,
	0xb8, 0xe1, 0x84, 0xb2, 0xdc, 0xd3, 0xc7, 0x67, 0xed, 0x77, 0x05, 0x0e, 0xd6, 0x51, 0x94, 0xde,
	0xe5, 0x29, 0x34, 0x18, 0x8d, 0xd3, 0x69, 0xd2, 0xae, 0x7c, 0xa8, 0x1e, 0xed, 0x9c, 0x7c, 0x26,
	0x1b, 0xbb, 0x56, 0x01, 0xce, 0x0b, 0xb4, 0x3f, 0x15, 0xd8, 0xe5, 0xa0, 0x1f, 0x03, 0x77, 0x4c,
	0x83, 0xf2, 0x3b, 0x15, 0x0b, 0x4a, 0x59, 0xae, 0xb0, 0xb2, 0x58, 0xd0, 0x22, 0x22, 0xed, 0xbc,
	0xfa, 0x3f, 0x77, 0xae, 0xfd, 0xa5, 0xc0, 0x2b, 0x69, 0xa4, 0x8f, 0xb4, 0xcf, 0xff, 0x3a, 0xa5,
	0x27, 0x4a, 0x6a, 0x4f, 0x95, 0x68, 0x83, 0x82, 0x51, 0xa5, 0x77, 0xb4, 0xfe, 0xc8, 0x6e, 0x60,
	0x5f, 0xbc, 0x44, 0x82, 0xb9, 0xcb, 0x95, 0xf2, 0x95, 0x64, 0x17, 0x76, 0x0c, 0x75, 0x61, 0x47,
	0xde, 0xfb, 0x5f, 0x6c, 0xcb, 0x70, 0x1b, 0xfa, 0x0f, 0xb2, 0xdf, 0x47, 0xa1, 0xff, 0xd8, 0x43,
	0xdf, 0x40, 0x93, 0xdf, 0x6c, 0xf6, 0x87, 0xaa, 0x88, 0x9b, 0x79, 0x5f, 0xb8, 0x99, 0x95, 0x81,
	0xf0, 0xb2, 0x40, 0x9b, 0xc0, 0x4b, 0x8e, 0xb9, 0x75, 0x67, 0x94, 0xd0, 0xd0, 0x2f, 0x69, 0xc4,
	0x97, 0x50, 0xf3, 0xdd, 0xc4, 0xcd, 0x4f, 0x75, 0x45, 0x18, 0xa7, 0x21, 0xe3, 0x60, 0x3a, 0xc5,
	0x02, 0xf6, 0xf9, 0x1f, 0x35, 0x58, 0xbc, 0x39, 0x69, 0x98, 0xce, 0x88, 0x00, 0x07, 0x3e, 0xda,
	0x87, 0x3d, 0xc7, 0x1e, 0x91, 0xbe, 0xdd, 0x25, 0x67, 0x96, 0x8e, 0x87, 0x86, 0xa5, 0x0f, 0xd5,
	0x17, 0xe8, 0x00, 0xd0, 0x22, 0x7c, 0x35, 0xb2, 0xcd, 0x73, 0x62, 0x5e, 0x3a, 0x8e, 0xaa, 0xa0,
	0x43, 0x38, 0x58, 0x8d, 0x13, 0xdd, 0x3c, 0x57, 0x2b, 0x72, 0x4d, 0x4f, 0xff, 0xce, 0x22, 0x17,
	0x97, 0x3d, 0xdb, 0x51, 0xab, 0x72, 0xcd, 0x32, 0x2e, 0x6a, 0x6a, 0xe8, 0x1d, 0xbc, 0x59, 0xe4,
	0x4c, 0x6c, 0xe9, 0x43, 0x8b, 0x74, 0xad, 0xc1, 0x39, 0xc1, 0xd6, 0x95, 0x5a, 0x97, 0x0b, 0x2d,
	0x67, 0x68, 0xe1, 0x65, 0xae, 0xb1, 0x21, 0xc7, 0x9b, 0x6e, 0xa1, 0xb7, 0xb0, 0xbf, 0x26, 0x67,
	0x98, 0xea, 0xb6, 0x2c, 0x17, 0x5b, 0x7a, 0xf7, 0x5a, 0x74, 0x6b, 0xa2, 0x16, 0xa8, 0xc5, 0xb0,
	0x61, 0xaa, 0x50, 0x10, 0x6b, 0xeb, 0x4e, 0xef, 0xfb, 0xb3, 0x91, 0xee, 0xf4, 0xc8, 0xe5, 0x50,
	0xdd, 0x91, 0x07, 0x97, 0x73, 0xbc, 0xdd, 0xcb, 0x4d, 0x85, 0x86, 0xa9, 0xee, 0xca, 0x13, 0x7c,
	0x6b, 0xeb, 0x86, 0x65, 0xf3, 0x7e, 0xaf, 0x64, 0xf3, 0xf2, 0x30, 0x6f, 0xf5, 0xc9, 0x1a, 0xb8,
	0x61, 0xaa, 0xaa, 0x4c, 0x6f, 0xd8, 0x7d, 0x9d, 0xa3, 0x07, 0xa3, 0x8b, 0x21, 0x4f, 0xee, 0xa1,
	0x37, 0xf0, 0xba, 0x60, 0xb8, 0xe5, 0x74, 0x79, 0x02, 0xf5, 0x5f, 0xf4, 0x95, 0x7f, 0x02, 0x00,
	0x00, 0xff, 0xff, 0x6e, 0xa8, 0xc6, 0x7f, 0x71, 0x09, 0x00, 0x00,
}
