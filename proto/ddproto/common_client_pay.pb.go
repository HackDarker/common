// Code generated by protoc-gen-go.
// source: common_client_pay.proto
// DO NOT EDIT!

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of Heartbeat from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_gameLogin from common_client.proto

// Ignoring public import of common_ack_gameLogin from common_client.proto

// Ignoring public import of common_req_logout from common_client.proto

// Ignoring public import of common_ack_logout from common_client.proto

// Ignoring public import of common_req_feedback from common_client.proto

// Ignoring public import of client_base_poker from common_client.proto

// Ignoring public import of common_req_message from common_client.proto

// Ignoring public import of common_bc_message from common_client.proto

// Ignoring public import of common_req_notice from common_client.proto

// Ignoring public import of common_ack_notice from common_client.proto

// Ignoring public import of common_enum_pokerColor from common_client.proto

// 订单的状态
type PayEnumTradeStatus int32

const (
	PayEnumTradeStatus_PAY_S_UNIFIEDORDER PayEnumTradeStatus = 1
	PayEnumTradeStatus_PAY_S_WATINGPAY    PayEnumTradeStatus = 2
	PayEnumTradeStatus_PAY_S_SUCC         PayEnumTradeStatus = 3
)

var PayEnumTradeStatus_name = map[int32]string{
	1: "PAY_S_UNIFIEDORDER",
	2: "PAY_S_WATINGPAY",
	3: "PAY_S_SUCC",
}
var PayEnumTradeStatus_value = map[string]int32{
	"PAY_S_UNIFIEDORDER": 1,
	"PAY_S_WATINGPAY":    2,
	"PAY_S_SUCC":         3,
}

func (x PayEnumTradeStatus) Enum() *PayEnumTradeStatus {
	p := new(PayEnumTradeStatus)
	*p = x
	return p
}
func (x PayEnumTradeStatus) String() string {
	return proto.EnumName(PayEnumTradeStatus_name, int32(x))
}
func (x *PayEnumTradeStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PayEnumTradeStatus_value, data, "PayEnumTradeStatus")
	if err != nil {
		return err
	}
	*x = PayEnumTradeStatus(value)
	return nil
}
func (PayEnumTradeStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

// 充值套餐
type PayBaseMeal struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Money            *int64  `protobuf:"varint,2,opt,name=money" json:"money,omitempty"`
	Diamond          *int64  `protobuf:"varint,3,opt,name=diamond" json:"diamond,omitempty"`
	Memo             *string `protobuf:"bytes,4,opt,name=memo" json:"memo,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PayBaseMeal) Reset()                    { *m = PayBaseMeal{} }
func (m *PayBaseMeal) String() string            { return proto.CompactTextString(m) }
func (*PayBaseMeal) ProtoMessage()               {}
func (*PayBaseMeal) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *PayBaseMeal) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PayBaseMeal) GetMoney() int64 {
	if m != nil && m.Money != nil {
		return *m.Money
	}
	return 0
}

func (m *PayBaseMeal) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *PayBaseMeal) GetMemo() string {
	if m != nil && m.Memo != nil {
		return *m.Memo
	}
	return ""
}

// 付款的模式,制定对应的商户号，appid,appkey
type PayBasePaymodel struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	AppId            *string `protobuf:"bytes,2,opt,name=appId" json:"appId,omitempty"`
	MchId            *string `protobuf:"bytes,3,opt,name=mchId" json:"mchId,omitempty"`
	AppKey           *string `protobuf:"bytes,4,opt,name=appKey" json:"appKey,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PayBasePaymodel) Reset()                    { *m = PayBasePaymodel{} }
func (m *PayBasePaymodel) String() string            { return proto.CompactTextString(m) }
func (*PayBasePaymodel) ProtoMessage()               {}
func (*PayBasePaymodel) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *PayBasePaymodel) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PayBasePaymodel) GetAppId() string {
	if m != nil && m.AppId != nil {
		return *m.AppId
	}
	return ""
}

func (m *PayBasePaymodel) GetMchId() string {
	if m != nil && m.MchId != nil {
		return *m.MchId
	}
	return ""
}

func (m *PayBasePaymodel) GetAppKey() string {
	if m != nil && m.AppKey != nil {
		return *m.AppKey
	}
	return ""
}

// 支付明细
type PayBaseDetails struct {
	Id               *int32              `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	UserId           *uint32             `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	PayModelId       *int32              `protobuf:"varint,3,opt,name=payModelId" json:"payModelId,omitempty"`
	MealId           *int32              `protobuf:"varint,4,opt,name=mealId" json:"mealId,omitempty"`
	TradeNo          *string             `protobuf:"bytes,5,opt,name=tradeNo" json:"tradeNo,omitempty"`
	Status           *PayEnumTradeStatus `protobuf:"varint,6,opt,name=status,enum=ddproto.PayEnumTradeStatus" json:"status,omitempty"`
	Diamond          *int64              `protobuf:"varint,7,opt,name=Diamond" json:"Diamond,omitempty"`
	ChangeDiamond    *int64              `protobuf:"varint,8,opt,name=ChangeDiamond" json:"ChangeDiamond,omitempty"`
	Coin             *int64              `protobuf:"varint,9,opt,name=Coin" json:"Coin,omitempty"`
	ChangeCoin       *int64              `protobuf:"varint,10,opt,name=ChangeCoin" json:"ChangeCoin,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *PayBaseDetails) Reset()                    { *m = PayBaseDetails{} }
func (m *PayBaseDetails) String() string            { return proto.CompactTextString(m) }
func (*PayBaseDetails) ProtoMessage()               {}
func (*PayBaseDetails) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *PayBaseDetails) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *PayBaseDetails) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *PayBaseDetails) GetPayModelId() int32 {
	if m != nil && m.PayModelId != nil {
		return *m.PayModelId
	}
	return 0
}

func (m *PayBaseDetails) GetMealId() int32 {
	if m != nil && m.MealId != nil {
		return *m.MealId
	}
	return 0
}

func (m *PayBaseDetails) GetTradeNo() string {
	if m != nil && m.TradeNo != nil {
		return *m.TradeNo
	}
	return ""
}

func (m *PayBaseDetails) GetStatus() PayEnumTradeStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return PayEnumTradeStatus_PAY_S_UNIFIEDORDER
}

func (m *PayBaseDetails) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *PayBaseDetails) GetChangeDiamond() int64 {
	if m != nil && m.ChangeDiamond != nil {
		return *m.ChangeDiamond
	}
	return 0
}

func (m *PayBaseDetails) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *PayBaseDetails) GetChangeCoin() int64 {
	if m != nil && m.ChangeCoin != nil {
		return *m.ChangeCoin
	}
	return 0
}

// 统一下单 proto
//    总金额	total_fee	是	Int	888	订单总金额，单位为分，详见支付金额
type WxpayReqUnifiedorder struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Meal             *int32       `protobuf:"varint,2,opt,name=meal" json:"meal,omitempty"`
	PayModelId       *int32       `protobuf:"varint,3,opt,name=payModelId" json:"payModelId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *WxpayReqUnifiedorder) Reset()                    { *m = WxpayReqUnifiedorder{} }
func (m *WxpayReqUnifiedorder) String() string            { return proto.CompactTextString(m) }
func (*WxpayReqUnifiedorder) ProtoMessage()               {}
func (*WxpayReqUnifiedorder) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *WxpayReqUnifiedorder) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *WxpayReqUnifiedorder) GetMeal() int32 {
	if m != nil && m.Meal != nil {
		return *m.Meal
	}
	return 0
}

func (m *WxpayReqUnifiedorder) GetPayModelId() int32 {
	if m != nil && m.PayModelId != nil {
		return *m.PayModelId
	}
	return 0
}

// app请求统一下单之后，返回的加密字符串
type WxpayAckUnifiedorder struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PartnerId        *string      `protobuf:"bytes,2,opt,name=partnerId" json:"partnerId,omitempty"`
	PrepayId         *string      `protobuf:"bytes,3,opt,name=prepay_id" json:"prepay_id,omitempty"`
	NonceStr         *string      `protobuf:"bytes,4,opt,name=nonce_str" json:"nonce_str,omitempty"`
	TimeStamp        *string      `protobuf:"bytes,5,opt,name=timeStamp" json:"timeStamp,omitempty"`
	Package          *string      `protobuf:"bytes,6,opt,name=package" json:"package,omitempty"`
	Sign             *string      `protobuf:"bytes,7,opt,name=sign" json:"sign,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *WxpayAckUnifiedorder) Reset()                    { *m = WxpayAckUnifiedorder{} }
func (m *WxpayAckUnifiedorder) String() string            { return proto.CompactTextString(m) }
func (*WxpayAckUnifiedorder) ProtoMessage()               {}
func (*WxpayAckUnifiedorder) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{4} }

func (m *WxpayAckUnifiedorder) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *WxpayAckUnifiedorder) GetPartnerId() string {
	if m != nil && m.PartnerId != nil {
		return *m.PartnerId
	}
	return ""
}

func (m *WxpayAckUnifiedorder) GetPrepayId() string {
	if m != nil && m.PrepayId != nil {
		return *m.PrepayId
	}
	return ""
}

func (m *WxpayAckUnifiedorder) GetNonceStr() string {
	if m != nil && m.NonceStr != nil {
		return *m.NonceStr
	}
	return ""
}

func (m *WxpayAckUnifiedorder) GetTimeStamp() string {
	if m != nil && m.TimeStamp != nil {
		return *m.TimeStamp
	}
	return ""
}

func (m *WxpayAckUnifiedorder) GetPackage() string {
	if m != nil && m.Package != nil {
		return *m.Package
	}
	return ""
}

func (m *WxpayAckUnifiedorder) GetSign() string {
	if m != nil && m.Sign != nil {
		return *m.Sign
	}
	return ""
}

// app收到同步回调之后，请求服务器检测接收异步回调，得到充值之后的信息
type WxpayReqSyncChecker struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	TradeNo          *string      `protobuf:"bytes,2,opt,name=tradeNo" json:"tradeNo,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *WxpayReqSyncChecker) Reset()                    { *m = WxpayReqSyncChecker{} }
func (m *WxpayReqSyncChecker) String() string            { return proto.CompactTextString(m) }
func (*WxpayReqSyncChecker) ProtoMessage()               {}
func (*WxpayReqSyncChecker) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{5} }

func (m *WxpayReqSyncChecker) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *WxpayReqSyncChecker) GetTradeNo() string {
	if m != nil && m.TradeNo != nil {
		return *m.TradeNo
	}
	return ""
}

// 服务器收到微信充值的异步回调之后，返回给app当前的余额信息
type WxpayAckSyncChecker struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	WxpayId          *int32       `protobuf:"varint,2,opt,name=wxpayId" json:"wxpayId,omitempty"`
	Diamond          *int64       `protobuf:"varint,3,opt,name=diamond" json:"diamond,omitempty"`
	ChangeDiamond    *int64       `protobuf:"varint,4,opt,name=changeDiamond" json:"changeDiamond,omitempty"`
	Coin             *int64       `protobuf:"varint,5,opt,name=coin" json:"coin,omitempty"`
	ChangeCoin       *int64       `protobuf:"varint,6,opt,name=changeCoin" json:"changeCoin,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *WxpayAckSyncChecker) Reset()                    { *m = WxpayAckSyncChecker{} }
func (m *WxpayAckSyncChecker) String() string            { return proto.CompactTextString(m) }
func (*WxpayAckSyncChecker) ProtoMessage()               {}
func (*WxpayAckSyncChecker) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{6} }

func (m *WxpayAckSyncChecker) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *WxpayAckSyncChecker) GetWxpayId() int32 {
	if m != nil && m.WxpayId != nil {
		return *m.WxpayId
	}
	return 0
}

func (m *WxpayAckSyncChecker) GetDiamond() int64 {
	if m != nil && m.Diamond != nil {
		return *m.Diamond
	}
	return 0
}

func (m *WxpayAckSyncChecker) GetChangeDiamond() int64 {
	if m != nil && m.ChangeDiamond != nil {
		return *m.ChangeDiamond
	}
	return 0
}

func (m *WxpayAckSyncChecker) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *WxpayAckSyncChecker) GetChangeCoin() int64 {
	if m != nil && m.ChangeCoin != nil {
		return *m.ChangeCoin
	}
	return 0
}

func init() {
	proto.RegisterType((*PayBaseMeal)(nil), "ddproto.pay_base_meal")
	proto.RegisterType((*PayBasePaymodel)(nil), "ddproto.pay_base_paymodel")
	proto.RegisterType((*PayBaseDetails)(nil), "ddproto.pay_base_details")
	proto.RegisterType((*WxpayReqUnifiedorder)(nil), "ddproto.wxpay_req_unifiedorder")
	proto.RegisterType((*WxpayAckUnifiedorder)(nil), "ddproto.wxpay_ack_unifiedorder")
	proto.RegisterType((*WxpayReqSyncChecker)(nil), "ddproto.wxpay_req_syncChecker")
	proto.RegisterType((*WxpayAckSyncChecker)(nil), "ddproto.wxpay_ack_syncChecker")
	proto.RegisterEnum("ddproto.PayEnumTradeStatus", PayEnumTradeStatus_name, PayEnumTradeStatus_value)
}

var fileDescriptor1 = []byte{
	// 512 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x52, 0x5d, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x49, 0x9c, 0xe0, 0x81, 0xb4, 0xa9, 0xfb, 0x83, 0x85, 0x84, 0x84, 0x2c, 0x1e, 0x10,
	0x12, 0x79, 0xe8, 0x0d, 0x2a, 0xa7, 0x80, 0x85, 0x1a, 0xa2, 0x86, 0x0a, 0xf1, 0x64, 0x96, 0xdd,
	0x25, 0x59, 0x35, 0xde, 0x35, 0x6b, 0x47, 0x90, 0x9b, 0x70, 0x05, 0xee, 0xc4, 0x61, 0x98, 0x1d,
	0xdb, 0x29, 0x51, 0xfb, 0x80, 0xfa, 0x62, 0x79, 0xbe, 0x99, 0xf9, 0x66, 0xe6, 0xfb, 0x16, 0x9e,
	0x70, 0x93, 0xe7, 0x46, 0x67, 0x7c, 0xa5, 0xa4, 0xae, 0xb2, 0x82, 0x6d, 0xc6, 0x85, 0x35, 0x95,
	0x09, 0x07, 0x42, 0xd0, 0xcf, 0xd3, 0xc3, 0x9d, 0x8a, 0x3a, 0x1b, 0xa7, 0x30, 0xc4, 0xd2, 0xec,
	0x2b, 0x2b, 0x65, 0x96, 0x4b, 0xb6, 0x0a, 0x01, 0x3a, 0x4a, 0x44, 0xde, 0x73, 0xef, 0xa5, 0x1f,
	0x0e, 0xc1, 0xc7, 0x06, 0xb9, 0x89, 0x3a, 0x18, 0x76, 0xc3, 0x7d, 0x18, 0x08, 0xc5, 0x10, 0x11,
	0x51, 0x97, 0x80, 0xc7, 0xd0, 0xcb, 0x65, 0x6e, 0xa2, 0x1e, 0x46, 0x41, 0x7c, 0x01, 0x07, 0x5b,
	0x2a, 0xfc, 0xc9, 0x8d, 0x90, 0xb7, 0xe8, 0x58, 0x51, 0xa4, 0x82, 0xe8, 0x02, 0x62, 0xe7, 0xcb,
	0xb4, 0x26, 0x0b, 0xc2, 0x3d, 0xe8, 0x63, 0xf6, 0x3d, 0x4e, 0xab, 0xe9, 0xfe, 0x78, 0x30, 0xda,
	0xf2, 0x09, 0x59, 0x31, 0xb5, 0x2a, 0x77, 0xe8, 0xb0, 0x61, 0x5d, 0x4a, 0xdb, 0xf0, 0x0d, 0x43,
	0x4c, 0x62, 0xfd, 0x85, 0x1b, 0xdb, 0x90, 0x52, 0x8d, 0xbb, 0x0a, 0xe3, 0x1e, 0xc5, 0x78, 0x42,
	0x65, 0x99, 0x90, 0x53, 0x13, 0xf9, 0x34, 0xf5, 0x35, 0xf4, 0xcb, 0x8a, 0x55, 0xeb, 0x32, 0xea,
	0x63, 0xbc, 0x77, 0xfa, 0x6c, 0xdc, 0xc8, 0x35, 0x76, 0xb3, 0xa5, 0x5e, 0xe7, 0x19, 0x35, 0xcc,
	0xa9, 0xc8, 0xf5, 0x4f, 0x1a, 0x09, 0x06, 0x24, 0xc1, 0x31, 0x0c, 0x93, 0x25, 0xd3, 0x0b, 0xd9,
	0xc2, 0x0f, 0x5b, 0x65, 0x12, 0xa3, 0x74, 0x14, 0x50, 0x84, 0x9b, 0xd5, 0x45, 0x84, 0x81, 0xc3,
	0xe2, 0x2f, 0x70, 0xf2, 0xe3, 0xa7, 0x9b, 0x61, 0xe5, 0xf7, 0x6c, 0xad, 0xd5, 0x37, 0x25, 0x85,
	0xb1, 0x42, 0xda, 0xf0, 0x05, 0xf4, 0x97, 0x12, 0x47, 0x5a, 0xba, 0xf3, 0xd1, 0xe9, 0xd1, 0x76,
	0xa5, 0x99, 0xfb, 0xbe, 0xa3, 0x5c, 0xad, 0x3d, 0x5b, 0xd1, 0xed, 0xfe, 0x5d, 0xb7, 0xc7, 0xbf,
	0xbd, 0x76, 0x04, 0xe3, 0xd7, 0xf7, 0x19, 0x71, 0x00, 0x41, 0xc1, 0x6c, 0xa5, 0xb7, 0x1a, 0x07,
	0x04, 0x59, 0xe9, 0x38, 0x55, 0xeb, 0x1b, 0x42, 0xda, 0x68, 0x2e, 0xb3, 0xb2, 0xb2, 0xb5, 0x75,
	0x0e, 0xaa, 0x54, 0xee, 0x34, 0xcb, 0x8b, 0x46, 0x67, 0x14, 0xae, 0xc0, 0x35, 0xd8, 0x42, 0x92,
	0xd0, 0x81, 0xdb, 0xbf, 0x54, 0x0b, 0x4d, 0x32, 0x06, 0xf1, 0x14, 0x8e, 0x6f, 0xd4, 0x28, 0x37,
	0x9a, 0x27, 0x4b, 0xc9, 0xaf, 0xff, 0x7b, 0xd3, 0x7f, 0x6c, 0xa5, 0x3d, 0xe3, 0x5f, 0x5e, 0x4b,
	0xe8, 0x6e, 0xbf, 0x17, 0x21, 0xb5, 0x37, 0x87, 0xfb, 0xb7, 0xdf, 0x3e, 0x1a, 0xcf, 0x77, 0x8c,
	0xef, 0xb5, 0xc6, 0x73, 0x67, 0xb2, 0xdf, 0x1a, 0xcf, 0x6f, 0x8c, 0x77, 0x87, 0x77, 0x5f, 0xcd,
	0xe1, 0xe8, 0xce, 0xa7, 0x75, 0x02, 0xe1, 0xec, 0xec, 0x73, 0x36, 0xcf, 0xae, 0xa6, 0xe9, 0x9b,
	0xf4, 0x7c, 0xf2, 0xe1, 0x72, 0x72, 0x7e, 0x39, 0xf2, 0xc2, 0x43, 0xd8, 0xaf, 0xf1, 0x4f, 0x67,
	0x1f, 0xd3, 0xe9, 0x5b, 0xfc, 0x1f, 0x75, 0xf0, 0x5d, 0x43, 0x0d, 0xce, 0xaf, 0x92, 0x64, 0xd4,
	0x9d, 0x3d, 0xf8, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x1d, 0x68, 0xbc, 0xe8, 0x00, 0x04, 0x00, 0x00,
}
