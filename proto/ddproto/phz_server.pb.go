// Code generated by protoc-gen-go. DO NOT EDIT.
// source: phz_server.proto

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of phz_play_paiIds from phz_base.proto

// Ignoring public import of phz_base_createOption from phz_base.proto

// Ignoring public import of phz_base_roomInfo from phz_base.proto

// Ignoring public import of phz_base_deskInfo from phz_base.proto

// Ignoring public import of phz_base_playerInfo from phz_base.proto

// Ignoring public import of phz_enum_protoId from phz_base.proto

// Ignoring public import of phz_enum_roomType from phz_base.proto

// Ignoring public import of phz_enum_tiType from phz_base.proto

// Ignoring public import of phz_enum_pengType from phz_base.proto

// Ignoring public import of phz_enum_paoType from phz_base.proto

// Ignoring public import of phz_enum_deskStatus from phz_base.proto

// Ignoring public import of phz_enum_userStatus from phz_base.proto

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of Heartbeat from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_reg from common_client.proto

// Ignoring public import of common_req_reg_via_input from common_client.proto

// Ignoring public import of common_ack_reg from common_client.proto

// Ignoring public import of common_req_gameLogin from common_client.proto

// Ignoring public import of common_req_gameLogin_via_input from common_client.proto

// Ignoring public import of common_ack_gameLogin from common_client.proto

// Ignoring public import of common_req_qrLogin from common_client.proto

// Ignoring public import of common_ack_qrLogin from common_client.proto

// Ignoring public import of common_req_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_reconnect from common_client.proto

// Ignoring public import of common_req_reconnect from common_client.proto

// Ignoring public import of common_req_gameState from common_client.proto

// Ignoring public import of common_ack_gameState from common_client.proto

// Ignoring public import of common_req_logout from common_client.proto

// Ignoring public import of common_ack_logout from common_client.proto

// Ignoring public import of common_req_feedback from common_client.proto

// Ignoring public import of client_base_poker from common_client.proto

// Ignoring public import of common_req_message from common_client.proto

// Ignoring public import of common_bc_message from common_client.proto

// Ignoring public import of common_req_notice from common_client.proto

// Ignoring public import of common_ack_notice from common_client.proto

// Ignoring public import of common_req_enterAgentMode from common_client.proto

// Ignoring public import of common_ack_enterAgentMode from common_client.proto

// Ignoring public import of common_req_quitAgentMode from common_client.proto

// Ignoring public import of common_ack_quitAgentMode from common_client.proto

// Ignoring public import of common_req_leaveDesk from common_client.proto

// Ignoring public import of common_ack_leaveDesk from common_client.proto

// Ignoring public import of common_req_kickout from common_client.proto

// Ignoring public import of common_bc_kickout from common_client.proto

// Ignoring public import of common_req_allowance from common_client.proto

// Ignoring public import of common_ack_allowance from common_client.proto

// Ignoring public import of common_req_applyDissolve from common_client.proto

// Ignoring public import of common_bc_applyDissolve from common_client.proto

// Ignoring public import of common_req_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_timeout from common_client.proto

// Ignoring public import of common_bc_userBreak from common_client.proto

// Ignoring public import of common_req_clickStatistic from common_client.proto

// Ignoring public import of common_req_offline from common_client.proto

// Ignoring public import of common_req_upload_location from common_client.proto

// Ignoring public import of common_bc_leaveTimeout from common_client.proto

// Ignoring public import of common_desk_by_agent from common_client.proto

// Ignoring public import of common_req_list_coin_desk from common_client.proto

// Ignoring public import of common_ack_list_coin_desk from common_client.proto

// Ignoring public import of CommonCoinDeskInfo from common_client.proto

// Ignoring public import of common_enum_reg from common_client.proto

// Ignoring public import of common_enum_os_type from common_client.proto

// Ignoring public import of common_enum_pokerColor from common_client.proto

type PlaybackPhzActType int32

const (
	PlaybackPhzActType_PHZ_PLAYBACK_ACTTYPE_TI    PlaybackPhzActType = 1
	PlaybackPhzActType_PHZ_PLAYBACK_ACTTYPE_WEI   PlaybackPhzActType = 2
	PlaybackPhzActType_PHZ_PLAYBACK_ACTTYPE_HU    PlaybackPhzActType = 3
	PlaybackPhzActType_PHZ_PLAYBACK_ACTTYPE_PAO   PlaybackPhzActType = 4
	PlaybackPhzActType_PHZ_PLAYBACK_ACTTYPE_PENG  PlaybackPhzActType = 5
	PlaybackPhzActType_PHZ_PLAYBACK_ACTTYPE_CHI   PlaybackPhzActType = 6
	PlaybackPhzActType_PHZ_PLAYBACK_ACTTYPE_PASS  PlaybackPhzActType = 7
	PlaybackPhzActType_PHZ_PLAYBACK_ACTTYPE_MOPAI PlaybackPhzActType = 8
	PlaybackPhzActType_PHZ_PLAYBACK_ACTTYPE_OUT   PlaybackPhzActType = 9
)

var PlaybackPhzActType_name = map[int32]string{
	1: "PHZ_PLAYBACK_ACTTYPE_TI",
	2: "PHZ_PLAYBACK_ACTTYPE_WEI",
	3: "PHZ_PLAYBACK_ACTTYPE_HU",
	4: "PHZ_PLAYBACK_ACTTYPE_PAO",
	5: "PHZ_PLAYBACK_ACTTYPE_PENG",
	6: "PHZ_PLAYBACK_ACTTYPE_CHI",
	7: "PHZ_PLAYBACK_ACTTYPE_PASS",
	8: "PHZ_PLAYBACK_ACTTYPE_MOPAI",
	9: "PHZ_PLAYBACK_ACTTYPE_OUT",
}
var PlaybackPhzActType_value = map[string]int32{
	"PHZ_PLAYBACK_ACTTYPE_TI":    1,
	"PHZ_PLAYBACK_ACTTYPE_WEI":   2,
	"PHZ_PLAYBACK_ACTTYPE_HU":    3,
	"PHZ_PLAYBACK_ACTTYPE_PAO":   4,
	"PHZ_PLAYBACK_ACTTYPE_PENG":  5,
	"PHZ_PLAYBACK_ACTTYPE_CHI":   6,
	"PHZ_PLAYBACK_ACTTYPE_PASS":  7,
	"PHZ_PLAYBACK_ACTTYPE_MOPAI": 8,
	"PHZ_PLAYBACK_ACTTYPE_OUT":   9,
}

func (x PlaybackPhzActType) Enum() *PlaybackPhzActType {
	p := new(PlaybackPhzActType)
	*p = x
	return p
}
func (x PlaybackPhzActType) String() string {
	return proto.EnumName(PlaybackPhzActType_name, int32(x))
}
func (x *PlaybackPhzActType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlaybackPhzActType_value, data, "PlaybackPhzActType")
	if err != nil {
		return err
	}
	*x = PlaybackPhzActType(value)
	return nil
}
func (PlaybackPhzActType) EnumDescriptor() ([]byte, []int) { return fileDescriptor48, []int{0} }

type PlaybackPhzAckPage struct {
	Header *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// 分页信息
	Length *int32 `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
	Page   *int32 `protobuf:"varint,3,opt,name=page" json:"page,omitempty"`
	Total  *int32 `protobuf:"varint,4,opt,name=total" json:"total,omitempty"`
	// 快照信息
	PlaybackSnapshots []*PhzPlaybackSnapshot `protobuf:"bytes,5,rep,name=playbackSnapshots" json:"playbackSnapshots,omitempty"`
	XXX_unrecognized  []byte                 `json:"-"`
}

func (m *PlaybackPhzAckPage) Reset()                    { *m = PlaybackPhzAckPage{} }
func (m *PlaybackPhzAckPage) String() string            { return proto.CompactTextString(m) }
func (*PlaybackPhzAckPage) ProtoMessage()               {}
func (*PlaybackPhzAckPage) Descriptor() ([]byte, []int) { return fileDescriptor48, []int{0} }

func (m *PlaybackPhzAckPage) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *PlaybackPhzAckPage) GetLength() int32 {
	if m != nil && m.Length != nil {
		return *m.Length
	}
	return 0
}

func (m *PlaybackPhzAckPage) GetPage() int32 {
	if m != nil && m.Page != nil {
		return *m.Page
	}
	return 0
}

func (m *PlaybackPhzAckPage) GetTotal() int32 {
	if m != nil && m.Total != nil {
		return *m.Total
	}
	return 0
}

func (m *PlaybackPhzAckPage) GetPlaybackSnapshots() []*PhzPlaybackSnapshot {
	if m != nil {
		return m.PlaybackSnapshots
	}
	return nil
}

// 玩家的信息
type PhzPlaybackPlayerInfo struct {
	// 基本信息
	Coin     *int64             `protobuf:"varint,1,opt,name=coin" json:"coin,omitempty"`
	Huxi     *int32             `protobuf:"varint,2,opt,name=huxi" json:"huxi,omitempty"`
	NickName *string            `protobuf:"bytes,3,opt,name=nickName" json:"nickName,omitempty"`
	UserId   *uint32            `protobuf:"varint,4,opt,name=userId" json:"userId,omitempty"`
	Status   *PhzEnumUserStatus `protobuf:"varint,5,opt,name=status,enum=ddproto.PhzEnumUserStatus" json:"status,omitempty"`
	IsOnline *bool              `protobuf:"varint,6,opt,name=isOnline" json:"isOnline,omitempty"`
	IsBanker *bool              `protobuf:"varint,7,opt,name=isBanker" json:"isBanker,omitempty"`
	// 玩家牌的信息
	HandPokers       *PhzPlayPaiIds   `protobuf:"bytes,8,opt,name=handPokers" json:"handPokers,omitempty"`
	TiPais           []*PhzPlayPaiIds `protobuf:"bytes,9,rep,name=tiPais" json:"tiPais,omitempty"`
	PaoPais          []*PhzPlayPaiIds `protobuf:"bytes,10,rep,name=paoPais" json:"paoPais,omitempty"`
	WeiPais          []*PhzPlayPaiIds `protobuf:"bytes,11,rep,name=weiPais" json:"weiPais,omitempty"`
	PengPais         []*PhzPlayPaiIds `protobuf:"bytes,12,rep,name=pengPais" json:"pengPais,omitempty"`
	ChiPais          []*PhzPlayPaiIds `protobuf:"bytes,13,rep,name=chiPais" json:"chiPais,omitempty"`
	OutCards         *PhzPlayPaiIds   `protobuf:"bytes,14,opt,name=outCards" json:"outCards,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *PhzPlaybackPlayerInfo) Reset()                    { *m = PhzPlaybackPlayerInfo{} }
func (m *PhzPlaybackPlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*PhzPlaybackPlayerInfo) ProtoMessage()               {}
func (*PhzPlaybackPlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor48, []int{1} }

func (m *PhzPlaybackPlayerInfo) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *PhzPlaybackPlayerInfo) GetHuxi() int32 {
	if m != nil && m.Huxi != nil {
		return *m.Huxi
	}
	return 0
}

func (m *PhzPlaybackPlayerInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *PhzPlaybackPlayerInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *PhzPlaybackPlayerInfo) GetStatus() PhzEnumUserStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return PhzEnumUserStatus_PHZUSER_STATUS_INIT
}

func (m *PhzPlaybackPlayerInfo) GetIsOnline() bool {
	if m != nil && m.IsOnline != nil {
		return *m.IsOnline
	}
	return false
}

func (m *PhzPlaybackPlayerInfo) GetIsBanker() bool {
	if m != nil && m.IsBanker != nil {
		return *m.IsBanker
	}
	return false
}

func (m *PhzPlaybackPlayerInfo) GetHandPokers() *PhzPlayPaiIds {
	if m != nil {
		return m.HandPokers
	}
	return nil
}

func (m *PhzPlaybackPlayerInfo) GetTiPais() []*PhzPlayPaiIds {
	if m != nil {
		return m.TiPais
	}
	return nil
}

func (m *PhzPlaybackPlayerInfo) GetPaoPais() []*PhzPlayPaiIds {
	if m != nil {
		return m.PaoPais
	}
	return nil
}

func (m *PhzPlaybackPlayerInfo) GetWeiPais() []*PhzPlayPaiIds {
	if m != nil {
		return m.WeiPais
	}
	return nil
}

func (m *PhzPlaybackPlayerInfo) GetPengPais() []*PhzPlayPaiIds {
	if m != nil {
		return m.PengPais
	}
	return nil
}

func (m *PhzPlaybackPlayerInfo) GetChiPais() []*PhzPlayPaiIds {
	if m != nil {
		return m.ChiPais
	}
	return nil
}

func (m *PhzPlaybackPlayerInfo) GetOutCards() *PhzPlayPaiIds {
	if m != nil {
		return m.OutCards
	}
	return nil
}

// 回放快照信息（包含玩家信息、桌面信息、房间信息、右上角时间信息等），另外包含协议信息（PID 和 二进制数据）
type PhzPlaybackSnapshot struct {
	PlayerInfos      []*PhzPlaybackPlayerInfo `protobuf:"bytes,1,rep,name=PlayerInfos" json:"PlayerInfos,omitempty"`
	PlayBackDeskInfo *PhzPlaybackDeskInfo     `protobuf:"bytes,2,opt,name=PlayBackDeskInfo" json:"PlayBackDeskInfo,omitempty"`
	Time             *string                  `protobuf:"bytes,3,opt,name=time" json:"time,omitempty"`
	ActType          *PlaybackPhzActType      `protobuf:"varint,4,opt,name=actType,enum=ddproto.PlaybackPhzActType" json:"actType,omitempty"`
	Userid           *uint32                  `protobuf:"varint,5,opt,name=userid" json:"userid,omitempty"`
	OutPais          []int32                  `protobuf:"varint,6,rep,name=outPais" json:"outPais,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *PhzPlaybackSnapshot) Reset()                    { *m = PhzPlaybackSnapshot{} }
func (m *PhzPlaybackSnapshot) String() string            { return proto.CompactTextString(m) }
func (*PhzPlaybackSnapshot) ProtoMessage()               {}
func (*PhzPlaybackSnapshot) Descriptor() ([]byte, []int) { return fileDescriptor48, []int{2} }

func (m *PhzPlaybackSnapshot) GetPlayerInfos() []*PhzPlaybackPlayerInfo {
	if m != nil {
		return m.PlayerInfos
	}
	return nil
}

func (m *PhzPlaybackSnapshot) GetPlayBackDeskInfo() *PhzPlaybackDeskInfo {
	if m != nil {
		return m.PlayBackDeskInfo
	}
	return nil
}

func (m *PhzPlaybackSnapshot) GetTime() string {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return ""
}

func (m *PhzPlaybackSnapshot) GetActType() PlaybackPhzActType {
	if m != nil && m.ActType != nil {
		return *m.ActType
	}
	return PlaybackPhzActType_PHZ_PLAYBACK_ACTTYPE_TI
}

func (m *PhzPlaybackSnapshot) GetUserid() uint32 {
	if m != nil && m.Userid != nil {
		return *m.Userid
	}
	return 0
}

func (m *PhzPlaybackSnapshot) GetOutPais() []int32 {
	if m != nil {
		return m.OutPais
	}
	return nil
}

// 回放桌面信息
type PhzPlaybackDeskInfo struct {
	GameStatus       *int32  `protobuf:"varint,1,opt,name=gameStatus" json:"gameStatus,omitempty"`
	ActiveUserId     *uint32 `protobuf:"varint,2,opt,name=activeUserId" json:"activeUserId,omitempty"`
	CurrentRound     *int32  `protobuf:"varint,3,opt,name=currentRound" json:"currentRound,omitempty"`
	Password         *string `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	BankerId         *uint32 `protobuf:"varint,5,opt,name=bankerId" json:"bankerId,omitempty"`
	RemainPokerCount *int32  `protobuf:"varint,6,opt,name=remainPokerCount" json:"remainPokerCount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PhzPlaybackDeskInfo) Reset()                    { *m = PhzPlaybackDeskInfo{} }
func (m *PhzPlaybackDeskInfo) String() string            { return proto.CompactTextString(m) }
func (*PhzPlaybackDeskInfo) ProtoMessage()               {}
func (*PhzPlaybackDeskInfo) Descriptor() ([]byte, []int) { return fileDescriptor48, []int{3} }

func (m *PhzPlaybackDeskInfo) GetGameStatus() int32 {
	if m != nil && m.GameStatus != nil {
		return *m.GameStatus
	}
	return 0
}

func (m *PhzPlaybackDeskInfo) GetActiveUserId() uint32 {
	if m != nil && m.ActiveUserId != nil {
		return *m.ActiveUserId
	}
	return 0
}

func (m *PhzPlaybackDeskInfo) GetCurrentRound() int32 {
	if m != nil && m.CurrentRound != nil {
		return *m.CurrentRound
	}
	return 0
}

func (m *PhzPlaybackDeskInfo) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *PhzPlaybackDeskInfo) GetBankerId() uint32 {
	if m != nil && m.BankerId != nil {
		return *m.BankerId
	}
	return 0
}

func (m *PhzPlaybackDeskInfo) GetRemainPokerCount() int32 {
	if m != nil && m.RemainPokerCount != nil {
		return *m.RemainPokerCount
	}
	return 0
}

func init() {
	proto.RegisterType((*PlaybackPhzAckPage)(nil), "ddproto.playback_phz_ack_page")
	proto.RegisterType((*PhzPlaybackPlayerInfo)(nil), "ddproto.PhzPlaybackPlayerInfo")
	proto.RegisterType((*PhzPlaybackSnapshot)(nil), "ddproto.PhzPlaybackSnapshot")
	proto.RegisterType((*PhzPlaybackDeskInfo)(nil), "ddproto.PhzPlaybackDeskInfo")
	proto.RegisterEnum("ddproto.PlaybackPhzActType", PlaybackPhzActType_name, PlaybackPhzActType_value)
}

func init() { proto.RegisterFile("phz_server.proto", fileDescriptor48) }

var fileDescriptor48 = []byte{
	// 726 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x54, 0xdd, 0x6e, 0xda, 0x4a,
	0x10, 0x3e, 0xe6, 0x9f, 0x21, 0x41, 0x3e, 0x9b, 0xe4, 0x1c, 0x97, 0xa6, 0x11, 0xe2, 0x0a, 0x45,
	0x55, 0x54, 0x45, 0xb9, 0xc8, 0x65, 0x09, 0x8d, 0x8a, 0xfb, 0x13, 0xac, 0x85, 0xa8, 0x4a, 0x6f,
	0xac, 0x8d, 0xbd, 0xc5, 0x16, 0xb0, 0xb6, 0xbc, 0xeb, 0xa4, 0xc9, 0xdb, 0xf4, 0xaa, 0x0f, 0x54,
	0xf5, 0x01, 0xfa, 0x26, 0xd5, 0xae, 0x7f, 0x02, 0x01, 0xc4, 0x0d, 0xde, 0x6f, 0xe6, 0xfb, 0x3c,
	0xb3, 0xc3, 0x37, 0x06, 0x3d, 0xf4, 0x1e, 0x6d, 0x4e, 0xa3, 0x3b, 0x1a, 0x9d, 0x84, 0x51, 0x20,
	0x02, 0x54, 0x75, 0x5d, 0x75, 0x68, 0x35, 0x65, 0xea, 0x96, 0x70, 0x9a, 0x24, 0x5a, 0x7b, 0x4e,
	0x30, 0x9f, 0x07, 0xcc, 0x76, 0x66, 0x3e, 0x65, 0x22, 0x09, 0x76, 0x7e, 0x69, 0x70, 0x10, 0xce,
	0xc8, 0xc3, 0x2d, 0x71, 0xa6, 0xb6, 0x14, 0xa8, 0x27, 0x99, 0x50, 0xf4, 0x1a, 0x2a, 0x1e, 0x25,
	0x2e, 0x8d, 0x0c, 0xad, 0xad, 0x75, 0x1b, 0xa7, 0xfb, 0x27, 0xe9, 0x8b, 0x4f, 0x2c, 0xf9, 0x3b,
	0x50, 0x39, 0x9c, 0x72, 0xd0, 0x7f, 0x50, 0x99, 0x51, 0x36, 0x11, 0x9e, 0x51, 0x68, 0x6b, 0xdd,
	0x32, 0x4e, 0x11, 0x42, 0x50, 0x92, 0x6f, 0x33, 0x8a, 0x2a, 0xaa, 0xce, 0x68, 0x1f, 0xca, 0x22,
	0x10, 0x64, 0x66, 0x94, 0x54, 0x30, 0x01, 0xe8, 0x03, 0xfc, 0x9b, 0x35, 0x32, 0x62, 0x24, 0xe4,
	0x5e, 0x20, 0xb8, 0x51, 0x6e, 0x17, 0xbb, 0x8d, 0xd3, 0xc3, 0xa7, 0xd2, 0xde, 0xa3, 0xf5, 0x8c,
	0x84, 0x57, 0x65, 0x9d, 0xdf, 0x25, 0x38, 0x58, 0xa0, 0xca, 0x27, 0x8d, 0x4c, 0xf6, 0x2d, 0x90,
	0xfd, 0x38, 0x81, 0xcf, 0xd4, 0x9d, 0x8a, 0x58, 0x9d, 0x65, 0xcc, 0x8b, 0xbf, 0xfb, 0x69, 0xe7,
	0xea, 0x8c, 0x5a, 0x50, 0x63, 0xbe, 0x33, 0xbd, 0x22, 0xf3, 0xa4, 0xf7, 0x3a, 0xce, 0xb1, 0xbc,
	0x6b, 0xcc, 0x69, 0x64, 0xba, 0xea, 0x02, 0xbb, 0x38, 0x45, 0xe8, 0x0c, 0x2a, 0x5c, 0x10, 0x11,
	0xcb, 0xb6, 0xb5, 0x6e, 0x73, 0xa1, 0x6d, 0x39, 0x58, 0xca, 0xe2, 0xb9, 0x2d, 0x99, 0x23, 0xc5,
	0xc1, 0x29, 0x57, 0x56, 0xf2, 0xf9, 0x90, 0xcd, 0x7c, 0x46, 0x8d, 0x4a, 0x5b, 0xeb, 0xd6, 0x70,
	0x8e, 0x93, 0xdc, 0x05, 0x61, 0x53, 0x1a, 0x19, 0xd5, 0x2c, 0x97, 0x60, 0x74, 0x0e, 0xe0, 0x11,
	0xe6, 0x5a, 0xc1, 0x94, 0x46, 0xdc, 0xa8, 0xa9, 0xff, 0xc8, 0x58, 0xaa, 0x28, 0xe7, 0x62, 0x87,
	0xc4, 0x37, 0x5d, 0x8e, 0x17, 0xb8, 0xe8, 0x0d, 0x54, 0x84, 0x6f, 0x11, 0x9f, 0x1b, 0x75, 0x35,
	0xde, 0xcd, 0xaa, 0x94, 0x87, 0x4e, 0xa1, 0x1a, 0x92, 0x40, 0x49, 0x60, 0x8b, 0x24, 0x23, 0x4a,
	0xcd, 0x3d, 0x4d, 0xca, 0x34, 0xb6, 0x69, 0x52, 0x22, 0x3a, 0x83, 0x5a, 0x48, 0xd9, 0x44, 0x89,
	0x76, 0xb6, 0x88, 0x72, 0xa6, 0xac, 0xe4, 0x78, 0x49, 0xa5, 0xdd, 0x6d, 0x95, 0x52, 0xa2, 0xac,
	0x14, 0xc4, 0xa2, 0x4f, 0x22, 0x97, 0x1b, 0xcd, 0x2d, 0xb3, 0xcb, 0x99, 0x9d, 0x1f, 0x05, 0xd8,
	0x5b, 0x63, 0x41, 0xf4, 0x16, 0x1a, 0x4f, 0x1e, 0xe3, 0x86, 0xa6, 0xba, 0x38, 0x5a, 0xe7, 0xda,
	0x27, 0x1a, 0x5e, 0x94, 0xa0, 0x01, 0xe8, 0x12, 0x5e, 0x10, 0x67, 0xfa, 0x8e, 0xf2, 0xa9, 0x0c,
	0x2a, 0x3f, 0x6e, 0x30, 0x7f, 0xc6, 0xc1, 0x2b, 0x2a, 0xe9, 0x66, 0xe1, 0xe7, 0xae, 0x55, 0x67,
	0x74, 0x0e, 0x55, 0xe2, 0x88, 0xf1, 0x43, 0x48, 0x95, 0x65, 0x9b, 0x0b, 0xbd, 0x3d, 0x5b, 0x7e,
	0x61, 0x8b, 0x87, 0x90, 0xe2, 0x8c, 0x9e, 0x79, 0xdd, 0x77, 0x95, 0xa7, 0x53, 0xaf, 0xfb, 0x2e,
	0x32, 0xa0, 0x1a, 0xc4, 0x42, 0xcd, 0xbc, 0xd2, 0x2e, 0x76, 0xcb, 0x38, 0x83, 0x9d, 0x3f, 0xda,
	0xd2, 0x8c, 0xf2, 0xbe, 0x8e, 0x00, 0x26, 0x64, 0x4e, 0x13, 0xf7, 0xab, 0xfd, 0x2b, 0xe3, 0x85,
	0x08, 0xea, 0xc0, 0x0e, 0x71, 0x84, 0x7f, 0x47, 0xaf, 0x93, 0xdd, 0x2a, 0xa8, 0x7a, 0x4b, 0x31,
	0xc9, 0x71, 0xe2, 0x28, 0xa2, 0x4c, 0xe0, 0x20, 0x66, 0x6e, 0xfa, 0x55, 0x59, 0x8a, 0xc9, 0x9d,
	0x09, 0x09, 0xe7, 0xf7, 0x41, 0x94, 0xec, 0x67, 0x1d, 0xe7, 0x58, 0xe6, 0x6e, 0xd5, 0xf6, 0x98,
	0xd9, 0x7d, 0x72, 0x8c, 0x8e, 0x41, 0x8f, 0xe8, 0x9c, 0xf8, 0x4c, 0x6d, 0x49, 0x3f, 0x88, 0x99,
	0x50, 0xfb, 0x58, 0xc6, 0x2b, 0xf1, 0xe3, 0x9f, 0x85, 0x95, 0xaf, 0x66, 0x32, 0x38, 0xf4, 0x12,
	0xfe, 0xb7, 0x06, 0x5f, 0x6d, 0xeb, 0x53, 0xef, 0xe6, 0xa2, 0xd7, 0xff, 0x68, 0xf7, 0xfa, 0xe3,
	0xf1, 0x8d, 0x75, 0x69, 0x8f, 0x4d, 0x5d, 0x43, 0x87, 0x60, 0xac, 0x4d, 0x7e, 0xb9, 0x34, 0xf5,
	0xc2, 0x46, 0xe9, 0xe0, 0x5a, 0x2f, 0x6e, 0x94, 0x5a, 0xbd, 0xa1, 0x5e, 0x42, 0xaf, 0xe0, 0xc5,
	0xfa, 0xec, 0xe5, 0xd5, 0x7b, 0xbd, 0xbc, 0x51, 0xdc, 0x1f, 0x98, 0x7a, 0x65, 0xb3, 0xb8, 0x37,
	0x1a, 0xe9, 0x55, 0x74, 0x04, 0xad, 0xb5, 0xe9, 0xcf, 0x43, 0xab, 0x67, 0xea, 0xb5, 0x8d, 0x2f,
	0x1f, 0x5e, 0x8f, 0xf5, 0xba, 0xf5, 0x8f, 0xa5, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x12, 0x9a,
	0x52, 0x4f, 0xa4, 0x06, 0x00, 0x00,
}
