// Code generated by protoc-gen-go.
// source: common_server_msg.proto
// DO NOT EDIT!

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of common_enum_game from common_enum.proto

// Ignoring public import of COMMON_ENUM_ROOMTYPE from common_enum.proto

// Ignoring public import of COMMON_ENUM_GAMESTATUS from common_enum.proto

// Ignoring public import of COMMON_ENUM_RELEASETAG from common_enum.proto

// Ignoring public import of COMMON_ENUM_KICKOUT from common_enum.proto

// Ignoring public import of COMMON_ENUM_APPLYDISSOLVE from common_enum.proto

// Ignoring public import of BTN_TYPE from common_enum.proto

// Ignoring public import of COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM from common_enum.proto

// 游戏结束后的统计数据消息
type CommonSrvMsgGameCount struct {
	UserId           *uint32               `protobuf:"varint,1,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	GameId           *CommonEnumGame       `protobuf:"varint,2,opt,name=game_id,json=gameId,enum=ddproto.CommonEnumGame" json:"game_id,omitempty"`
	GameNumber       *int32                `protobuf:"varint,3,opt,name=game_number,json=gameNumber" json:"game_number,omitempty"`
	RoomType         *COMMON_ENUM_ROOMTYPE `protobuf:"varint,4,opt,name=room_type,json=roomType,enum=ddproto.COMMON_ENUM_ROOMTYPE" json:"room_type,omitempty"`
	RoomLevel        *int32                `protobuf:"varint,5,opt,name=room_level,json=roomLevel" json:"room_level,omitempty"`
	Bill             *float64              `protobuf:"fixed64,6,opt,name=bill" json:"bill,omitempty"`
	IsWine           *bool                 `protobuf:"varint,7,opt,name=is_wine,json=isWine" json:"is_wine,omitempty"`
	Data             *string               `protobuf:"bytes,8,opt,name=data" json:"data,omitempty"`
	StartTime        *int64                `protobuf:"varint,9,opt,name=start_time,json=startTime" json:"start_time,omitempty"`
	EndTime          *int64                `protobuf:"varint,10,opt,name=end_time,json=endTime" json:"end_time,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CommonSrvMsgGameCount) Reset()                    { *m = CommonSrvMsgGameCount{} }
func (m *CommonSrvMsgGameCount) String() string            { return proto.CompactTextString(m) }
func (*CommonSrvMsgGameCount) ProtoMessage()               {}
func (*CommonSrvMsgGameCount) Descriptor() ([]byte, []int) { return fileDescriptor8, []int{0} }

func (m *CommonSrvMsgGameCount) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonSrvMsgGameCount) GetGameId() CommonEnumGame {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return CommonEnumGame_GID_SRC
}

func (m *CommonSrvMsgGameCount) GetGameNumber() int32 {
	if m != nil && m.GameNumber != nil {
		return *m.GameNumber
	}
	return 0
}

func (m *CommonSrvMsgGameCount) GetRoomType() COMMON_ENUM_ROOMTYPE {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return COMMON_ENUM_ROOMTYPE_DESK_FRIEND
}

func (m *CommonSrvMsgGameCount) GetRoomLevel() int32 {
	if m != nil && m.RoomLevel != nil {
		return *m.RoomLevel
	}
	return 0
}

func (m *CommonSrvMsgGameCount) GetBill() float64 {
	if m != nil && m.Bill != nil {
		return *m.Bill
	}
	return 0
}

func (m *CommonSrvMsgGameCount) GetIsWine() bool {
	if m != nil && m.IsWine != nil {
		return *m.IsWine
	}
	return false
}

func (m *CommonSrvMsgGameCount) GetData() string {
	if m != nil && m.Data != nil {
		return *m.Data
	}
	return ""
}

func (m *CommonSrvMsgGameCount) GetStartTime() int64 {
	if m != nil && m.StartTime != nil {
		return *m.StartTime
	}
	return 0
}

func (m *CommonSrvMsgGameCount) GetEndTime() int64 {
	if m != nil && m.EndTime != nil {
		return *m.EndTime
	}
	return 0
}

func init() {
	proto.RegisterType((*CommonSrvMsgGameCount)(nil), "ddproto.common_srv_msg_game_count")
}

var fileDescriptor8 = []byte{
	// 302 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x8f, 0xcb, 0x4a, 0x03, 0x31,
	0x14, 0x86, 0x4d, 0x2f, 0x73, 0x89, 0x28, 0x98, 0x4d, 0x53, 0xa1, 0x18, 0x5c, 0x65, 0xd5, 0x45,
	0x97, 0x6e, 0xa5, 0x8b, 0x82, 0xd3, 0x29, 0xa1, 0x22, 0xae, 0xc2, 0xb4, 0x39, 0x94, 0xc0, 0x24,
	0x29, 0x99, 0x4c, 0xa5, 0x4f, 0xeb, 0xab, 0x48, 0xd2, 0x2a, 0x6e, 0x86, 0x7f, 0xfe, 0xcb, 0x77,
	0x08, 0x9e, 0xec, 0x9d, 0x31, 0xce, 0xca, 0x0e, 0xfc, 0x09, 0xbc, 0x34, 0xdd, 0x61, 0x7e, 0xf4,
	0x2e, 0x38, 0x92, 0x2b, 0x95, 0xc4, 0xe3, 0xc3, 0xb5, 0x01, 0xb6, 0x37, 0x97, 0xec, 0xf9, 0x7b,
	0x80, 0xa7, 0xbf, 0x3b, 0x7f, 0x8a, 0x23, 0x79, 0x68, 0x0c, 0xc8, 0xbd, 0xeb, 0x6d, 0x20, 0x13,
	0x9c, 0xf7, 0x1d, 0x78, 0xa9, 0x15, 0x45, 0x0c, 0xf1, 0x3b, 0x91, 0xc5, 0xdf, 0x95, 0x22, 0x0b,
	0x9c, 0xa7, 0x9a, 0x56, 0x74, 0xc0, 0x10, 0xbf, 0x5f, 0x4c, 0xe7, 0xd7, 0x23, 0xf3, 0x7f, 0x37,
	0x12, 0x4a, 0x64, 0xf1, 0xbb, 0x52, 0xe4, 0x09, 0xdf, 0xa6, 0x8d, 0xed, 0xcd, 0x0e, 0x3c, 0x1d,
	0x32, 0xc4, 0xc7, 0x02, 0x47, 0x6b, 0x9d, 0x1c, 0xf2, 0x82, 0x4b, 0xef, 0x9c, 0x91, 0xe1, 0x7c,
	0x04, 0x3a, 0x4a, 0xd8, 0xd9, 0x1f, 0xf6, 0xb5, 0xae, 0xaa, 0x7a, 0x2d, 0x97, 0xeb, 0xf7, 0x4a,
	0x8a, 0xba, 0xae, 0xb6, 0x9f, 0x9b, 0xa5, 0x28, 0x62, 0x7f, 0x7b, 0x3e, 0x02, 0x99, 0x61, 0x9c,
	0xb6, 0x2d, 0x9c, 0xa0, 0xa5, 0xe3, 0xc4, 0x4e, 0xb4, 0xb7, 0x68, 0x10, 0x82, 0x47, 0x3b, 0xdd,
	0xb6, 0x34, 0x63, 0x88, 0x23, 0x91, 0x74, 0x7c, 0x9c, 0xee, 0xe4, 0x97, 0xb6, 0x40, 0x73, 0x86,
	0x78, 0x21, 0x32, 0xdd, 0x7d, 0x68, 0x0b, 0xb1, 0xac, 0x9a, 0xd0, 0xd0, 0x82, 0x21, 0x5e, 0x8a,
	0xa4, 0x23, 0xbf, 0x0b, 0x8d, 0x0f, 0x32, 0x68, 0x03, 0xb4, 0x64, 0x88, 0x0f, 0x45, 0x99, 0x9c,
	0xad, 0x36, 0x40, 0xa6, 0xb8, 0x00, 0xab, 0x2e, 0x21, 0x4e, 0x61, 0x0e, 0x56, 0xc5, 0x68, 0x73,
	0xf3, 0x13, 0x00, 0x00, 0xff, 0xff, 0xf0, 0x78, 0x8c, 0xf8, 0x99, 0x01, 0x00, 0x00,
}
