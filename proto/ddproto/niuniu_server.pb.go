// Code generated by protoc-gen-go.
// source: niuniu_server.proto
// DO NOT EDIT!

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of niuniu_srv_poker from niuniu_base.proto

// Ignoring public import of niuniu_user_bill from niuniu_base.proto

// Ignoring public import of niuniu_srv_desk_option from niuniu_base.proto

// Ignoring public import of niuniu_enum_protoid from niuniu_base.proto

// Ignoring public import of niuniu_enum_PokerType from niuniu_base.proto

// Ignoring public import of niuniu_enum_user_state from niuniu_base.proto

// Ignoring public import of niuniu_enum_desk_state from niuniu_base.proto

// Ignoring public import of niuniu_enum_banker_rule from niuniu_base.proto

// desk 的信息
type NiuniuSrvDesk struct {
	DeskId           *int32               `protobuf:"varint,1,opt,name=deskId" json:"deskId,omitempty"`
	DeskNumber       *string              `protobuf:"bytes,2,opt,name=deskNumber" json:"deskNumber,omitempty"`
	GameNumber       *int32               `protobuf:"varint,3,opt,name=gameNumber" json:"gameNumber,omitempty"`
	RoomId           *int32               `protobuf:"varint,4,opt,name=roomId" json:"roomId,omitempty"`
	Status           *NiuniuEnumDeskState `protobuf:"varint,5,opt,name=status,enum=ddproto.NiuniuEnumDeskState" json:"status,omitempty"`
	LastWiner        *uint32              `protobuf:"varint,6,opt,name=lastWiner" json:"lastWiner,omitempty"`
	CircleNo         *int32               `protobuf:"varint,8,opt,name=circleNo" json:"circleNo,omitempty"`
	Owner            *uint32              `protobuf:"varint,10,opt,name=owner" json:"owner,omitempty"`
	CurrBanker       *uint32              `protobuf:"varint,11,opt,name=currBanker" json:"currBanker,omitempty"`
	DeskOption       *NiuniuSrvDeskOption `protobuf:"bytes,12,opt,name=deskOption" json:"deskOption,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *NiuniuSrvDesk) Reset()                    { *m = NiuniuSrvDesk{} }
func (m *NiuniuSrvDesk) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvDesk) ProtoMessage()               {}
func (*NiuniuSrvDesk) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{0} }

func (m *NiuniuSrvDesk) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *NiuniuSrvDesk) GetDeskNumber() string {
	if m != nil && m.DeskNumber != nil {
		return *m.DeskNumber
	}
	return ""
}

func (m *NiuniuSrvDesk) GetGameNumber() int32 {
	if m != nil && m.GameNumber != nil {
		return *m.GameNumber
	}
	return 0
}

func (m *NiuniuSrvDesk) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *NiuniuSrvDesk) GetStatus() NiuniuEnumDeskState {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return NiuniuEnumDeskState_NIU_DESK_STATUS_WAIT_ENTER
}

func (m *NiuniuSrvDesk) GetLastWiner() uint32 {
	if m != nil && m.LastWiner != nil {
		return *m.LastWiner
	}
	return 0
}

func (m *NiuniuSrvDesk) GetCircleNo() int32 {
	if m != nil && m.CircleNo != nil {
		return *m.CircleNo
	}
	return 0
}

func (m *NiuniuSrvDesk) GetOwner() uint32 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

func (m *NiuniuSrvDesk) GetCurrBanker() uint32 {
	if m != nil && m.CurrBanker != nil {
		return *m.CurrBanker
	}
	return 0
}

func (m *NiuniuSrvDesk) GetDeskOption() *NiuniuSrvDeskOption {
	if m != nil {
		return m.DeskOption
	}
	return nil
}

// 用户属性
type NiuniuSrvUser struct {
	UserId           *uint32              `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Bill             *NiuniuUserBill      `protobuf:"bytes,6,opt,name=bill" json:"bill,omitempty"`
	Status           *NiuniuEnumUserState `protobuf:"varint,7,opt,name=status,enum=ddproto.NiuniuEnumUserState" json:"status,omitempty"`
	IsOnline         *bool                `protobuf:"varint,10,opt,name=isOnline" json:"isOnline,omitempty"`
	Index            *int32               `protobuf:"varint,12,opt,name=index" json:"index,omitempty"`
	Pokers           *NiuniuSrvPoker      `protobuf:"bytes,13,opt,name=pokers" json:"pokers,omitempty"`
	BankerScore      *int32               `protobuf:"varint,14,opt,name=bankerScore" json:"bankerScore,omitempty"`
	DoubleScore      *int32               `protobuf:"varint,15,opt,name=doubleScore" json:"doubleScore,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *NiuniuSrvUser) Reset()                    { *m = NiuniuSrvUser{} }
func (m *NiuniuSrvUser) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvUser) ProtoMessage()               {}
func (*NiuniuSrvUser) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{1} }

func (m *NiuniuSrvUser) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *NiuniuSrvUser) GetBill() *NiuniuUserBill {
	if m != nil {
		return m.Bill
	}
	return nil
}

func (m *NiuniuSrvUser) GetStatus() NiuniuEnumUserState {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return NiuniuEnumUserState_NIU_USER_STATUS_NO_READY
}

func (m *NiuniuSrvUser) GetIsOnline() bool {
	if m != nil && m.IsOnline != nil {
		return *m.IsOnline
	}
	return false
}

func (m *NiuniuSrvUser) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NiuniuSrvUser) GetPokers() *NiuniuSrvPoker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

func (m *NiuniuSrvUser) GetBankerScore() int32 {
	if m != nil && m.BankerScore != nil {
		return *m.BankerScore
	}
	return 0
}

func (m *NiuniuSrvUser) GetDoubleScore() int32 {
	if m != nil && m.DoubleScore != nil {
		return *m.DoubleScore
	}
	return 0
}

// room 的信息
type NiuniuSrvRoom struct {
	RoomId           *int32  `protobuf:"varint,1,opt,name=roomId" json:"roomId,omitempty"`
	RoomType         *int32  `protobuf:"varint,2,opt,name=roomType" json:"roomType,omitempty"`
	RoomLevel        *int32  `protobuf:"varint,3,opt,name=roomLevel" json:"roomLevel,omitempty"`
	RoomTitle        *string `protobuf:"bytes,4,opt,name=roomTitle" json:"roomTitle,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NiuniuSrvRoom) Reset()                    { *m = NiuniuSrvRoom{} }
func (m *NiuniuSrvRoom) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvRoom) ProtoMessage()               {}
func (*NiuniuSrvRoom) Descriptor() ([]byte, []int) { return fileDescriptor30, []int{2} }

func (m *NiuniuSrvRoom) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *NiuniuSrvRoom) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

func (m *NiuniuSrvRoom) GetRoomLevel() int32 {
	if m != nil && m.RoomLevel != nil {
		return *m.RoomLevel
	}
	return 0
}

func (m *NiuniuSrvRoom) GetRoomTitle() string {
	if m != nil && m.RoomTitle != nil {
		return *m.RoomTitle
	}
	return ""
}

func init() {
	proto.RegisterType((*NiuniuSrvDesk)(nil), "ddproto.niuniu_srv_desk")
	proto.RegisterType((*NiuniuSrvUser)(nil), "ddproto.niuniu_srv_user")
	proto.RegisterType((*NiuniuSrvRoom)(nil), "ddproto.niuniu_srv_room")
}

var fileDescriptor30 = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xc1, 0x8e, 0xd3, 0x30,
	0x10, 0x25, 0xcb, 0xa6, 0x9b, 0xba, 0x74, 0x57, 0x18, 0x84, 0x4c, 0x85, 0x20, 0xea, 0x29, 0x17,
	0x2a, 0xb1, 0x17, 0x8e, 0x48, 0xdc, 0x56, 0x42, 0xbb, 0xc8, 0xac, 0xc4, 0x31, 0x4a, 0x9a, 0x11,
	0xb2, 0x9a, 0xda, 0x95, 0x1d, 0x17, 0x38, 0xf2, 0x5b, 0xfc, 0x12, 0x3f, 0x81, 0x66, 0xec, 0xb6,
	0x0e, 0x20, 0x4e, 0x99, 0xf7, 0xe6, 0x8d, 0x33, 0xf3, 0xf4, 0xd8, 0x13, 0xad, 0xbc, 0x56, 0xbe,
	0x76, 0x60, 0xf7, 0x60, 0x57, 0x3b, 0x6b, 0x06, 0xc3, 0x2f, 0xba, 0x8e, 0x8a, 0xc5, 0xe3, 0xd8,
	0x6d, 0x1b, 0x07, 0xa1, 0xb7, 0xfc, 0x75, 0xc6, 0xae, 0x0e, 0x33, 0x76, 0x5f, 0x77, 0xe0, 0x36,
	0xfc, 0x19, 0x9b, 0xe0, 0xf7, 0xa6, 0x13, 0x59, 0x99, 0x55, 0xb9, 0x8c, 0x88, 0xbf, 0x64, 0x0c,
	0xab, 0x5b, 0xbf, 0x6d, 0xc1, 0x8a, 0xb3, 0x32, 0xab, 0xa6, 0x32, 0x61, 0xb0, 0xff, 0xa5, 0xd9,
	0x42, 0xec, 0x3f, 0xa4, 0xd9, 0x84, 0xc1, 0x77, 0xad, 0x31, 0xdb, 0x9b, 0x4e, 0x9c, 0x87, 0x77,
	0x03, 0xe2, 0x6f, 0xd9, 0xc4, 0x0d, 0xcd, 0xe0, 0x9d, 0xc8, 0xcb, 0xac, 0xba, 0xbc, 0x7e, 0xb5,
	0x8a, 0x0b, 0xaf, 0xe2, 0x66, 0xa0, 0xfd, 0x96, 0x56, 0xab, 0x51, 0x07, 0x32, 0xca, 0xf9, 0x0b,
	0x36, 0xed, 0x1b, 0x37, 0x7c, 0x56, 0x1a, 0xac, 0x98, 0x94, 0x59, 0x35, 0x97, 0x27, 0x82, 0x2f,
	0x58, 0xb1, 0x56, 0x76, 0xdd, 0xc3, 0xad, 0x11, 0x05, 0xfd, 0xf0, 0x88, 0xf9, 0x53, 0x96, 0x9b,
	0xaf, 0x38, 0xc5, 0x68, 0x2a, 0x00, 0x3c, 0x60, 0xed, 0xad, 0x7d, 0xdf, 0xe8, 0x0d, 0x58, 0x31,
	0xa3, 0x56, 0xc2, 0xf0, 0x77, 0xc1, 0x80, 0xbb, 0xdd, 0xa0, 0x8c, 0x16, 0x8f, 0xca, 0xac, 0x9a,
	0xfd, 0xbd, 0xec, 0xc1, 0xc6, 0xda, 0x90, 0x4c, 0x26, 0x23, 0xcb, 0x9f, 0x63, 0xb7, 0xbd, 0x0b,
	0xae, 0xe0, 0x37, 0xba, 0x3d, 0x97, 0x11, 0xf1, 0xd7, 0xec, 0xbc, 0x55, 0x7d, 0x4f, 0x77, 0xcd,
	0xae, 0x9f, 0xff, 0xf9, 0x1b, 0x54, 0xd5, 0x28, 0x90, 0x24, 0x4b, 0x4c, 0xbc, 0xf8, 0x8f, 0x89,
	0x34, 0x35, 0x36, 0x71, 0xc1, 0x0a, 0xe5, 0xee, 0x74, 0xaf, 0x34, 0x90, 0x1b, 0x85, 0x3c, 0x62,
	0xb4, 0x49, 0xe9, 0x0e, 0xbe, 0xd1, 0xad, 0xb9, 0x0c, 0x80, 0xbf, 0x61, 0x93, 0x9d, 0xd9, 0x80,
	0x75, 0x62, 0xfe, 0xef, 0xdd, 0xf0, 0x36, 0x52, 0xc8, 0x28, 0xe4, 0x25, 0x9b, 0xb5, 0xe4, 0xe1,
	0xa7, 0xb5, 0xb1, 0x20, 0x2e, 0xe9, 0xb9, 0x94, 0x42, 0x45, 0x67, 0x7c, 0xdb, 0x43, 0x50, 0x5c,
	0x05, 0x45, 0x42, 0x2d, 0x7f, 0x64, 0x23, 0xf3, 0x30, 0x3c, 0x49, 0xa4, 0xb2, 0x51, 0xa4, 0x16,
	0xac, 0xc0, 0xea, 0xfe, 0xfb, 0x0e, 0x28, 0xa8, 0xb9, 0x3c, 0x62, 0x4c, 0x0d, 0xd6, 0x1f, 0x60,
	0x0f, 0x7d, 0x4c, 0xe9, 0x89, 0x38, 0x74, 0xef, 0xd5, 0xd0, 0x03, 0xe5, 0x74, 0x2a, 0x4f, 0xc4,
	0xc7, 0x07, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff, 0xae, 0xf6, 0xa0, 0x8c, 0x62, 0x03, 0x00, 0x00,
}
