// Code generated by protoc-gen-go.
// source: niuniu_server.proto
// DO NOT EDIT!

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of common_srv_pokerPai from common_server_poker.proto

// 牛牛牌的类型
type NiuniuEnum_PokerType int32

const (
	NiuniuEnum_PokerType_NO_NIU NiuniuEnum_PokerType = 1
	NiuniuEnum_PokerType_NIU_1  NiuniuEnum_PokerType = 2
	NiuniuEnum_PokerType_NIU_2  NiuniuEnum_PokerType = 3
)

var NiuniuEnum_PokerType_name = map[int32]string{
	1: "NO_NIU",
	2: "NIU_1",
	3: "NIU_2",
}
var NiuniuEnum_PokerType_value = map[string]int32{
	"NO_NIU": 1,
	"NIU_1":  2,
	"NIU_2":  3,
}

func (x NiuniuEnum_PokerType) Enum() *NiuniuEnum_PokerType {
	p := new(NiuniuEnum_PokerType)
	*p = x
	return p
}
func (x NiuniuEnum_PokerType) String() string {
	return proto.EnumName(NiuniuEnum_PokerType_name, int32(x))
}
func (x *NiuniuEnum_PokerType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NiuniuEnum_PokerType_value, data, "NiuniuEnum_PokerType")
	if err != nil {
		return err
	}
	*x = NiuniuEnum_PokerType(value)
	return nil
}
func (NiuniuEnum_PokerType) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

// 用户游戏状态
type NiuniuEnumGameState int32

const (
	NiuniuEnumGameState_NO_READY   NiuniuEnumGameState = 1
	NiuniuEnumGameState_IS_READY   NiuniuEnumGameState = 2
	NiuniuEnumGameState_IS_GAMMING NiuniuEnumGameState = 3
)

var NiuniuEnumGameState_name = map[int32]string{
	1: "NO_READY",
	2: "IS_READY",
	3: "IS_GAMMING",
}
var NiuniuEnumGameState_value = map[string]int32{
	"NO_READY":   1,
	"IS_READY":   2,
	"IS_GAMMING": 3,
}

func (x NiuniuEnumGameState) Enum() *NiuniuEnumGameState {
	p := new(NiuniuEnumGameState)
	*p = x
	return p
}
func (x NiuniuEnumGameState) String() string {
	return proto.EnumName(NiuniuEnumGameState_name, int32(x))
}
func (x *NiuniuEnumGameState) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(NiuniuEnumGameState_value, data, "NiuniuEnumGameState")
	if err != nil {
		return err
	}
	*x = NiuniuEnumGameState(value)
	return nil
}
func (NiuniuEnumGameState) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{1} }

// 打出去的牌
type NiuniuSrvPoker struct {
	Pais             []*CommonSrvPokerPai  `protobuf:"bytes,2,rep,name=pais" json:"pais,omitempty"`
	Type             *NiuniuEnum_PokerType `protobuf:"varint,3,opt,name=type,enum=ddproto.NiuniuEnum_PokerType" json:"type,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *NiuniuSrvPoker) Reset()                    { *m = NiuniuSrvPoker{} }
func (m *NiuniuSrvPoker) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvPoker) ProtoMessage()               {}
func (*NiuniuSrvPoker) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

func (m *NiuniuSrvPoker) GetPais() []*CommonSrvPokerPai {
	if m != nil {
		return m.Pais
	}
	return nil
}

func (m *NiuniuSrvPoker) GetType() NiuniuEnum_PokerType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return NiuniuEnum_PokerType_NO_NIU
}

// 对局账单信息
type NiuniuSrvUserBill struct {
	Score            *int32 `protobuf:"varint,1,opt,name=score" json:"score,omitempty"`
	CountHasNiu      *int32 `protobuf:"varint,2,opt,name=count_has_niu" json:"count_has_niu,omitempty"`
	CountNoNiu       *int32 `protobuf:"varint,3,opt,name=count_no_niu" json:"count_no_niu,omitempty"`
	CountWin         *int32 `protobuf:"varint,4,opt,name=count_win" json:"count_win,omitempty"`
	CountLost        *int32 `protobuf:"varint,5,opt,name=count_lost" json:"count_lost,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *NiuniuSrvUserBill) Reset()                    { *m = NiuniuSrvUserBill{} }
func (m *NiuniuSrvUserBill) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvUserBill) ProtoMessage()               {}
func (*NiuniuSrvUserBill) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{1} }

func (m *NiuniuSrvUserBill) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func (m *NiuniuSrvUserBill) GetCountHasNiu() int32 {
	if m != nil && m.CountHasNiu != nil {
		return *m.CountHasNiu
	}
	return 0
}

func (m *NiuniuSrvUserBill) GetCountNoNiu() int32 {
	if m != nil && m.CountNoNiu != nil {
		return *m.CountNoNiu
	}
	return 0
}

func (m *NiuniuSrvUserBill) GetCountWin() int32 {
	if m != nil && m.CountWin != nil {
		return *m.CountWin
	}
	return 0
}

func (m *NiuniuSrvUserBill) GetCountLost() int32 {
	if m != nil && m.CountLost != nil {
		return *m.CountLost
	}
	return 0
}

// 用户属性
type NiuniuSrvUser struct {
	UserId           *uint32              `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	RoomId           *int32               `protobuf:"varint,3,opt,name=roomId" json:"roomId,omitempty"`
	DeskId           *int32               `protobuf:"varint,4,opt,name=deskId" json:"deskId,omitempty"`
	GameNumber       *int32               `protobuf:"varint,5,opt,name=gameNumber" json:"gameNumber,omitempty"`
	Bill             *NiuniuSrvUserBill   `protobuf:"bytes,6,opt,name=bill" json:"bill,omitempty"`
	Status           *NiuniuEnumGameState `protobuf:"varint,7,opt,name=status,enum=ddproto.NiuniuEnumGameState" json:"status,omitempty"`
	IsOnline         *bool                `protobuf:"varint,10,opt,name=isOnline" json:"isOnline,omitempty"`
	Index            *int32               `protobuf:"varint,12,opt,name=index" json:"index,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *NiuniuSrvUser) Reset()                    { *m = NiuniuSrvUser{} }
func (m *NiuniuSrvUser) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvUser) ProtoMessage()               {}
func (*NiuniuSrvUser) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{2} }

func (m *NiuniuSrvUser) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *NiuniuSrvUser) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *NiuniuSrvUser) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *NiuniuSrvUser) GetGameNumber() int32 {
	if m != nil && m.GameNumber != nil {
		return *m.GameNumber
	}
	return 0
}

func (m *NiuniuSrvUser) GetBill() *NiuniuSrvUserBill {
	if m != nil {
		return m.Bill
	}
	return nil
}

func (m *NiuniuSrvUser) GetStatus() NiuniuEnumGameState {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return NiuniuEnumGameState_NO_READY
}

func (m *NiuniuSrvUser) GetIsOnline() bool {
	if m != nil && m.IsOnline != nil {
		return *m.IsOnline
	}
	return false
}

func (m *NiuniuSrvUser) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

// desk 的信息
type NiuniuSrvDesk struct {
	DeskId           *int32               `protobuf:"varint,1,opt,name=deskId" json:"deskId,omitempty"`
	DeskNumber       *string              `protobuf:"bytes,2,opt,name=deskNumber" json:"deskNumber,omitempty"`
	GameNumber       *int32               `protobuf:"varint,3,opt,name=gameNumber" json:"gameNumber,omitempty"`
	RoomId           *int32               `protobuf:"varint,4,opt,name=roomId" json:"roomId,omitempty"`
	LastWiner        *uint32              `protobuf:"varint,5,opt,name=lastWiner" json:"lastWiner,omitempty"`
	Status           *NiuniuEnumGameState `protobuf:"varint,6,opt,name=status,enum=ddproto.NiuniuEnumGameState" json:"status,omitempty"`
	MinUser          *int32               `protobuf:"varint,7,opt,name=minUser" json:"minUser,omitempty"`
	CircleNo         *int32               `protobuf:"varint,8,opt,name=circleNo" json:"circleNo,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *NiuniuSrvDesk) Reset()                    { *m = NiuniuSrvDesk{} }
func (m *NiuniuSrvDesk) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvDesk) ProtoMessage()               {}
func (*NiuniuSrvDesk) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{3} }

func (m *NiuniuSrvDesk) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *NiuniuSrvDesk) GetDeskNumber() string {
	if m != nil && m.DeskNumber != nil {
		return *m.DeskNumber
	}
	return ""
}

func (m *NiuniuSrvDesk) GetGameNumber() int32 {
	if m != nil && m.GameNumber != nil {
		return *m.GameNumber
	}
	return 0
}

func (m *NiuniuSrvDesk) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *NiuniuSrvDesk) GetLastWiner() uint32 {
	if m != nil && m.LastWiner != nil {
		return *m.LastWiner
	}
	return 0
}

func (m *NiuniuSrvDesk) GetStatus() NiuniuEnumGameState {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return NiuniuEnumGameState_NO_READY
}

func (m *NiuniuSrvDesk) GetMinUser() int32 {
	if m != nil && m.MinUser != nil {
		return *m.MinUser
	}
	return 0
}

func (m *NiuniuSrvDesk) GetCircleNo() int32 {
	if m != nil && m.CircleNo != nil {
		return *m.CircleNo
	}
	return 0
}

// room 的信息
type NiuniuSrvRoom struct {
	RoomId           *int32  `protobuf:"varint,1,opt,name=roomId" json:"roomId,omitempty"`
	RoomType         *int32  `protobuf:"varint,2,opt,name=roomType" json:"roomType,omitempty"`
	RoomLevel        *int32  `protobuf:"varint,3,opt,name=roomLevel" json:"roomLevel,omitempty"`
	RoomTitle        *string `protobuf:"bytes,4,opt,name=roomTitle" json:"roomTitle,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NiuniuSrvRoom) Reset()                    { *m = NiuniuSrvRoom{} }
func (m *NiuniuSrvRoom) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvRoom) ProtoMessage()               {}
func (*NiuniuSrvRoom) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{4} }

func (m *NiuniuSrvRoom) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *NiuniuSrvRoom) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

func (m *NiuniuSrvRoom) GetRoomLevel() int32 {
	if m != nil && m.RoomLevel != nil {
		return *m.RoomLevel
	}
	return 0
}

func (m *NiuniuSrvRoom) GetRoomTitle() string {
	if m != nil && m.RoomTitle != nil {
		return *m.RoomTitle
	}
	return ""
}

func init() {
	proto.RegisterType((*NiuniuSrvPoker)(nil), "ddproto.niuniu_srv_poker")
	proto.RegisterType((*NiuniuSrvUserBill)(nil), "ddproto.niuniu_srv_user_bill")
	proto.RegisterType((*NiuniuSrvUser)(nil), "ddproto.niuniu_srv_user")
	proto.RegisterType((*NiuniuSrvDesk)(nil), "ddproto.niuniu_srv_desk")
	proto.RegisterType((*NiuniuSrvRoom)(nil), "ddproto.niuniu_srv_room")
	proto.RegisterEnum("ddproto.NiuniuEnum_PokerType", NiuniuEnum_PokerType_name, NiuniuEnum_PokerType_value)
	proto.RegisterEnum("ddproto.NiuniuEnumGameState", NiuniuEnumGameState_name, NiuniuEnumGameState_value)
}

var fileDescriptor28 = []byte{
	// 487 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0xdf, 0x6e, 0xd3, 0x30,
	0x14, 0xc6, 0x49, 0x9b, 0xa4, 0xed, 0x59, 0xbb, 0x05, 0xb3, 0x21, 0x83, 0xf8, 0x33, 0xf5, 0x6a,
	0x2a, 0xa8, 0x88, 0xde, 0x71, 0x39, 0x69, 0x68, 0xaa, 0xc4, 0xb2, 0x0a, 0x98, 0xd0, 0xae, 0xac,
	0x2c, 0xb1, 0xc0, 0x9a, 0x63, 0x57, 0x71, 0x52, 0xd8, 0xdb, 0xf1, 0x10, 0x3c, 0x10, 0xc7, 0x4e,
	0x52, 0xda, 0x6a, 0x48, 0x93, 0x2a, 0xd5, 0xdf, 0x97, 0xe3, 0x73, 0xbe, 0xdf, 0x91, 0xe1, 0x89,
	0x12, 0x15, 0xfe, 0x98, 0xe1, 0xc5, 0x8a, 0x17, 0xd3, 0x65, 0xa1, 0x4b, 0x4d, 0x7a, 0x59, 0xe6,
	0x0e, 0xcf, 0x9f, 0xa5, 0x3a, 0xcf, 0xb5, 0x6a, 0xbe, 0xb2, 0xa5, 0xbe, 0x6d, 0x6b, 0xc6, 0x12,
	0xa2, 0xf6, 0x6a, 0xb1, 0xaa, 0xbf, 0x90, 0x09, 0xf8, 0xcb, 0x44, 0x18, 0xda, 0x39, 0xee, 0x9e,
	0xec, 0xcd, 0x5e, 0x4c, 0x9b, 0x36, 0xd3, 0xb6, 0x4b, 0x5b, 0xb8, 0x48, 0x04, 0x79, 0x0b, 0x7e,
	0x79, 0xb7, 0xe4, 0xb4, 0x7b, 0xec, 0x9d, 0xec, 0xcf, 0x5e, 0xad, 0x6b, 0x9b, 0xa6, 0x5c, 0x55,
	0x39, 0x5b, 0xd8, 0xe2, 0xaf, 0x58, 0x35, 0xbe, 0x83, 0xc3, 0x8d, 0x69, 0x15, 0xe6, 0x61, 0x37,
	0x42, 0x4a, 0x32, 0x82, 0xc0, 0xa4, 0xba, 0xe0, 0xd4, 0xc3, 0x36, 0x01, 0x39, 0x82, 0x51, 0xaa,
	0x2b, 0x55, 0xb2, 0x1f, 0x89, 0x61, 0x58, 0x8d, 0x49, 0xac, 0x7d, 0x08, 0xc3, 0xda, 0x56, 0xda,
	0xb9, 0x5d, 0xe7, 0x3e, 0x86, 0x41, 0xed, 0xfe, 0x14, 0x8a, 0xfa, 0xce, 0x22, 0x00, 0xb5, 0x25,
	0xb5, 0x29, 0x69, 0x60, 0xbd, 0xf1, 0x1f, 0x0f, 0x0e, 0x76, 0x66, 0x93, 0x7d, 0x08, 0xed, 0xff,
	0x3c, 0x73, 0x73, 0x47, 0x56, 0x17, 0x5a, 0xe7, 0xa8, 0xeb, 0xd6, 0xa8, 0x33, 0x6e, 0x6e, 0x51,
	0xaf, 0xfb, 0x7e, 0x4f, 0x72, 0x1e, 0x57, 0xf9, 0x0d, 0x2f, 0xea, 0xbe, 0xe4, 0x0d, 0xf8, 0x16,
	0x81, 0x86, 0xa8, 0xf6, 0x66, 0x2f, 0x77, 0x17, 0xb0, 0xcd, 0xf9, 0x0e, 0x42, 0x53, 0x26, 0x65,
	0x65, 0x68, 0xcf, 0xed, 0xeb, 0xf5, 0xbd, 0xfb, 0xb2, 0x33, 0x98, 0xad, 0xe3, 0x24, 0x82, 0xbe,
	0x30, 0x97, 0x4a, 0x0a, 0xc5, 0x29, 0xe0, 0x95, 0xbe, 0x5d, 0x95, 0x50, 0x19, 0xff, 0x45, 0x87,
	0x0e, 0xeb, 0xf7, 0x36, 0x96, 0x8d, 0xbb, 0x11, 0xdb, 0x6b, 0x63, 0x5b, 0xdd, 0xc4, 0xb6, 0xbb,
	0x1c, 0xec, 0xa0, 0xac, 0x71, 0x1b, 0x7c, 0xbf, 0xdd, 0xac, 0x4c, 0x4c, 0xf9, 0x0d, 0x87, 0xd7,
	0xb4, 0xa3, 0x0d, 0x80, 0xf0, 0x61, 0x00, 0x07, 0xd0, 0xcb, 0x85, 0xba, 0xc2, 0x0d, 0x38, 0xe4,
	0xc0, 0x12, 0xa5, 0xa2, 0x48, 0x25, 0x8f, 0x35, 0xed, 0x3b, 0x84, 0xeb, 0x2d, 0x02, 0x9b, 0x60,
	0x23, 0x89, 0xd7, 0x5e, 0xb2, 0xda, 0xbe, 0xa1, 0xe6, 0x2d, 0x60, 0x36, 0xeb, 0x7c, 0xe2, 0x2b,
	0x2e, 0xff, 0x3d, 0x04, 0x57, 0x24, 0x4a, 0xc9, 0x1d, 0xc1, 0x60, 0xf2, 0x01, 0x8e, 0xee, 0x7d,
	0x88, 0x48, 0x1f, 0xc6, 0x97, 0x2c, 0x9e, 0x5f, 0x45, 0x1e, 0x19, 0x40, 0x80, 0x07, 0xf6, 0x3e,
	0xea, 0xb4, 0xc7, 0x59, 0xd4, 0x9d, 0x9c, 0xc1, 0xd3, 0xff, 0x20, 0x0d, 0xa1, 0x8f, 0x77, 0x3f,
	0x7f, 0x3c, 0x3d, 0xbb, 0xc6, 0xdb, 0xa8, 0xe6, 0x5f, 0x1a, 0xd5, 0xc1, 0xe0, 0x80, 0xea, 0xfc,
	0xf4, 0xe2, 0x62, 0x1e, 0x9f, 0x47, 0xdd, 0xc5, 0xa3, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0xab,
	0xcc, 0x97, 0x10, 0x9a, 0x03, 0x00, 0x00,
}
