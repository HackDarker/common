// Code generated by protoc-gen-go.
// source: niuniu_server.proto
// DO NOT EDIT!

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of common_srv_pokerPai from common_server_poker.proto

// Ignoring public import of niuniu_client_poker from niuniu_base.proto

// Ignoring public import of niuniu_user_bill from niuniu_base.proto

// Ignoring public import of niuniu_desk_option from niuniu_base.proto

// Ignoring public import of niuniu_enum_protoid from niuniu_base.proto

// Ignoring public import of niuniu_enum_PokerType from niuniu_base.proto

// Ignoring public import of niuniu_enum_desk_state from niuniu_base.proto

// Ignoring public import of niuniu_enum_banker_rule from niuniu_base.proto

// 打出去的牌
type NiuniuSrvPoker struct {
	Pais             []*CommonSrvPokerPai  `protobuf:"bytes,2,rep,name=pais" json:"pais,omitempty"`
	Type             *NiuniuEnum_PokerType `protobuf:"varint,3,opt,name=type,enum=ddproto.NiuniuEnum_PokerType" json:"type,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *NiuniuSrvPoker) Reset()                    { *m = NiuniuSrvPoker{} }
func (m *NiuniuSrvPoker) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvPoker) ProtoMessage()               {}
func (*NiuniuSrvPoker) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

func (m *NiuniuSrvPoker) GetPais() []*CommonSrvPokerPai {
	if m != nil {
		return m.Pais
	}
	return nil
}

func (m *NiuniuSrvPoker) GetType() NiuniuEnum_PokerType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return NiuniuEnum_PokerType_NO_NIU
}

// desk 的信息
type NiuniuSrvDesk struct {
	DeskId           *int32               `protobuf:"varint,1,opt,name=deskId" json:"deskId,omitempty"`
	DeskNumber       *string              `protobuf:"bytes,2,opt,name=deskNumber" json:"deskNumber,omitempty"`
	GameNumber       *int32               `protobuf:"varint,3,opt,name=gameNumber" json:"gameNumber,omitempty"`
	RoomId           *int32               `protobuf:"varint,4,opt,name=roomId" json:"roomId,omitempty"`
	Status           *NiuniuEnumDeskState `protobuf:"varint,5,opt,name=status,enum=ddproto.NiuniuEnumDeskState" json:"status,omitempty"`
	LastWiner        *uint32              `protobuf:"varint,6,opt,name=lastWiner" json:"lastWiner,omitempty"`
	CircleNo         *int32               `protobuf:"varint,8,opt,name=circleNo" json:"circleNo,omitempty"`
	Owner            *uint32              `protobuf:"varint,10,opt,name=owner" json:"owner,omitempty"`
	CurrBanker       *uint32              `protobuf:"varint,11,opt,name=currBanker" json:"currBanker,omitempty"`
	DeskOption       *NiuniuDeskOption    `protobuf:"bytes,12,opt,name=deskOption" json:"deskOption,omitempty"`
	IsStart          *bool                `protobuf:"varint,13,opt,name=isStart" json:"isStart,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *NiuniuSrvDesk) Reset()                    { *m = NiuniuSrvDesk{} }
func (m *NiuniuSrvDesk) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvDesk) ProtoMessage()               {}
func (*NiuniuSrvDesk) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{1} }

func (m *NiuniuSrvDesk) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *NiuniuSrvDesk) GetDeskNumber() string {
	if m != nil && m.DeskNumber != nil {
		return *m.DeskNumber
	}
	return ""
}

func (m *NiuniuSrvDesk) GetGameNumber() int32 {
	if m != nil && m.GameNumber != nil {
		return *m.GameNumber
	}
	return 0
}

func (m *NiuniuSrvDesk) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *NiuniuSrvDesk) GetStatus() NiuniuEnumDeskState {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return NiuniuEnumDeskState_NIU_DESK_STATUS_WAIT_ENTER
}

func (m *NiuniuSrvDesk) GetLastWiner() uint32 {
	if m != nil && m.LastWiner != nil {
		return *m.LastWiner
	}
	return 0
}

func (m *NiuniuSrvDesk) GetCircleNo() int32 {
	if m != nil && m.CircleNo != nil {
		return *m.CircleNo
	}
	return 0
}

func (m *NiuniuSrvDesk) GetOwner() uint32 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

func (m *NiuniuSrvDesk) GetCurrBanker() uint32 {
	if m != nil && m.CurrBanker != nil {
		return *m.CurrBanker
	}
	return 0
}

func (m *NiuniuSrvDesk) GetDeskOption() *NiuniuDeskOption {
	if m != nil {
		return m.DeskOption
	}
	return nil
}

func (m *NiuniuSrvDesk) GetIsStart() bool {
	if m != nil && m.IsStart != nil {
		return *m.IsStart
	}
	return false
}

// 用户属性
type NiuniuSrvUser struct {
	UserId           *uint32         `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Bill             *NiuniuUserBill `protobuf:"bytes,6,opt,name=bill" json:"bill,omitempty"`
	IsOnline         *bool           `protobuf:"varint,10,opt,name=isOnline" json:"isOnline,omitempty"`
	Index            *int32          `protobuf:"varint,12,opt,name=index" json:"index,omitempty"`
	Pokers           *NiuniuSrvPoker `protobuf:"bytes,13,opt,name=pokers" json:"pokers,omitempty"`
	BankerScore      *int32          `protobuf:"varint,14,opt,name=bankerScore" json:"bankerScore,omitempty"`
	DoubleScore      *int32          `protobuf:"varint,15,opt,name=doubleScore" json:"doubleScore,omitempty"`
	IsReady          *bool           `protobuf:"varint,16,opt,name=isReady" json:"isReady,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *NiuniuSrvUser) Reset()                    { *m = NiuniuSrvUser{} }
func (m *NiuniuSrvUser) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvUser) ProtoMessage()               {}
func (*NiuniuSrvUser) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{2} }

func (m *NiuniuSrvUser) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *NiuniuSrvUser) GetBill() *NiuniuUserBill {
	if m != nil {
		return m.Bill
	}
	return nil
}

func (m *NiuniuSrvUser) GetIsOnline() bool {
	if m != nil && m.IsOnline != nil {
		return *m.IsOnline
	}
	return false
}

func (m *NiuniuSrvUser) GetIndex() int32 {
	if m != nil && m.Index != nil {
		return *m.Index
	}
	return 0
}

func (m *NiuniuSrvUser) GetPokers() *NiuniuSrvPoker {
	if m != nil {
		return m.Pokers
	}
	return nil
}

func (m *NiuniuSrvUser) GetBankerScore() int32 {
	if m != nil && m.BankerScore != nil {
		return *m.BankerScore
	}
	return 0
}

func (m *NiuniuSrvUser) GetDoubleScore() int32 {
	if m != nil && m.DoubleScore != nil {
		return *m.DoubleScore
	}
	return 0
}

func (m *NiuniuSrvUser) GetIsReady() bool {
	if m != nil && m.IsReady != nil {
		return *m.IsReady
	}
	return false
}

// room 的信息
type NiuniuSrvRoom struct {
	RoomId           *int32  `protobuf:"varint,1,opt,name=roomId" json:"roomId,omitempty"`
	RoomType         *int32  `protobuf:"varint,2,opt,name=roomType" json:"roomType,omitempty"`
	RoomLevel        *int32  `protobuf:"varint,3,opt,name=roomLevel" json:"roomLevel,omitempty"`
	RoomTitle        *string `protobuf:"bytes,4,opt,name=roomTitle" json:"roomTitle,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *NiuniuSrvRoom) Reset()                    { *m = NiuniuSrvRoom{} }
func (m *NiuniuSrvRoom) String() string            { return proto.CompactTextString(m) }
func (*NiuniuSrvRoom) ProtoMessage()               {}
func (*NiuniuSrvRoom) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{3} }

func (m *NiuniuSrvRoom) GetRoomId() int32 {
	if m != nil && m.RoomId != nil {
		return *m.RoomId
	}
	return 0
}

func (m *NiuniuSrvRoom) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

func (m *NiuniuSrvRoom) GetRoomLevel() int32 {
	if m != nil && m.RoomLevel != nil {
		return *m.RoomLevel
	}
	return 0
}

func (m *NiuniuSrvRoom) GetRoomTitle() string {
	if m != nil && m.RoomTitle != nil {
		return *m.RoomTitle
	}
	return ""
}

func init() {
	proto.RegisterType((*NiuniuSrvPoker)(nil), "ddproto.niuniu_srv_poker")
	proto.RegisterType((*NiuniuSrvDesk)(nil), "ddproto.niuniu_srv_desk")
	proto.RegisterType((*NiuniuSrvUser)(nil), "ddproto.niuniu_srv_user")
	proto.RegisterType((*NiuniuSrvRoom)(nil), "ddproto.niuniu_srv_room")
}

var fileDescriptor28 = []byte{
	// 446 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x52, 0xed, 0x6e, 0xd3, 0x30,
	0x14, 0xa5, 0x6b, 0xd3, 0xb5, 0x37, 0xf4, 0x63, 0xde, 0x1f, 0x6f, 0x20, 0x98, 0xfa, 0x87, 0x82,
	0x50, 0x27, 0xf5, 0x11, 0xf8, 0x87, 0x84, 0xb6, 0x8a, 0x4d, 0x42, 0xfc, 0x8a, 0x9c, 0xe4, 0x0a,
	0x59, 0x73, 0xe2, 0xc8, 0x76, 0x0a, 0x7b, 0x0f, 0x5e, 0x8c, 0x37, 0xc2, 0xf7, 0x26, 0x85, 0x6d,
	0x9a, 0x54, 0x29, 0xf5, 0xc9, 0xb9, 0xe7, 0x9e, 0x93, 0x63, 0x38, 0xad, 0x75, 0x1b, 0x7f, 0x99,
	0x47, 0xb7, 0x47, 0xb7, 0x69, 0x9c, 0x0d, 0x56, 0x1c, 0x97, 0x25, 0xff, 0x39, 0x3f, 0x2b, 0x6c,
	0x55, 0xd9, 0xba, 0x7f, 0x9b, 0x35, 0xf6, 0xee, 0xc0, 0x39, 0x3f, 0xe9, 0x07, 0x73, 0xe5, 0xb1,
	0x83, 0x56, 0x06, 0x96, 0x07, 0x35, 0xb7, 0xef, 0xc8, 0xe2, 0x03, 0x8c, 0x1a, 0xa5, 0xbd, 0x3c,
	0xba, 0x18, 0xae, 0xd3, 0xed, 0xeb, 0x4d, 0xaf, 0xbc, 0x39, 0x08, 0x1f, 0x88, 0x3b, 0xa5, 0xc5,
	0x47, 0x18, 0x85, 0xfb, 0x06, 0xe5, 0xf0, 0x62, 0xb0, 0x9e, 0x6f, 0xdf, 0xfc, 0xe3, 0xf6, 0xa2,
	0x58, 0xb7, 0x55, 0xb6, 0x23, 0xf2, 0x6d, 0x64, 0xad, 0x7e, 0x1f, 0xc1, 0xe2, 0xc1, 0xba, 0x12,
	0xfd, 0x9d, 0x98, 0xc3, 0x98, 0x9e, 0x9f, 0x4b, 0x39, 0x88, 0x1a, 0x89, 0x10, 0x00, 0x74, 0xbe,
	0x6a, 0xab, 0x1c, 0x5d, 0xf4, 0x30, 0x58, 0x4f, 0x09, 0xfb, 0xa1, 0x2a, 0xec, 0xb1, 0x21, 0xf3,
	0xe2, 0x9c, 0xb3, 0xb6, 0x8a, 0x73, 0x23, 0x3e, 0x5f, 0xc2, 0xd8, 0x07, 0x15, 0x5a, 0x2f, 0x13,
	0xf6, 0xf2, 0xf6, 0x59, 0x2f, 0x24, 0x9d, 0x11, 0x0f, 0xc5, 0x09, 0x4c, 0x8d, 0xf2, 0xe1, 0x9b,
	0xae, 0xa3, 0xe6, 0x38, 0xce, 0xcc, 0xc4, 0x12, 0x26, 0x85, 0x76, 0x85, 0xc1, 0x2b, 0x2b, 0x27,
	0xac, 0x3a, 0x83, 0xc4, 0xfe, 0x24, 0x02, 0x30, 0x21, 0x1a, 0x29, 0x5a, 0xe7, 0x3e, 0xa9, 0x3a,
	0x46, 0x92, 0x29, 0x63, 0x97, 0x9d, 0xe1, 0xeb, 0x26, 0x68, 0x5b, 0xcb, 0x97, 0x11, 0x4b, 0xb7,
	0xaf, 0x9e, 0x2e, 0xe7, 0xbd, 0x96, 0x29, 0x62, 0x01, 0xc7, 0xda, 0xdf, 0x04, 0xe5, 0x82, 0x9c,
	0x45, 0xf6, 0x64, 0xf5, 0x67, 0xf0, 0xe8, 0xb3, 0xb4, 0xb1, 0x3a, 0x8a, 0x47, 0xcf, 0xfe, 0xb3,
	0xcc, 0xc4, 0x3b, 0x18, 0xe5, 0xda, 0x18, 0x36, 0x9a, 0x6e, 0xcf, 0x9e, 0xea, 0x13, 0x37, 0x23,
	0x02, 0x65, 0xd0, 0xfe, 0xba, 0x36, 0x31, 0x16, 0x9b, 0x9e, 0x50, 0x06, 0x5d, 0x97, 0xf8, 0x8b,
	0xbd, 0x25, 0xe2, 0x3d, 0x8c, 0xb9, 0x3e, 0xcf, 0xdb, 0x9f, 0xd1, 0xfa, 0x7f, 0x13, 0x4e, 0x21,
	0xcd, 0x39, 0xea, 0x4d, 0x61, 0x1d, 0xca, 0x39, 0xcf, 0x47, 0xb0, 0xb4, 0x6d, 0x6e, 0xb0, 0x03,
	0x17, 0x0c, 0x72, 0xa6, 0xaf, 0xa8, 0xca, 0x7b, 0xb9, 0xe4, 0x4c, 0xdf, 0x1f, 0x45, 0xa2, 0xa6,
	0x1e, 0x34, 0xd6, 0x35, 0x1d, 0x9d, 0xd2, 0x99, 0x6e, 0x06, 0xf7, 0x9c, 0x50, 0x25, 0x84, 0x7c,
	0xc1, 0x3d, 0x9a, 0xbe, 0xe6, 0x1e, 0xba, 0xd5, 0xc1, 0x20, 0x37, 0x3d, 0xdd, 0xbd, 0xd8, 0x0d,
	0xfe, 0x06, 0x00, 0x00, 0xff, 0xff, 0xcd, 0xda, 0xe6, 0xb6, 0x04, 0x03, 0x00, 0x00,
}
