// Code generated by protoc-gen-go.
// source: common_client.proto
// DO NOT EDIT!

/*
Package ddproto is a generated protocol buffer package.

It is generated from these files:
	common_client.proto
	common_client_award.proto
	common_client_pay.proto
	common_enum.proto
	common_server.proto
	common_server_award.proto
	common_server_config.proto
	common_server_model.proto
	common_server_msg.proto
	common_server_poker.proto
	common_server_task.proto
	ddz_base.proto
	ddz_desk.proto
	ddz_hall.proto
	ddz_play.proto
	ddz_server.proto
	erddz_base.proto
	erddz_desk.proto
	erddz_hall.proto
	erddz_play.proto
	hall.proto
	hall_data.proto
	hot_update.proto
	mj_baishan_base.proto
	mj_baishan_desk.proto
	mj_baishan_hall.proto
	mj_baishan_play.proto
	mj_common.proto
	niuniu_server.proto
	pdk_base.proto
	pdk_desk.proto
	pdk_hall.proto
	pdk_play.proto
	pdk_server.proto
	pez_base.proto
	pez_desk.proto
	pez_play.proto
	pez_server.proto
	zjh_base.proto
	zjh_desk.proto
	zjh_hall.proto
	zjh_play.proto
	zjh_serever.proto

It has these top-level messages:
	ProtoHeader
	Heartbeat
	ServerInfo
	QuickConn
	AckQuickConn
	WeixinInfo
	CommonReqReg
	CommonReqRegViaInput
	CommonAckReg
	CommonReqGameLogin
	CommonReqGameLoginViaInput
	CommonAckGameLogin
	CommonReqQrLogin
	CommonAckQrLogin
	CommonReqQrWxInfo
	CommonAckQrWxInfo
	CommonAckReconnect
	CommonReqReconnect
	CommonReqGameState
	CommonAckGameState
	CommonReqLogout
	CommonAckLogout
	CommonReqFeedback
	ClientBasePoker
	CommonReqMessage
	CommonBcMessage
	CommonReqNotice
	CommonAckNotice
	CommonReqEnterAgentMode
	CommonAckEnterAgentMode
	CommonReqQuitAgentMode
	CommonAckQuitAgentMode
	CommonReqLeaveDesk
	CommonAckLeaveDesk
	CommonBcKickout
	CommonReqAllowance
	CommonAckAllowance
	CommonReqApplyDissolve
	CommonBcApplyDissolve
	CommonReqApplyDissolveBack
	CommonAckApplyDissolveBack
	CommonAckTimeout
	CommonBcUserBreak
	CommonReqClickStatistic
	CommonReqOffline
	AwardReqOnline
	WardAckOnline
	AwardReqOnlineInfo
	AwardAckOnlineInfo
	AwardReqGetNewUser
	AwardAckGetNewUser
	PayBaseProduct
	PayBasePaymodel
	PayBaseDetails
	WxpayReqUnifiedorder
	WxpayAckUnifiedorder
	WxpayReqSyncChecker
	WxpayAckSyncChecker
	ApplepayReqRechargecb
	ApplepayAcksRechargecb
	GameSession
	CommonSrvGameUser
	CommonSrvGameDesk
	Taward
	AwardMOnline
	TConfigSys
	TConfigDrawLottery
	User
	TNotice
	TGameCounts
	TUserTask
	Push
	CommonSrvMsgGameCount
	CommonSrvPokerPai
	TTask
	DdzBaseRoomTypeInfo
	DdzBasePlayerInfo
	DdzBasePlayerRateInfo
	DdzBaseCommonRateInfo
	DdzBaseTimerInfo
	DdzBaseDeskInfo
	DdzReqDissolveDesk
	DdzAckDissolveDesk
	DdzReqReady
	DdzAckReady
	DdzBaseWinCoinInfo
	DdzBaCurrentResult
	DdzBaseEndLotteryInfo
	DdzBcEndLottery
	DdzReqCreateDesk
	DdzAckCreateDesk
	DdzReqGameRecord
	DdzBaseUserRecord
	DdzBaseGameRecord
	DdzAckGameRecord
	DdzReqEnterDesk
	DdzAckEnterDesk
	DdzBcOpening
	DdzBcDealCards
	DdzReqShowHandPokers
	DdzAckShowHandPokers
	DdzReqJiaoDiZhu
	DdzAckJiaoDiZhu
	DdzReqRobDiZhu
	DdzAckRobDiZhu
	DdzReqDouble
	DdzAckDouble
	DdzBcStartPlay
	DdzReqMenuZhua
	DdzAckMenuZhua
	DdzReqSeeCards
	DdzAckSeeCards
	DdzReqPull
	DdzAckPull
	DdzReqOutCards
	DdzAckOutCards
	DdzReqActGuo
	DdzAckGuoAck
	DdzBcOverTurn
	DdzBcGameInfo
	DdzSrvOutPokerPais
	DdzSrvDeskTongJi
	DdzSrvDesk
	DdzSrvGameData
	DdzSrvBillBean
	DdzSrvBill
	DdzSrvUserStatisticsRound
	DdzSrvUserStatistics
	DdzSrvUser
	DdzSrvRoom
	DdzSrvBak
	ErddzBaseRoomTypeInfo
	ErddzBasePlayerInfo
	ErddzBasePlayerRateInfo
	ErddzBaseCommonRateInfo
	ErddzBaseTimerInfo
	ErddzBaseDeskInfo
	ErddzReqDissolveDesk
	ErddzAckDissolveDesk
	ErddzReqReady
	ErddzAckReady
	ErddzBaseWinCoinInfo
	ErddzBcCurrentResult
	ErddzBaseEndLotteryInfo
	ErddzBcEndLottery
	ErddzReqCreateDesk
	ErddzAckCreateDesk
	ErddzReqEnterDesk
	ErddzAckEnterDesk
	ErddzBcOpening
	ErddzBcDealCards
	ErddzReqJiaoDiZhu
	ErddzAckJiaoDiZhu
	ErddzReqRobDiZhu
	ErddzAckRobDiZhu
	ErddzReqRangcards
	ErddzAckRangcards
	ErddzReqDouble
	ErddzAckDouble
	ErddzBcStartPlay
	ErddzReqOutCards
	ErddzAckOutCards
	ErddzReqActGuo
	ErddzAckActGuo
	ErddzBcOverTurn
	ErddzBcGameInfo
	HallReqEvent
	HallAckEvent
	HallLotteryItem
	HallSignLotteryInfo
	HallDrawLotteryInfo
	HallReqMailList
	HallAckMailList
	HallReqTask
	HallAckTask
	HallReqCheckTask
	HallAckCheckTask
	HallReqTaskSum
	HallAckTaskSum
	HallReqCheckBonus
	HallAckCheckBonus
	HallReqBagItems
	HallAckBagItems
	HallReqUserData
	HallAckUserData
	HallReqUpdateRealData
	HallAckUpdateRealData
	HallReqGoodsList
	HallAckGoodsList
	HallReqGoodsBuy
	HallAckGoodsBuy
	HallGoodsItemMsg
	HallReqRank
	HallAckRank
	HallReqDrawLottery
	HallAckDrawLottery
	HallReqDsLotteryInfo
	HallAckDsLotteryInfo
	HallReqFriendsList
	HallAckFriendsList
	HallReqRecommendUserList
	HallAckRecommendUserList
	HallReqFriendsSearch
	HallAckFriendsSearch
	HallReqAddFriend
	HallAckAddFriend
	HallReqDelFriend
	HallAckDelFriend
	HallFriendState
	HallUserInfo
	HallAckStrongboxInfo
	HallReqStrongboxInfo
	HallReqStrongboxAccess
	HallAckStrongboxAccess
	HallItemEvent
	HallMailItem
	HallBagItem
	HallItemTask
	HallUserData
	HallRankItem
	CoinZone
	DiamondZone
	ExchangeZone
	BuyZone
	GoodsItem
	HallStrongboxInfo
	VersionInfo
	AssetInfo
	HotupdateReqVersionInfo
	HotupdateAckVersionInfo
	HotupdateReqAssetsInfo
	HotupdateAckAssetsInfo
	HotupdateReqGameAssetsInfo
	HotupdateAckGameAssetsInfo
	PlayOptions
	ChangShaPlayOptions
	RoomTypeInfo
	ComposeCard
	PlayerCard
	PlayerInfo
	DeskGameInfo
	MjBasePlayOptions
	MjBaseCardInfo
	MjBaseRoomTypeInfo
	MjBaseComposeCard
	MjBasePlayerCard
	MjBasePlayerInfo
	MjBaseDeskGameInfo
	MjReqDissolveDesk
	MjAckDissolveDesk
	Game_Notice
	Game_AckNotice
	Game_GameRecord
	BeanUserRecord
	BeanGameRecord
	Game_AckGameRecord
	Game_Feedback
	Game_CreateRoom
	Game_AckCreateRoom
	Game_EnterRoom
	Game_AckEnterRoom
	UserCoinBean
	Game_Opening
	Game_DealCards
	Game_ExchangeCards
	Game_DealHaiDiCards
	Game_ReqDealHaiDiCards
	Game_AckDealHaiDiCards
	Game_AckExchangeCards
	Game_ExchangeCardsEnd
	Game_DingQue
	DingQueEndBean
	Game_DingQueEnd
	Game_BroadcastBeginDingQue
	Game_BroadcastBeginExchange
	Game_GetInCard
	Game_SendOutCard
	Game_AckSendOutCard
	Game_ActPeng
	Game_AckActPeng
	Game_ActChi
	Game_AckActChi
	Game_ActGang
	Game_AckActGang
	Game_ChangShaActGang
	Game_ChangShaAckActGang
	Game_ActHu
	Game_AckActHu
	Game_ActChangShaQiShouHu
	Game_AckActChangShaQiShouHu
	Game_AckActHuChangSha
	Game_ActGuo
	Game_AckActGuo
	Game_ChangShaOverTurnAfterGang
	Game_ChangshQiShouHuOverTurn
	Game_OverTurn
	ChiOverTurn
	JiaoInfo
	JiaoPaiInfo
	Game_SendGameInfo
	GameReqBuxiazi
	GameAckBuxiazi
	CardInfo
	NiuniuSrvPoker
	NiuniuSrvUserBill
	NiuniuSrvUser
	NiuniuSrvDesk
	NiuniuSrvRoom
	PdkBaseRoomTypeInfo
	PdkBasePlayerInfo
	PdkBasePlayerRateInfo
	PdkBaseCommonRateInfo
	PdkBaseTimerInfo
	PdkBaseDeskInfo
	PdkReqDissolveDesk
	PdkAckDissolveDesk
	PdkReqReady
	PdkAckReady
	PdkBaseWinCoinInfo
	PdkBaCurrentResult
	PdkBaseEndLotteryInfo
	PdkBcEndLottery
	PdkReqCreateDesk
	PdkAckCreateDesk
	PdkReqGameRecord
	PdkBaseUserRecord
	PdkBaseGameRecord
	PdkAckGameRecord
	PdkReqEnterDesk
	PdkAckEnterDesk
	PdkBcOpening
	PdkBcDealCards
	PdkReqShowHandPokers
	PdkAckShowHandPokers
	PdkReqJiaoDiZhu
	PdkAckJiaoDiZhu
	PdkReqRobDiZhu
	PdkAckRobDiZhu
	PdkReqDouble
	PdkAckDouble
	PdkBcStartPlay
	PdkReqMenuZhua
	PdkAckMenuZhua
	PdkReqSeeCards
	PdkAckSeeCards
	PdkReqPull
	PdkAckPull
	PdkReqOutCards
	PdkAckOutCards
	PdkReqActGuo
	PdkAckGuoAck
	PdkBcOverTurn
	PdkBcGameInfo
	PdkSrvOutPokerPais
	PdkSrvDeskTongJi
	PdkSrvDesk
	PdkSrvGameData
	PdkSrvBillBean
	PdkSrvBill
	PdkSrvUserStatisticsRound
	PdkSrvUserStatistics
	PdkSrvUser
	PdkSrvRoom
	PdkSrvBak
	PezBase_PaiInfo
	PezBase_PlayOptions
	PezBase_PlayConf
	PezBase_RoomTypeInfo
	PezBase_PaiValue
	PezBase_PlayerCard
	PezBase_PlayerInfo
	PezBase_DeskGameInfo
	PezGame_DissolveDesk
	PezGame_AckDissolveDesk
	PezGame_ReqDissolveDesk
	PezGame_AckReqDissolveDesk
	PezGame_Ready
	PezGame_AckReady
	BetInfo
	Pez_WinScoreInfo
	Pez_EndLotteryInfo
	PezGame_SendCurrentResult
	PezGame_SendEndLottery
	PezUserCoinBean
	PezGame_Opening
	PezGame_DealCards
	PezGame_Bet
	PezGame_AckBet
	PezGame_OpenCard
	PezGame_AckOpenCard
	PezGame_SendGameInfo
	ZjhReqGetRoomList
	ZjhBaseRoomInfo
	ZjhAckRoomList
	ZjhReqEnterDesk
	ZjhBaseUserInfo
	ZjhDeskStateAck
	ZjhBcGameInfo
	ZjhBaseDeskInfo
	ZjhBcNewPlayerEnter
	ZjhReqLeave
	ZjhBcLeave
	ZjhBasePlayerInfo
	ZjhBcOpening
	ZjhReqReady
	ZjhBcReady
	ZjhBcOverTurn
	ZjhReqCheckCards
	ZjhBcCheckCards
	ZjhReqFold
	ZjhBcFold
	ZjhReqCall
	ZjhBcCall
	ZjhReqBloodFight
	ZjhBcBloodFight
	ZjhBcBloodEnd
	ZjhReqRaiseFight
	ZjhBcRaiseAck
	ZjhReqCompare
	ZjhBcCompare
	ZjhBcGameEnd
	ZjhBcDeskState
	ZjhReqDaShang
	ZjhBcDaShang
	ZjhSrvPoker
	ZjhSrvBill
	ZjhSrv_GameData
	ZjhSrvUser
	ZjhSrvDesk
	ZjhSrvRoom
*/
package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Ignoring public import of common_enum_game from common_enum.proto

// Ignoring public import of COMMON_ENUM_ROOMTYPE from common_enum.proto

// Ignoring public import of COMMON_ENUM_GAMESTATUS from common_enum.proto

// Ignoring public import of COMMON_ENUM_RELEASETAG from common_enum.proto

// Ignoring public import of COMMON_ENUM_KICKOUT from common_enum.proto

// Ignoring public import of COMMON_ENUM_APPLYDISSOLVE from common_enum.proto

// Ignoring public import of BTN_TYPE from common_enum.proto

// Ignoring public import of COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM from common_enum.proto

// 注册类型
type CommonEnumReg int32

const (
	CommonEnumReg_RET_TYPE_TOURIST CommonEnumReg = 1
	CommonEnumReg_RET_TYPE_WEIXIN  CommonEnumReg = 2
)

var CommonEnumReg_name = map[int32]string{
	1: "RET_TYPE_TOURIST",
	2: "RET_TYPE_WEIXIN",
}
var CommonEnumReg_value = map[string]int32{
	"RET_TYPE_TOURIST": 1,
	"RET_TYPE_WEIXIN":  2,
}

func (x CommonEnumReg) Enum() *CommonEnumReg {
	p := new(CommonEnumReg)
	*p = x
	return p
}
func (x CommonEnumReg) String() string {
	return proto.EnumName(CommonEnumReg_name, int32(x))
}
func (x *CommonEnumReg) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommonEnumReg_value, data, "CommonEnumReg")
	if err != nil {
		return err
	}
	*x = CommonEnumReg(value)
	return nil
}
func (CommonEnumReg) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

// 客户端系统类型
type CommonEnumOsType int32

const (
	CommonEnumOsType_OS_IOS     CommonEnumOsType = 1
	CommonEnumOsType_OS_ANDROID CommonEnumOsType = 2
	CommonEnumOsType_OS_WEB     CommonEnumOsType = 3
)

var CommonEnumOsType_name = map[int32]string{
	1: "OS_IOS",
	2: "OS_ANDROID",
	3: "OS_WEB",
}
var CommonEnumOsType_value = map[string]int32{
	"OS_IOS":     1,
	"OS_ANDROID": 2,
	"OS_WEB":     3,
}

func (x CommonEnumOsType) Enum() *CommonEnumOsType {
	p := new(CommonEnumOsType)
	*p = x
	return p
}
func (x CommonEnumOsType) String() string {
	return proto.EnumName(CommonEnumOsType_name, int32(x))
}
func (x *CommonEnumOsType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommonEnumOsType_value, data, "CommonEnumOsType")
	if err != nil {
		return err
	}
	*x = CommonEnumOsType(value)
	return nil
}
func (CommonEnumOsType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

// -------------------------------------------扑克牌相关的------------------------------------
// 房间类型枚举
// 扑克花色
type CommonEnumPokerColor int32

const (
	CommonEnumPokerColor_HONGTAO       CommonEnumPokerColor = 1
	CommonEnumPokerColor_FANGKUAI      CommonEnumPokerColor = 2
	CommonEnumPokerColor_HEITAO        CommonEnumPokerColor = 3
	CommonEnumPokerColor_MEIHUA        CommonEnumPokerColor = 4
	CommonEnumPokerColor_REDJOKER      CommonEnumPokerColor = 5
	CommonEnumPokerColor_BLACKBIGJOKER CommonEnumPokerColor = 6
)

var CommonEnumPokerColor_name = map[int32]string{
	1: "HONGTAO",
	2: "FANGKUAI",
	3: "HEITAO",
	4: "MEIHUA",
	5: "REDJOKER",
	6: "BLACKBIGJOKER",
}
var CommonEnumPokerColor_value = map[string]int32{
	"HONGTAO":       1,
	"FANGKUAI":      2,
	"HEITAO":        3,
	"MEIHUA":        4,
	"REDJOKER":      5,
	"BLACKBIGJOKER": 6,
}

func (x CommonEnumPokerColor) Enum() *CommonEnumPokerColor {
	p := new(CommonEnumPokerColor)
	*p = x
	return p
}
func (x CommonEnumPokerColor) String() string {
	return proto.EnumName(CommonEnumPokerColor_name, int32(x))
}
func (x *CommonEnumPokerColor) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommonEnumPokerColor_value, data, "CommonEnumPokerColor")
	if err != nil {
		return err
	}
	*x = CommonEnumPokerColor(value)
	return nil
}
func (CommonEnumPokerColor) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// ProtoHeader 需要在每个 Message 中作为第一个字段
type ProtoHeader struct {
	Version          *string `protobuf:"bytes,1,opt,name=version" json:"version,omitempty"`
	UserId           *uint32 `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Code             *int32  `protobuf:"varint,3,opt,name=code" json:"code,omitempty"`
	Error            *string `protobuf:"bytes,4,opt,name=error" json:"error,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ProtoHeader) Reset()                    { *m = ProtoHeader{} }
func (m *ProtoHeader) String() string            { return proto.CompactTextString(m) }
func (*ProtoHeader) ProtoMessage()               {}
func (*ProtoHeader) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProtoHeader) GetVersion() string {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return ""
}

func (m *ProtoHeader) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *ProtoHeader) GetCode() int32 {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return 0
}

func (m *ProtoHeader) GetError() string {
	if m != nil && m.Error != nil {
		return *m.Error
	}
	return ""
}

// 这里都是通用过的一些协议
type Heartbeat struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Heartbeat) Reset()                    { *m = Heartbeat{} }
func (m *Heartbeat) String() string            { return proto.CompactTextString(m) }
func (*Heartbeat) ProtoMessage()               {}
func (*Heartbeat) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Heartbeat) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 服务器信息
type ServerInfo struct {
	Ip               *string `protobuf:"bytes,1,opt,name=ip" json:"ip,omitempty"`
	Port             *int32  `protobuf:"varint,2,opt,name=port" json:"port,omitempty"`
	ReleaseTag       *int32  `protobuf:"varint,3,opt,name=releaseTag" json:"releaseTag,omitempty"`
	CurrVersion      *int32  `protobuf:"varint,4,opt,name=currVersion" json:"currVersion,omitempty"`
	IsUpdate         *int32  `protobuf:"varint,5,opt,name=isUpdate" json:"isUpdate,omitempty"`
	DownloadUrl      *string `protobuf:"bytes,6,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	VersionInfo      *string `protobuf:"bytes,7,opt,name=versionInfo" json:"versionInfo,omitempty"`
	IsMaintain       *int32  `protobuf:"varint,8,opt,name=isMaintain" json:"isMaintain,omitempty"`
	MaintainMsg      *string `protobuf:"bytes,9,opt,name=maintainMsg" json:"maintainMsg,omitempty"`
	Status           *int32  `protobuf:"varint,10,opt,name=status" json:"status,omitempty"`
	GameId           *int32  `protobuf:"varint,11,opt,name=gameId" json:"gameId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ServerInfo) Reset()                    { *m = ServerInfo{} }
func (m *ServerInfo) String() string            { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()               {}
func (*ServerInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ServerInfo) GetIp() string {
	if m != nil && m.Ip != nil {
		return *m.Ip
	}
	return ""
}

func (m *ServerInfo) GetPort() int32 {
	if m != nil && m.Port != nil {
		return *m.Port
	}
	return 0
}

func (m *ServerInfo) GetReleaseTag() int32 {
	if m != nil && m.ReleaseTag != nil {
		return *m.ReleaseTag
	}
	return 0
}

func (m *ServerInfo) GetCurrVersion() int32 {
	if m != nil && m.CurrVersion != nil {
		return *m.CurrVersion
	}
	return 0
}

func (m *ServerInfo) GetIsUpdate() int32 {
	if m != nil && m.IsUpdate != nil {
		return *m.IsUpdate
	}
	return 0
}

func (m *ServerInfo) GetDownloadUrl() string {
	if m != nil && m.DownloadUrl != nil {
		return *m.DownloadUrl
	}
	return ""
}

func (m *ServerInfo) GetVersionInfo() string {
	if m != nil && m.VersionInfo != nil {
		return *m.VersionInfo
	}
	return ""
}

func (m *ServerInfo) GetIsMaintain() int32 {
	if m != nil && m.IsMaintain != nil {
		return *m.IsMaintain
	}
	return 0
}

func (m *ServerInfo) GetMaintainMsg() string {
	if m != nil && m.MaintainMsg != nil {
		return *m.MaintainMsg
	}
	return ""
}

func (m *ServerInfo) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

func (m *ServerInfo) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

// 接入服务器
type QuickConn struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ChannelId        *string      `protobuf:"bytes,2,opt,name=channelId" json:"channelId,omitempty"`
	GameId           *int32       `protobuf:"varint,3,opt,name=gameId" json:"gameId,omitempty"`
	CurrVersion      *int32       `protobuf:"varint,4,opt,name=currVersion" json:"currVersion,omitempty"`
	LanguageId       *int32       `protobuf:"varint,5,opt,name=languageId" json:"languageId,omitempty"`
	UserId           *uint32      `protobuf:"varint,6,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *QuickConn) Reset()                    { *m = QuickConn{} }
func (m *QuickConn) String() string            { return proto.CompactTextString(m) }
func (*QuickConn) ProtoMessage()               {}
func (*QuickConn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *QuickConn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *QuickConn) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

func (m *QuickConn) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *QuickConn) GetCurrVersion() int32 {
	if m != nil && m.CurrVersion != nil {
		return *m.CurrVersion
	}
	return 0
}

func (m *QuickConn) GetLanguageId() int32 {
	if m != nil && m.LanguageId != nil {
		return *m.LanguageId
	}
	return 0
}

func (m *QuickConn) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type AckQuickConn struct {
	Header            *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GameServer        []*ServerInfo `protobuf:"bytes,2,rep,name=gameServer" json:"gameServer,omitempty"`
	ServerListVersion *int32        `protobuf:"varint,3,opt,name=serverListVersion" json:"serverListVersion,omitempty"`
	XXX_unrecognized  []byte        `json:"-"`
}

func (m *AckQuickConn) Reset()                    { *m = AckQuickConn{} }
func (m *AckQuickConn) String() string            { return proto.CompactTextString(m) }
func (*AckQuickConn) ProtoMessage()               {}
func (*AckQuickConn) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *AckQuickConn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *AckQuickConn) GetGameServer() []*ServerInfo {
	if m != nil {
		return m.GameServer
	}
	return nil
}

func (m *AckQuickConn) GetServerListVersion() int32 {
	if m != nil && m.ServerListVersion != nil {
		return *m.ServerListVersion
	}
	return 0
}

// 微信信息
type WeixinInfo struct {
	OpenId           *string `protobuf:"bytes,1,opt,name=openId" json:"openId,omitempty"`
	NickName         *string `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
	HeadUrl          *string `protobuf:"bytes,3,opt,name=headUrl" json:"headUrl,omitempty"`
	Sex              *int32  `protobuf:"varint,4,opt,name=sex" json:"sex,omitempty"`
	City             *string `protobuf:"bytes,5,opt,name=city" json:"city,omitempty"`
	UnionId          *string `protobuf:"bytes,6,opt,name=unionId" json:"unionId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *WeixinInfo) Reset()                    { *m = WeixinInfo{} }
func (m *WeixinInfo) String() string            { return proto.CompactTextString(m) }
func (*WeixinInfo) ProtoMessage()               {}
func (*WeixinInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *WeixinInfo) GetOpenId() string {
	if m != nil && m.OpenId != nil {
		return *m.OpenId
	}
	return ""
}

func (m *WeixinInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *WeixinInfo) GetHeadUrl() string {
	if m != nil && m.HeadUrl != nil {
		return *m.HeadUrl
	}
	return ""
}

func (m *WeixinInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *WeixinInfo) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *WeixinInfo) GetUnionId() string {
	if m != nil && m.UnionId != nil {
		return *m.UnionId
	}
	return ""
}

// 请求
type CommonReqReg struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	RegType          *int32       `protobuf:"varint,2,opt,name=regType" json:"regType,omitempty"`
	WxInfo           *WeixinInfo  `protobuf:"bytes,3,opt,name=wxInfo" json:"wxInfo,omitempty"`
	ClientOSType     *int32       `protobuf:"varint,4,opt,name=clientOSType" json:"clientOSType,omitempty"`
	ChannelId        *string      `protobuf:"bytes,5,opt,name=channelId" json:"channelId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqReg) Reset()                    { *m = CommonReqReg{} }
func (m *CommonReqReg) String() string            { return proto.CompactTextString(m) }
func (*CommonReqReg) ProtoMessage()               {}
func (*CommonReqReg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CommonReqReg) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqReg) GetRegType() int32 {
	if m != nil && m.RegType != nil {
		return *m.RegType
	}
	return 0
}

func (m *CommonReqReg) GetWxInfo() *WeixinInfo {
	if m != nil {
		return m.WxInfo
	}
	return nil
}

func (m *CommonReqReg) GetClientOSType() int32 {
	if m != nil && m.ClientOSType != nil {
		return *m.ClientOSType
	}
	return 0
}

func (m *CommonReqReg) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

// 请求注册 通过输入的用户名密码
type CommonReqRegViaInput struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserName         *string      `protobuf:"bytes,2,opt,name=userName" json:"userName,omitempty"`
	Password         *string      `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
	ClientOSType     *int32       `protobuf:"varint,4,opt,name=clientOSType" json:"clientOSType,omitempty"`
	ChannelId        *string      `protobuf:"bytes,5,opt,name=channelId" json:"channelId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqRegViaInput) Reset()                    { *m = CommonReqRegViaInput{} }
func (m *CommonReqRegViaInput) String() string            { return proto.CompactTextString(m) }
func (*CommonReqRegViaInput) ProtoMessage()               {}
func (*CommonReqRegViaInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *CommonReqRegViaInput) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqRegViaInput) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *CommonReqRegViaInput) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CommonReqRegViaInput) GetClientOSType() int32 {
	if m != nil && m.ClientOSType != nil {
		return *m.ClientOSType
	}
	return 0
}

func (m *CommonReqRegViaInput) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

// 回复
type CommonAckReg struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckReg) Reset()                    { *m = CommonAckReg{} }
func (m *CommonAckReg) String() string            { return proto.CompactTextString(m) }
func (*CommonAckReg) ProtoMessage()               {}
func (*CommonAckReg) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *CommonAckReg) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonAckReg) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 登录的结构
type CommonReqGameLogin struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	ProtoVersion     *int32       `protobuf:"varint,3,opt,name=protoVersion" json:"protoVersion,omitempty"`
	WxInfo           *WeixinInfo  `protobuf:"bytes,4,opt,name=wxInfo" json:"wxInfo,omitempty"`
	ClientOSType     *int32       `protobuf:"varint,5,opt,name=clientOSType" json:"clientOSType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqGameLogin) Reset()                    { *m = CommonReqGameLogin{} }
func (m *CommonReqGameLogin) String() string            { return proto.CompactTextString(m) }
func (*CommonReqGameLogin) ProtoMessage()               {}
func (*CommonReqGameLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CommonReqGameLogin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqGameLogin) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonReqGameLogin) GetProtoVersion() int32 {
	if m != nil && m.ProtoVersion != nil {
		return *m.ProtoVersion
	}
	return 0
}

func (m *CommonReqGameLogin) GetWxInfo() *WeixinInfo {
	if m != nil {
		return m.WxInfo
	}
	return nil
}

func (m *CommonReqGameLogin) GetClientOSType() int32 {
	if m != nil && m.ClientOSType != nil {
		return *m.ClientOSType
	}
	return 0
}

// 登录的结构 通过输入的用户名密码
type CommonReqGameLoginViaInput struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	UserName         *string      `protobuf:"bytes,3,opt,name=userName" json:"userName,omitempty"`
	Password         *string      `protobuf:"bytes,4,opt,name=password" json:"password,omitempty"`
	ProtoVersion     *int32       `protobuf:"varint,5,opt,name=protoVersion" json:"protoVersion,omitempty"`
	ClientOSType     *int32       `protobuf:"varint,6,opt,name=clientOSType" json:"clientOSType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqGameLoginViaInput) Reset()                    { *m = CommonReqGameLoginViaInput{} }
func (m *CommonReqGameLoginViaInput) String() string            { return proto.CompactTextString(m) }
func (*CommonReqGameLoginViaInput) ProtoMessage()               {}
func (*CommonReqGameLoginViaInput) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *CommonReqGameLoginViaInput) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqGameLoginViaInput) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonReqGameLoginViaInput) GetUserName() string {
	if m != nil && m.UserName != nil {
		return *m.UserName
	}
	return ""
}

func (m *CommonReqGameLoginViaInput) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *CommonReqGameLoginViaInput) GetProtoVersion() int32 {
	if m != nil && m.ProtoVersion != nil {
		return *m.ProtoVersion
	}
	return 0
}

func (m *CommonReqGameLoginViaInput) GetClientOSType() int32 {
	if m != nil && m.ClientOSType != nil {
		return *m.ClientOSType
	}
	return 0
}

// 游戏登录回复
type CommonAckGameLogin struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	NickName         *string      `protobuf:"bytes,3,opt,name=nickName" json:"nickName,omitempty"`
	Chip             *int64       `protobuf:"varint,4,opt,name=chip" json:"chip,omitempty"`
	Coin             *int64       `protobuf:"varint,5,opt,name=coin" json:"coin,omitempty"`
	RoomCard         *int64       `protobuf:"varint,6,opt,name=roomCard" json:"roomCard,omitempty"`
	NewUserAward     *bool        `protobuf:"varint,7,opt,name=newUserAward" json:"newUserAward,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckGameLogin) Reset()                    { *m = CommonAckGameLogin{} }
func (m *CommonAckGameLogin) String() string            { return proto.CompactTextString(m) }
func (*CommonAckGameLogin) ProtoMessage()               {}
func (*CommonAckGameLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CommonAckGameLogin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonAckGameLogin) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonAckGameLogin) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *CommonAckGameLogin) GetChip() int64 {
	if m != nil && m.Chip != nil {
		return *m.Chip
	}
	return 0
}

func (m *CommonAckGameLogin) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *CommonAckGameLogin) GetRoomCard() int64 {
	if m != nil && m.RoomCard != nil {
		return *m.RoomCard
	}
	return 0
}

func (m *CommonAckGameLogin) GetNewUserAward() bool {
	if m != nil && m.NewUserAward != nil {
		return *m.NewUserAward
	}
	return false
}

// 获取二维码链接req
type CommonReqQrLogin struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqQrLogin) Reset()                    { *m = CommonReqQrLogin{} }
func (m *CommonReqQrLogin) String() string            { return proto.CompactTextString(m) }
func (*CommonReqQrLogin) ProtoMessage()               {}
func (*CommonReqQrLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *CommonReqQrLogin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 获取二维码链接ack
type CommonAckQrLogin struct {
	Code             *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	Url              *string `protobuf:"bytes,2,opt,name=url" json:"url,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CommonAckQrLogin) Reset()                    { *m = CommonAckQrLogin{} }
func (m *CommonAckQrLogin) String() string            { return proto.CompactTextString(m) }
func (*CommonAckQrLogin) ProtoMessage()               {}
func (*CommonAckQrLogin) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *CommonAckQrLogin) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

func (m *CommonAckQrLogin) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

// 获取二维码登陆结果req
type CommonReqQrWxInfo struct {
	Code             *string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CommonReqQrWxInfo) Reset()                    { *m = CommonReqQrWxInfo{} }
func (m *CommonReqQrWxInfo) String() string            { return proto.CompactTextString(m) }
func (*CommonReqQrWxInfo) ProtoMessage()               {}
func (*CommonReqQrWxInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *CommonReqQrWxInfo) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

// 获取二维码登陆结果ack
type CommonAckQrWxInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Wxinfo           *WeixinInfo  `protobuf:"bytes,2,opt,name=wxinfo" json:"wxinfo,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckQrWxInfo) Reset()                    { *m = CommonAckQrWxInfo{} }
func (m *CommonAckQrWxInfo) String() string            { return proto.CompactTextString(m) }
func (*CommonAckQrWxInfo) ProtoMessage()               {}
func (*CommonAckQrWxInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *CommonAckQrWxInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonAckQrWxInfo) GetWxinfo() *WeixinInfo {
	if m != nil {
		return m.Wxinfo
	}
	return nil
}

// 断线重连
type CommonAckReconnect struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckReconnect) Reset()                    { *m = CommonAckReconnect{} }
func (m *CommonAckReconnect) String() string            { return proto.CompactTextString(m) }
func (*CommonAckReconnect) ProtoMessage()               {}
func (*CommonAckReconnect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *CommonAckReconnect) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonAckReconnect) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 重连回复
type CommonReqReconnect struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqReconnect) Reset()                    { *m = CommonReqReconnect{} }
func (m *CommonReqReconnect) String() string            { return proto.CompactTextString(m) }
func (*CommonReqReconnect) ProtoMessage()               {}
func (*CommonReqReconnect) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *CommonReqReconnect) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqReconnect) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 请求游戏状态
type CommonReqGameState struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	RoomType         *int32       `protobuf:"varint,2,opt,name=roomType" json:"roomType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqGameState) Reset()                    { *m = CommonReqGameState{} }
func (m *CommonReqGameState) String() string            { return proto.CompactTextString(m) }
func (*CommonReqGameState) ProtoMessage()               {}
func (*CommonReqGameState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *CommonReqGameState) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqGameState) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

// 回复游戏状态(目前是朋友桌才会请求)
type CommonAckGameState struct {
	GameStatus       *int32  `protobuf:"varint,1,opt,name=gameStatus" json:"gameStatus,omitempty"`
	RoomPassword     *string `protobuf:"bytes,2,opt,name=roomPassword" json:"roomPassword,omitempty"`
	RoomType         *int32  `protobuf:"varint,3,opt,name=roomType" json:"roomType,omitempty"`
	GameId           *int32  `protobuf:"varint,4,opt,name=gameId" json:"gameId,omitempty"`
	RoomLevel        *int32  `protobuf:"varint,5,opt,name=roomLevel" json:"roomLevel,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CommonAckGameState) Reset()                    { *m = CommonAckGameState{} }
func (m *CommonAckGameState) String() string            { return proto.CompactTextString(m) }
func (*CommonAckGameState) ProtoMessage()               {}
func (*CommonAckGameState) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{19} }

func (m *CommonAckGameState) GetGameStatus() int32 {
	if m != nil && m.GameStatus != nil {
		return *m.GameStatus
	}
	return 0
}

func (m *CommonAckGameState) GetRoomPassword() string {
	if m != nil && m.RoomPassword != nil {
		return *m.RoomPassword
	}
	return ""
}

func (m *CommonAckGameState) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

func (m *CommonAckGameState) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *CommonAckGameState) GetRoomLevel() int32 {
	if m != nil && m.RoomLevel != nil {
		return *m.RoomLevel
	}
	return 0
}

// 客户端请求
type CommonReqLogout struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqLogout) Reset()                    { *m = CommonReqLogout{} }
func (m *CommonReqLogout) String() string            { return proto.CompactTextString(m) }
func (*CommonReqLogout) ProtoMessage()               {}
func (*CommonReqLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{20} }

func (m *CommonReqLogout) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqLogout) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 服务器推
type CommonAckLogout struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckLogout) Reset()                    { *m = CommonAckLogout{} }
func (m *CommonAckLogout) String() string            { return proto.CompactTextString(m) }
func (*CommonAckLogout) ProtoMessage()               {}
func (*CommonAckLogout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{21} }

func (m *CommonAckLogout) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonAckLogout) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 反馈信息的协议
type CommonReqFeedback struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Message          *string      `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqFeedback) Reset()                    { *m = CommonReqFeedback{} }
func (m *CommonReqFeedback) String() string            { return proto.CompactTextString(m) }
func (*CommonReqFeedback) ProtoMessage()               {}
func (*CommonReqFeedback) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{22} }

func (m *CommonReqFeedback) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqFeedback) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

type ClientBasePoker struct {
	Suit             *CommonEnumPokerColor `protobuf:"varint,1,opt,name=suit,enum=ddproto.CommonEnumPokerColor" json:"suit,omitempty"`
	Num              *int32                `protobuf:"varint,2,opt,name=num" json:"num,omitempty"`
	Id               *int32                `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *ClientBasePoker) Reset()                    { *m = ClientBasePoker{} }
func (m *ClientBasePoker) String() string            { return proto.CompactTextString(m) }
func (*ClientBasePoker) ProtoMessage()               {}
func (*ClientBasePoker) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{23} }

func (m *ClientBasePoker) GetSuit() CommonEnumPokerColor {
	if m != nil && m.Suit != nil {
		return *m.Suit
	}
	return CommonEnumPokerColor_HONGTAO
}

func (m *ClientBasePoker) GetNum() int32 {
	if m != nil && m.Num != nil {
		return *m.Num
	}
	return 0
}

func (m *ClientBasePoker) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

// --------------------------------------------聊天的协议---------------------------------------
// 聊天的内容
type CommonReqMessage struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MsgType          *int32       `protobuf:"varint,2,opt,name=msgType" json:"msgType,omitempty"`
	Id               *int32       `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Msg              *string      `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	DeskId           *int32       `protobuf:"varint,6,opt,name=deskId" json:"deskId,omitempty"`
	ToUserId         *uint32      `protobuf:"varint,7,opt,name=toUserId" json:"toUserId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqMessage) Reset()                    { *m = CommonReqMessage{} }
func (m *CommonReqMessage) String() string            { return proto.CompactTextString(m) }
func (*CommonReqMessage) ProtoMessage()               {}
func (*CommonReqMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{24} }

func (m *CommonReqMessage) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *CommonReqMessage) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CommonReqMessage) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *CommonReqMessage) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonReqMessage) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *CommonReqMessage) GetToUserId() uint32 {
	if m != nil && m.ToUserId != nil {
		return *m.ToUserId
	}
	return 0
}

// 消息广播
type CommonBcMessage struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	MsgType          *int32       `protobuf:"varint,2,opt,name=msgType" json:"msgType,omitempty"`
	Id               *int32       `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Msg              *string      `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	ToUserId         *uint32      `protobuf:"varint,6,opt,name=toUserId" json:"toUserId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonBcMessage) Reset()                    { *m = CommonBcMessage{} }
func (m *CommonBcMessage) String() string            { return proto.CompactTextString(m) }
func (*CommonBcMessage) ProtoMessage()               {}
func (*CommonBcMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{25} }

func (m *CommonBcMessage) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonBcMessage) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *CommonBcMessage) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CommonBcMessage) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

func (m *CommonBcMessage) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonBcMessage) GetToUserId() uint32 {
	if m != nil && m.ToUserId != nil {
		return *m.ToUserId
	}
	return 0
}

// --------------------------------------------公告的协议---------------------------------------
// 请求公告
type CommonReqNotice struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	NoticeType       *int32       `protobuf:"varint,2,opt,name=noticeType" json:"noticeType,omitempty"`
	ChannelId        *string      `protobuf:"bytes,3,opt,name=channelId" json:"channelId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqNotice) Reset()                    { *m = CommonReqNotice{} }
func (m *CommonReqNotice) String() string            { return proto.CompactTextString(m) }
func (*CommonReqNotice) ProtoMessage()               {}
func (*CommonReqNotice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{26} }

func (m *CommonReqNotice) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqNotice) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

func (m *CommonReqNotice) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

// 返回公告的内容
type CommonAckNotice struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	NoticeType       *int32       `protobuf:"varint,2,opt,name=noticeType" json:"noticeType,omitempty"`
	NoticeTitle      *string      `protobuf:"bytes,3,opt,name=noticeTitle" json:"noticeTitle,omitempty"`
	NoticeContent    *string      `protobuf:"bytes,4,opt,name=noticeContent" json:"noticeContent,omitempty"`
	NoticeMemo       *string      `protobuf:"bytes,5,opt,name=noticeMemo" json:"noticeMemo,omitempty"`
	Id               *int32       `protobuf:"varint,6,opt,name=id" json:"id,omitempty"`
	Fileds           []string     `protobuf:"bytes,7,rep,name=fileds" json:"fileds,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckNotice) Reset()                    { *m = CommonAckNotice{} }
func (m *CommonAckNotice) String() string            { return proto.CompactTextString(m) }
func (*CommonAckNotice) ProtoMessage()               {}
func (*CommonAckNotice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{27} }

func (m *CommonAckNotice) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonAckNotice) GetNoticeType() int32 {
	if m != nil && m.NoticeType != nil {
		return *m.NoticeType
	}
	return 0
}

func (m *CommonAckNotice) GetNoticeTitle() string {
	if m != nil && m.NoticeTitle != nil {
		return *m.NoticeTitle
	}
	return ""
}

func (m *CommonAckNotice) GetNoticeContent() string {
	if m != nil && m.NoticeContent != nil {
		return *m.NoticeContent
	}
	return ""
}

func (m *CommonAckNotice) GetNoticeMemo() string {
	if m != nil && m.NoticeMemo != nil {
		return *m.NoticeMemo
	}
	return ""
}

func (m *CommonAckNotice) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CommonAckNotice) GetFileds() []string {
	if m != nil {
		return m.Fileds
	}
	return nil
}

// --------------------------------------------请求托管的协议---------------------------------------
// 进入托管模式
type CommonReqEnterAgentMode struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqEnterAgentMode) Reset()                    { *m = CommonReqEnterAgentMode{} }
func (m *CommonReqEnterAgentMode) String() string            { return proto.CompactTextString(m) }
func (*CommonReqEnterAgentMode) ProtoMessage()               {}
func (*CommonReqEnterAgentMode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{28} }

func (m *CommonReqEnterAgentMode) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqEnterAgentMode) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 进入托管模式 回复
type CommonAckEnterAgentMode struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckEnterAgentMode) Reset()                    { *m = CommonAckEnterAgentMode{} }
func (m *CommonAckEnterAgentMode) String() string            { return proto.CompactTextString(m) }
func (*CommonAckEnterAgentMode) ProtoMessage()               {}
func (*CommonAckEnterAgentMode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{29} }

func (m *CommonAckEnterAgentMode) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonAckEnterAgentMode) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 退出托管模式
type CommonReqQuitAgentMode struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqQuitAgentMode) Reset()                    { *m = CommonReqQuitAgentMode{} }
func (m *CommonReqQuitAgentMode) String() string            { return proto.CompactTextString(m) }
func (*CommonReqQuitAgentMode) ProtoMessage()               {}
func (*CommonReqQuitAgentMode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{30} }

func (m *CommonReqQuitAgentMode) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqQuitAgentMode) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 退出托管模式 回复
type CommonAckQuitAgentMode struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckQuitAgentMode) Reset()                    { *m = CommonAckQuitAgentMode{} }
func (m *CommonAckQuitAgentMode) String() string            { return proto.CompactTextString(m) }
func (*CommonAckQuitAgentMode) ProtoMessage()               {}
func (*CommonAckQuitAgentMode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{31} }

func (m *CommonAckQuitAgentMode) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonAckQuitAgentMode) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// --------------------------------------------请求离开的协议---------------------------------------
// 离开房间
type CommonReqLeaveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	IsExchange       *bool        `protobuf:"varint,2,opt,name=isExchange" json:"isExchange,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqLeaveDesk) Reset()                    { *m = CommonReqLeaveDesk{} }
func (m *CommonReqLeaveDesk) String() string            { return proto.CompactTextString(m) }
func (*CommonReqLeaveDesk) ProtoMessage()               {}
func (*CommonReqLeaveDesk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{32} }

func (m *CommonReqLeaveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqLeaveDesk) GetIsExchange() bool {
	if m != nil && m.IsExchange != nil {
		return *m.IsExchange
	}
	return false
}

// 离开房间的回复
type CommonAckLeaveDesk struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsExchange       *bool        `protobuf:"varint,3,opt,name=isExchange" json:"isExchange,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckLeaveDesk) Reset()                    { *m = CommonAckLeaveDesk{} }
func (m *CommonAckLeaveDesk) String() string            { return proto.CompactTextString(m) }
func (*CommonAckLeaveDesk) ProtoMessage()               {}
func (*CommonAckLeaveDesk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{33} }

func (m *CommonAckLeaveDesk) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonAckLeaveDesk) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonAckLeaveDesk) GetIsExchange() bool {
	if m != nil && m.IsExchange != nil {
		return *m.IsExchange
	}
	return false
}

// --------------------------------------------踢人的广播---------------------------------------
// 踢人的广播
type CommonBcKickout struct {
	Header           *ProtoHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32              `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Type             *COMMON_ENUM_KICKOUT `protobuf:"varint,3,opt,name=type,enum=ddproto.COMMON_ENUM_KICKOUT" json:"type,omitempty"`
	Msg              *string              `protobuf:"bytes,4,opt,name=msg" json:"msg,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CommonBcKickout) Reset()                    { *m = CommonBcKickout{} }
func (m *CommonBcKickout) String() string            { return proto.CompactTextString(m) }
func (*CommonBcKickout) ProtoMessage()               {}
func (*CommonBcKickout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{34} }

func (m *CommonBcKickout) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonBcKickout) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonBcKickout) GetType() COMMON_ENUM_KICKOUT {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return COMMON_ENUM_KICKOUT_K_COINUNMATCHED
}

func (m *CommonBcKickout) GetMsg() string {
	if m != nil && m.Msg != nil {
		return *m.Msg
	}
	return ""
}

// --------------------------------------------请求补助的协议---------------------------------------
// 请求补助
type CommonReqAllowance struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqAllowance) Reset()                    { *m = CommonReqAllowance{} }
func (m *CommonReqAllowance) String() string            { return proto.CompactTextString(m) }
func (*CommonReqAllowance) ProtoMessage()               {}
func (*CommonReqAllowance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{35} }

func (m *CommonReqAllowance) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqAllowance) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 回复补助
type CommonAckAllowance struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsSuccessed      *bool        `protobuf:"varint,3,opt,name=isSuccessed" json:"isSuccessed,omitempty"`
	Times2Get        *int32       `protobuf:"varint,4,opt,name=times2Get" json:"times2Get,omitempty"`
	AllowanceCoin    *int64       `protobuf:"varint,5,opt,name=allowanceCoin" json:"allowanceCoin,omitempty"`
	UserTotalCoin    *int64       `protobuf:"varint,6,opt,name=userTotalCoin" json:"userTotalCoin,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckAllowance) Reset()                    { *m = CommonAckAllowance{} }
func (m *CommonAckAllowance) String() string            { return proto.CompactTextString(m) }
func (*CommonAckAllowance) ProtoMessage()               {}
func (*CommonAckAllowance) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{36} }

func (m *CommonAckAllowance) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonAckAllowance) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonAckAllowance) GetIsSuccessed() bool {
	if m != nil && m.IsSuccessed != nil {
		return *m.IsSuccessed
	}
	return false
}

func (m *CommonAckAllowance) GetTimes2Get() int32 {
	if m != nil && m.Times2Get != nil {
		return *m.Times2Get
	}
	return 0
}

func (m *CommonAckAllowance) GetAllowanceCoin() int64 {
	if m != nil && m.AllowanceCoin != nil {
		return *m.AllowanceCoin
	}
	return 0
}

func (m *CommonAckAllowance) GetUserTotalCoin() int64 {
	if m != nil && m.UserTotalCoin != nil {
		return *m.UserTotalCoin
	}
	return 0
}

// ---------------------------------------------请求解散房间---------------------------------------------
type CommonReqApplyDissolve struct {
	// 申请解散房间，只有朋友桌才有
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqApplyDissolve) Reset()                    { *m = CommonReqApplyDissolve{} }
func (m *CommonReqApplyDissolve) String() string            { return proto.CompactTextString(m) }
func (*CommonReqApplyDissolve) ProtoMessage()               {}
func (*CommonReqApplyDissolve) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{37} }

func (m *CommonReqApplyDissolve) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqApplyDissolve) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type CommonBcApplyDissolve struct {
	// 申请解散房间，只有朋友桌才有
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Result           *bool        `protobuf:"varint,3,opt,name=result" json:"result,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonBcApplyDissolve) Reset()                    { *m = CommonBcApplyDissolve{} }
func (m *CommonBcApplyDissolve) String() string            { return proto.CompactTextString(m) }
func (*CommonBcApplyDissolve) ProtoMessage()               {}
func (*CommonBcApplyDissolve) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{38} }

func (m *CommonBcApplyDissolve) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonBcApplyDissolve) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonBcApplyDissolve) GetResult() bool {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return false
}

// 回复 申请解散房间，用户同意还是拒绝
type CommonReqApplyDissolveBack struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Agree            *bool        `protobuf:"varint,3,opt,name=agree" json:"agree,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqApplyDissolveBack) Reset()                    { *m = CommonReqApplyDissolveBack{} }
func (m *CommonReqApplyDissolveBack) String() string            { return proto.CompactTextString(m) }
func (*CommonReqApplyDissolveBack) ProtoMessage()               {}
func (*CommonReqApplyDissolveBack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{39} }

func (m *CommonReqApplyDissolveBack) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqApplyDissolveBack) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonReqApplyDissolveBack) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

type CommonAckApplyDissolveBack struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Agree            *bool        `protobuf:"varint,3,opt,name=agree" json:"agree,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckApplyDissolveBack) Reset()                    { *m = CommonAckApplyDissolveBack{} }
func (m *CommonAckApplyDissolveBack) String() string            { return proto.CompactTextString(m) }
func (*CommonAckApplyDissolveBack) ProtoMessage()               {}
func (*CommonAckApplyDissolveBack) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{40} }

func (m *CommonAckApplyDissolveBack) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonAckApplyDissolveBack) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *CommonAckApplyDissolveBack) GetAgree() bool {
	if m != nil && m.Agree != nil {
		return *m.Agree
	}
	return false
}

// 给超时玩家的单播 告知玩家已超时
type CommonAckTimeout struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonAckTimeout) Reset()                    { *m = CommonAckTimeout{} }
func (m *CommonAckTimeout) String() string            { return proto.CompactTextString(m) }
func (*CommonAckTimeout) ProtoMessage()               {}
func (*CommonAckTimeout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{41} }

func (m *CommonAckTimeout) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 玩家掉线的广播
type CommonBcUserBreak struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonBcUserBreak) Reset()                    { *m = CommonBcUserBreak{} }
func (m *CommonBcUserBreak) String() string            { return proto.CompactTextString(m) }
func (*CommonBcUserBreak) ProtoMessage()               {}
func (*CommonBcUserBreak) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{42} }

func (m *CommonBcUserBreak) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonBcUserBreak) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// ---------------------------------------------常用统计信息---------------------------------------------
type CommonReqClickStatistic struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BtnId            *BTN_TYPE    `protobuf:"varint,2,opt,name=BtnId,enum=ddproto.BTN_TYPE" json:"BtnId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqClickStatistic) Reset()                    { *m = CommonReqClickStatistic{} }
func (m *CommonReqClickStatistic) String() string            { return proto.CompactTextString(m) }
func (*CommonReqClickStatistic) ProtoMessage()               {}
func (*CommonReqClickStatistic) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{43} }

func (m *CommonReqClickStatistic) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *CommonReqClickStatistic) GetBtnId() BTN_TYPE {
	if m != nil && m.BtnId != nil {
		return *m.BtnId
	}
	return BTN_TYPE_BTNTYPE_NEWUSERBUTTON
}

// 请求离线协议信息
type CommonReqOffline struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *CommonReqOffline) Reset()                    { *m = CommonReqOffline{} }
func (m *CommonReqOffline) String() string            { return proto.CompactTextString(m) }
func (*CommonReqOffline) ProtoMessage()               {}
func (*CommonReqOffline) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{44} }

func (m *CommonReqOffline) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoHeader)(nil), "ddproto.ProtoHeader")
	proto.RegisterType((*Heartbeat)(nil), "ddproto.Heartbeat")
	proto.RegisterType((*ServerInfo)(nil), "ddproto.ServerInfo")
	proto.RegisterType((*QuickConn)(nil), "ddproto.QuickConn")
	proto.RegisterType((*AckQuickConn)(nil), "ddproto.AckQuickConn")
	proto.RegisterType((*WeixinInfo)(nil), "ddproto.WeixinInfo")
	proto.RegisterType((*CommonReqReg)(nil), "ddproto.common_req_reg")
	proto.RegisterType((*CommonReqRegViaInput)(nil), "ddproto.common_req_reg_via_input")
	proto.RegisterType((*CommonAckReg)(nil), "ddproto.common_ack_reg")
	proto.RegisterType((*CommonReqGameLogin)(nil), "ddproto.common_req_gameLogin")
	proto.RegisterType((*CommonReqGameLoginViaInput)(nil), "ddproto.common_req_gameLogin_via_input")
	proto.RegisterType((*CommonAckGameLogin)(nil), "ddproto.common_ack_gameLogin")
	proto.RegisterType((*CommonReqQrLogin)(nil), "ddproto.common_req_qrLogin")
	proto.RegisterType((*CommonAckQrLogin)(nil), "ddproto.common_ack_qrLogin")
	proto.RegisterType((*CommonReqQrWxInfo)(nil), "ddproto.common_req_qrWxInfo")
	proto.RegisterType((*CommonAckQrWxInfo)(nil), "ddproto.common_ack_qrWxInfo")
	proto.RegisterType((*CommonAckReconnect)(nil), "ddproto.common_ack_reconnect")
	proto.RegisterType((*CommonReqReconnect)(nil), "ddproto.common_req_reconnect")
	proto.RegisterType((*CommonReqGameState)(nil), "ddproto.common_req_gameState")
	proto.RegisterType((*CommonAckGameState)(nil), "ddproto.common_ack_gameState")
	proto.RegisterType((*CommonReqLogout)(nil), "ddproto.common_req_logout")
	proto.RegisterType((*CommonAckLogout)(nil), "ddproto.common_ack_logout")
	proto.RegisterType((*CommonReqFeedback)(nil), "ddproto.common_req_feedback")
	proto.RegisterType((*ClientBasePoker)(nil), "ddproto.client_base_poker")
	proto.RegisterType((*CommonReqMessage)(nil), "ddproto.common_req_message")
	proto.RegisterType((*CommonBcMessage)(nil), "ddproto.common_bc_message")
	proto.RegisterType((*CommonReqNotice)(nil), "ddproto.common_req_notice")
	proto.RegisterType((*CommonAckNotice)(nil), "ddproto.common_ack_notice")
	proto.RegisterType((*CommonReqEnterAgentMode)(nil), "ddproto.common_req_enterAgentMode")
	proto.RegisterType((*CommonAckEnterAgentMode)(nil), "ddproto.common_ack_enterAgentMode")
	proto.RegisterType((*CommonReqQuitAgentMode)(nil), "ddproto.common_req_quitAgentMode")
	proto.RegisterType((*CommonAckQuitAgentMode)(nil), "ddproto.common_ack_quitAgentMode")
	proto.RegisterType((*CommonReqLeaveDesk)(nil), "ddproto.common_req_leaveDesk")
	proto.RegisterType((*CommonAckLeaveDesk)(nil), "ddproto.common_ack_leaveDesk")
	proto.RegisterType((*CommonBcKickout)(nil), "ddproto.common_bc_kickout")
	proto.RegisterType((*CommonReqAllowance)(nil), "ddproto.common_req_allowance")
	proto.RegisterType((*CommonAckAllowance)(nil), "ddproto.common_ack_allowance")
	proto.RegisterType((*CommonReqApplyDissolve)(nil), "ddproto.common_req_applyDissolve")
	proto.RegisterType((*CommonBcApplyDissolve)(nil), "ddproto.common_bc_applyDissolve")
	proto.RegisterType((*CommonReqApplyDissolveBack)(nil), "ddproto.common_req_applyDissolveBack")
	proto.RegisterType((*CommonAckApplyDissolveBack)(nil), "ddproto.common_ack_applyDissolveBack")
	proto.RegisterType((*CommonAckTimeout)(nil), "ddproto.common_ack_timeout")
	proto.RegisterType((*CommonBcUserBreak)(nil), "ddproto.common_bc_userBreak")
	proto.RegisterType((*CommonReqClickStatistic)(nil), "ddproto.common_req_clickStatistic")
	proto.RegisterType((*CommonReqOffline)(nil), "ddproto.common_req_offline")
	proto.RegisterEnum("ddproto.CommonEnumReg", CommonEnumReg_name, CommonEnumReg_value)
	proto.RegisterEnum("ddproto.CommonEnumOsType", CommonEnumOsType_name, CommonEnumOsType_value)
	proto.RegisterEnum("ddproto.CommonEnumPokerColor", CommonEnumPokerColor_name, CommonEnumPokerColor_value)
}

var fileDescriptor0 = []byte{
	// 1644 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0xdf, 0x6e, 0xe3, 0x44,
	0x17, 0xff, 0x1c, 0x27, 0x69, 0x73, 0xba, 0xdb, 0x4d, 0xbd, 0x55, 0x3f, 0x7f, 0xab, 0xaa, 0x5f,
	0x65, 0x21, 0x51, 0x96, 0xd5, 0x0a, 0x95, 0x2b, 0x10, 0x5c, 0x24, 0x69, 0x68, 0x43, 0x9b, 0xa4,
	0x38, 0xc9, 0x96, 0x15, 0xa0, 0xac, 0x6b, 0x4f, 0xb3, 0x43, 0x1c, 0x4f, 0x76, 0xc6, 0x69, 0xbb,
	0x08, 0x89, 0xf7, 0x40, 0x42, 0xbc, 0x00, 0x37, 0xbc, 0x02, 0x42, 0x42, 0x70, 0xc7, 0x1b, 0x70,
	0x85, 0xb8, 0xe5, 0x0d, 0xd0, 0xfc, 0x89, 0x33, 0x4e, 0xda, 0x15, 0xa9, 0x52, 0xc4, 0xdd, 0x9c,
	0xe3, 0x33, 0xe7, 0xef, 0xef, 0x9c, 0x39, 0x86, 0xfb, 0x3e, 0x19, 0x0c, 0x48, 0xd4, 0xf5, 0x43,
	0x8c, 0xa2, 0xf8, 0xf1, 0x90, 0x92, 0x98, 0x58, 0x4b, 0x41, 0x20, 0x0e, 0x0f, 0xd6, 0xd4, 0x57,
	0x14, 0x8d, 0x06, 0xf2, 0x9b, 0x83, 0x61, 0xe5, 0x98, 0x1f, 0x0e, 0x90, 0x17, 0x20, 0x6a, 0xd9,
	0xb0, 0x74, 0x8e, 0x28, 0xc3, 0x24, 0xb2, 0x8d, 0x6d, 0x63, 0xa7, 0xe0, 0x8e, 0x49, 0x6b, 0x03,
	0xf2, 0x23, 0x86, 0x68, 0x2d, 0xb0, 0x33, 0xdb, 0xc6, 0xce, 0x5d, 0x57, 0x51, 0x96, 0x05, 0x59,
	0x9f, 0x04, 0xc8, 0x36, 0xb7, 0x8d, 0x9d, 0x9c, 0x2b, 0xce, 0xd6, 0x3a, 0xe4, 0x10, 0xa5, 0x84,
	0xda, 0x59, 0xa1, 0x43, 0x12, 0xce, 0x3b, 0x50, 0x38, 0x40, 0x1e, 0x8d, 0x4f, 0x91, 0x17, 0x5b,
	0x8f, 0x20, 0xff, 0x5c, 0x98, 0x14, 0x76, 0x56, 0x76, 0xd7, 0x1f, 0x2b, 0x27, 0x1f, 0x6b, 0xee,
	0xb8, 0x4a, 0xc6, 0xf9, 0x31, 0x03, 0xd0, 0x42, 0xf4, 0x1c, 0xd1, 0x5a, 0x74, 0x46, 0xac, 0x55,
	0xc8, 0xe0, 0xa1, 0x72, 0x30, 0x83, 0x87, 0xdc, 0x87, 0x21, 0xa1, 0xb1, 0xf0, 0x2c, 0xe7, 0x8a,
	0xb3, 0xb5, 0x05, 0x40, 0x51, 0x88, 0x3c, 0x86, 0xda, 0x5e, 0x4f, 0x79, 0xa7, 0x71, 0xac, 0x6d,
	0x58, 0xf1, 0x47, 0x94, 0x3e, 0x51, 0xd1, 0x66, 0x85, 0x80, 0xce, 0xb2, 0x1e, 0xc0, 0x32, 0x66,
	0x9d, 0x61, 0xe0, 0xc5, 0xc8, 0xce, 0x89, 0xcf, 0x09, 0xcd, 0x6f, 0x07, 0xe4, 0x22, 0x0a, 0x89,
	0x17, 0x74, 0x68, 0x68, 0xe7, 0x85, 0x2b, 0x3a, 0x8b, 0x4b, 0xa8, 0xd4, 0x71, 0x97, 0xed, 0x25,
	0x29, 0xa1, 0xb1, 0xb8, 0x87, 0x98, 0xd5, 0x3d, 0x1c, 0xc5, 0x1e, 0x8e, 0xec, 0x65, 0xe9, 0xe1,
	0x84, 0xc3, 0x35, 0x0c, 0xd4, 0xb9, 0xce, 0x7a, 0x76, 0x41, 0x6a, 0xd0, 0x58, 0xbc, 0x26, 0x2c,
	0xf6, 0xe2, 0x11, 0xb3, 0x41, 0xdc, 0x56, 0x14, 0xe7, 0xf7, 0xbc, 0x01, 0xaa, 0x05, 0xf6, 0x8a,
	0xe4, 0x4b, 0xca, 0xf9, 0xd9, 0x80, 0xc2, 0x47, 0x23, 0xec, 0xf7, 0x2b, 0x24, 0x8a, 0xe6, 0x2b,
	0x81, 0xb5, 0x09, 0x05, 0xff, 0xb9, 0x17, 0x45, 0x28, 0x54, 0x10, 0x28, 0xb8, 0x13, 0x86, 0x66,
	0xd1, 0xd4, 0x2d, 0xfe, 0x8d, 0x2c, 0x6f, 0x01, 0x84, 0x5e, 0xd4, 0x1b, 0x79, 0x3d, 0x7e, 0x5b,
	0xe6, 0x59, 0xe3, 0x68, 0xb8, 0xcb, 0xeb, 0xb8, 0x73, 0xbe, 0x35, 0xe0, 0x4e, 0xc9, 0xef, 0xdf,
	0x34, 0x9c, 0xb7, 0x01, 0xb8, 0x8b, 0x12, 0x54, 0x76, 0x66, 0xdb, 0xdc, 0x59, 0xd9, 0xbd, 0x9f,
	0xdc, 0x98, 0x60, 0xcd, 0xd5, 0xc4, 0xac, 0x47, 0xb0, 0xc6, 0xc4, 0xe9, 0x08, 0xb3, 0x78, 0x1c,
	0x93, 0x0c, 0x78, 0xf6, 0x83, 0xf3, 0xb5, 0x01, 0x70, 0x82, 0xf0, 0x25, 0x96, 0xe5, 0xde, 0x80,
	0x3c, 0x19, 0xa2, 0xa8, 0x16, 0x28, 0xe0, 0x2a, 0x8a, 0xc3, 0x2c, 0xc2, 0x7e, 0xbf, 0xe1, 0x0d,
	0x90, 0xca, 0x6b, 0x42, 0xf3, 0x76, 0xe4, 0xfe, 0x72, 0x88, 0x99, 0xb2, 0x1d, 0x15, 0x69, 0x15,
	0xc1, 0x64, 0xe8, 0x52, 0x25, 0x94, 0x1f, 0x45, 0x23, 0xe2, 0xf8, 0xa5, 0x48, 0x61, 0xc1, 0x15,
	0x67, 0x7e, 0x7f, 0x14, 0x71, 0xbc, 0x05, 0x0a, 0xa2, 0x63, 0xd2, 0xf9, 0xc9, 0x80, 0x55, 0x35,
	0x0d, 0x28, 0x7a, 0xd1, 0xa5, 0xa8, 0x37, 0x67, 0x02, 0x6d, 0x58, 0xa2, 0xa8, 0xd7, 0x7e, 0x39,
	0x44, 0xaa, 0xed, 0xc6, 0xa4, 0xf5, 0x26, 0xe4, 0x2f, 0x2e, 0x05, 0xe8, 0x4d, 0xa1, 0x67, 0x92,
	0xd6, 0x49, 0x36, 0x5c, 0x25, 0x62, 0x39, 0x70, 0x47, 0xce, 0xaa, 0x66, 0x4b, 0xe8, 0x92, 0x01,
	0xa5, 0x78, 0x69, 0xe8, 0xe5, 0xa6, 0xa0, 0xe7, 0xfc, 0x60, 0x80, 0x9d, 0x8e, 0xa4, 0x7b, 0x8e,
	0xbd, 0x2e, 0x8e, 0x86, 0xa3, 0x39, 0xc7, 0x0c, 0x2f, 0x05, 0x47, 0x97, 0x5e, 0x8a, 0x31, 0xcd,
	0xbf, 0x0d, 0x3d, 0xc6, 0x2e, 0x08, 0x0d, 0x54, 0x2d, 0x12, 0x7a, 0x01, 0x41, 0x3c, 0x49, 0xaa,
	0xe1, 0xf9, 0xfd, 0x1b, 0x54, 0xe3, 0x9a, 0xe9, 0xec, 0xfc, 0x6a, 0xc0, 0xba, 0x96, 0x1c, 0x8e,
	0xe5, 0x23, 0xd2, 0xc3, 0xd1, 0x62, 0xd4, 0xf3, 0xc0, 0xc5, 0xa5, 0x74, 0x2f, 0xa4, 0x78, 0x1a,
	0x1c, 0xb2, 0xf3, 0xc3, 0x21, 0x37, 0x9b, 0x49, 0xe7, 0x77, 0x03, 0xb6, 0xae, 0x8a, 0xe9, 0xc6,
	0x65, 0xbf, 0x2e, 0x3a, 0x1d, 0x0e, 0xe6, 0x2b, 0xe0, 0x90, 0x9d, 0x85, 0x43, 0x2a, 0x2b, 0xb9,
	0x2b, 0xb2, 0x32, 0x1d, 0x68, 0xfe, 0x8a, 0x40, 0x7f, 0x9b, 0x14, 0x8f, 0xa3, 0x62, 0xd1, 0xc5,
	0xd3, 0x07, 0x8f, 0x39, 0x35, 0x78, 0xf8, 0x30, 0x79, 0x8e, 0x87, 0x22, 0x34, 0xd3, 0x15, 0x67,
	0xf9, 0xd2, 0x63, 0x19, 0x0e, 0xe7, 0x11, 0x2c, 0xde, 0x48, 0x4a, 0xc8, 0xa0, 0xe2, 0x51, 0x39,
	0x61, 0x4c, 0x37, 0xa1, 0x79, 0x88, 0x11, 0xba, 0xe8, 0x30, 0x44, 0x4b, 0x17, 0xfc, 0x3b, 0x7f,
	0x02, 0x97, 0xdd, 0x14, 0xcf, 0x29, 0x83, 0xa5, 0x95, 0xf2, 0x05, 0xbd, 0x41, 0x7c, 0xce, 0xbb,
	0x89, 0x0e, 0x9e, 0xa5, 0xb1, 0x8e, 0xf1, 0x5e, 0x62, 0xa8, 0x71, 0xc8, 0xf7, 0x92, 0x22, 0x98,
	0x23, 0x1a, 0xaa, 0xd6, 0xe6, 0x47, 0xe7, 0x8d, 0x64, 0x63, 0x92, 0xf6, 0x4f, 0x24, 0x0c, 0xaf,
	0xb8, 0xec, 0x0c, 0x13, 0x51, 0x69, 0x46, 0x89, 0xce, 0x57, 0x0b, 0xd1, 0x0c, 0x98, 0x37, 0x43,
	0xe6, 0x95, 0xcd, 0xc0, 0x45, 0x9c, 0x4f, 0x53, 0xe5, 0xa7, 0xc8, 0x27, 0x51, 0x84, 0xfc, 0x05,
	0xa1, 0x5b, 0xd3, 0x2e, 0xc7, 0xe6, 0x62, 0xb5, 0x3f, 0x9b, 0x99, 0x3b, 0xad, 0x98, 0x2f, 0x4e,
	0x73, 0x0f, 0x64, 0x0e, 0x27, 0xed, 0x95, 0x49, 0x68, 0xe7, 0xbb, 0xd9, 0xee, 0x90, 0x26, 0xb6,
	0xd4, 0xd3, 0x2e, 0x37, 0x23, 0x43, 0x6e, 0x14, 0x13, 0x0e, 0xc7, 0x25, 0x57, 0x72, 0x3c, 0x6e,
	0x5f, 0x09, 0x87, 0x14, 0x2f, 0x65, 0xd8, 0x4c, 0x1b, 0xd6, 0x76, 0x9d, 0x6c, 0x6a, 0xd7, 0xd9,
	0x84, 0x02, 0x97, 0x39, 0x42, 0xe7, 0x28, 0x54, 0x3d, 0x3f, 0x61, 0x38, 0x4f, 0x61, 0x4d, 0x4b,
	0x48, 0x48, 0x7a, 0x64, 0x51, 0x73, 0x4a, 0x53, 0xcd, 0x13, 0xb1, 0x50, 0xd5, 0x9f, 0xa5, 0xfa,
	0xe3, 0x0c, 0xa1, 0xe0, 0xd4, 0xf3, 0xfb, 0xf3, 0xaf, 0x0a, 0x03, 0xc4, 0x98, 0xd7, 0x1b, 0xbf,
	0xaa, 0x63, 0xd2, 0xf9, 0x1c, 0xd6, 0xe4, 0xc4, 0xeb, 0x9e, 0x7a, 0x0c, 0x75, 0x87, 0xa4, 0x2f,
	0x56, 0xb3, 0x2c, 0x1b, 0xe1, 0x58, 0xa8, 0x5e, 0xdd, 0xfd, 0x7f, 0xa2, 0x5a, 0xfb, 0x79, 0x91,
	0x92, 0x15, 0x12, 0x12, 0xea, 0x0a, 0x61, 0xde, 0xda, 0xd1, 0x68, 0xa0, 0x40, 0xc2, 0x8f, 0xe2,
	0x27, 0x61, 0xbc, 0x8e, 0x66, 0x70, 0xe0, 0xfc, 0x62, 0xa4, 0x66, 0x8d, 0x72, 0xe1, 0x06, 0xa1,
	0xb0, 0xd4, 0xd6, 0xa3, 0xc8, 0x69, 0x73, 0xdc, 0xa1, 0x01, 0xeb, 0xa9, 0xb7, 0x81, 0x1f, 0xb5,
	0x1c, 0xe7, 0x52, 0x73, 0x78, 0x03, 0xf2, 0x01, 0x62, 0x7d, 0xb5, 0xa3, 0xe5, 0x5c, 0x45, 0x71,
	0x0c, 0xc6, 0xa4, 0x23, 0x6f, 0x2c, 0x89, 0x1b, 0x09, 0xed, 0x7c, 0x6f, 0x24, 0x35, 0x3f, 0xf5,
	0xff, 0x45, 0xb1, 0xe8, 0x3e, 0xe7, 0xa7, 0x7c, 0xfe, 0x2a, 0xd5, 0x01, 0x11, 0x89, 0xb1, 0x3f,
	0xaf, 0xcb, 0x5b, 0x00, 0xf2, 0x9e, 0xe6, 0xb5, 0xc6, 0x49, 0x2f, 0x59, 0xe6, 0xf4, 0x92, 0xf5,
	0xa7, 0x91, 0x6a, 0x94, 0x5b, 0xf1, 0x60, 0x1b, 0x56, 0x14, 0x85, 0xe3, 0x70, 0xfc, 0xae, 0xea,
	0x2c, 0xeb, 0x35, 0xb8, 0x2b, 0xc9, 0x0a, 0x89, 0x62, 0x14, 0xc5, 0x2a, 0xad, 0x69, 0xe6, 0xc4,
	0x4e, 0x1d, 0x0d, 0x88, 0xda, 0x17, 0x35, 0x8e, 0x2a, 0x51, 0x3e, 0x29, 0xd1, 0x06, 0xe4, 0xcf,
	0x70, 0x88, 0x02, 0x66, 0x2f, 0x6d, 0x9b, 0xfc, 0xef, 0x42, 0x52, 0x8e, 0x07, 0xff, 0xd3, 0x92,
	0x8e, 0xa2, 0x18, 0xd1, 0x52, 0x0f, 0x45, 0x71, 0x9d, 0xbf, 0x87, 0x8b, 0x99, 0x11, 0x13, 0x13,
	0x3c, 0xab, 0xb7, 0x62, 0xe2, 0x59, 0x6a, 0xc5, 0x7f, 0x31, 0xc2, 0xf1, 0xed, 0x59, 0x10, 0xaf,
	0xfb, 0x2d, 0x58, 0x08, 0x52, 0x2f, 0x62, 0x88, 0xbc, 0x73, 0xb4, 0x87, 0x58, 0x7f, 0x7e, 0xfc,
	0x61, 0x56, 0xbd, 0xe4, 0xa0, 0x56, 0xe3, 0x74, 0xd9, 0xd5, 0x38, 0xce, 0x97, 0xa9, 0x47, 0xf1,
	0xa6, 0x56, 0xae, 0x5b, 0x19, 0xd3, 0xd6, 0xcd, 0x19, 0xeb, 0xdf, 0xa4, 0xc6, 0x52, 0x1f, 0xfb,
	0xfd, 0x85, 0x3d, 0x45, 0xd6, 0x5b, 0x90, 0x8d, 0xc7, 0xcf, 0xf1, 0xea, 0xee, 0x66, 0xa2, 0xa3,
	0xd2, 0xac, 0xd7, 0x9b, 0x8d, 0x6e, 0xb5, 0xd1, 0xa9, 0x77, 0x0f, 0x6b, 0x95, 0xc3, 0x66, 0xa7,
	0xed, 0x0a, 0xc9, 0xd9, 0xb1, 0x35, 0xb5, 0xf3, 0x78, 0x61, 0x48, 0x2e, 0xbc, 0xc8, 0x5f, 0x54,
	0x85, 0xff, 0x48, 0x6f, 0x24, 0x0b, 0x56, 0xcf, 0x47, 0x0b, 0x66, 0xad, 0x91, 0xef, 0x23, 0xc6,
	0x50, 0xa0, 0xb2, 0xaf, 0xb3, 0xf8, 0xf8, 0x8b, 0xf1, 0x00, 0xb1, 0xdd, 0x7d, 0x14, 0xab, 0xe5,
	0x64, 0xc2, 0xe0, 0x83, 0x27, 0x71, 0xa9, 0x32, 0x59, 0xe4, 0xd3, 0x4c, 0x2e, 0xc5, 0xed, 0xb5,
	0x49, 0xec, 0x85, 0x42, 0x4a, 0xae, 0xf5, 0x69, 0xe6, 0x54, 0x43, 0x7a, 0xc3, 0x61, 0xf8, 0x72,
	0x0f, 0x33, 0x46, 0xc2, 0xf3, 0x45, 0x25, 0xf3, 0x02, 0xfe, 0x3b, 0x41, 0xd2, 0x2d, 0x18, 0xe0,
	0x7c, 0x8a, 0xd8, 0x28, 0x8c, 0x55, 0x26, 0x15, 0xe5, 0x7c, 0x01, 0x9b, 0xd7, 0x85, 0x56, 0x9e,
	0x7f, 0xf7, 0xb9, 0xce, 0xfa, 0x3a, 0xe4, 0xbc, 0x1e, 0x45, 0xe3, 0x26, 0x92, 0x84, 0x66, 0x5b,
	0x00, 0xe8, 0x1f, 0xb5, 0x5d, 0x4e, 0xfd, 0x46, 0x71, 0xd8, 0xcc, 0xdd, 0xbb, 0xce, 0x27, 0xc9,
	0xba, 0x78, 0xea, 0x77, 0xb9, 0xb5, 0x32, 0x45, 0xde, 0x82, 0xdc, 0x76, 0x68, 0xea, 0x29, 0xf3,
	0x43, 0xec, 0xf7, 0xf9, 0x46, 0x8f, 0x59, 0x8c, 0xfd, 0x39, 0x4d, 0xbc, 0x0e, 0xb9, 0x72, 0x1c,
	0x29, 0x0b, 0xab, 0xbb, 0x6b, 0x89, 0x70, 0xb9, 0xdd, 0xe8, 0xb6, 0x9f, 0x1e, 0x57, 0x5d, 0xf9,
	0x7d, 0xea, 0xff, 0x94, 0x9c, 0x9d, 0x85, 0x38, 0x9a, 0x13, 0x80, 0x0f, 0xdf, 0x83, 0x7b, 0xfa,
	0xea, 0x4a, 0x51, 0xcf, 0x5a, 0x87, 0xa2, 0x5b, 0x6d, 0x0b, 0x4b, 0xdd, 0x76, 0xb3, 0xe3, 0xd6,
	0x5a, 0xed, 0xa2, 0x61, 0xdd, 0x87, 0x7b, 0x09, 0xf7, 0xa4, 0x5a, 0xfb, 0xb8, 0xd6, 0x28, 0x66,
	0x1e, 0xbe, 0x9f, 0xa4, 0x54, 0xdc, 0x26, 0xac, 0x2b, 0x66, 0x1b, 0x40, 0xbe, 0xd9, 0xea, 0xd6,
	0x9a, 0xad, 0xa2, 0x61, 0xad, 0x02, 0x34, 0x5b, 0xdd, 0x52, 0x63, 0xcf, 0x6d, 0xd6, 0xf6, 0x8a,
	0x19, 0xf5, 0xed, 0xa4, 0x5a, 0x2e, 0x9a, 0x0f, 0x43, 0xd8, 0xb8, 0x7a, 0x6f, 0xb6, 0x56, 0x60,
	0xe9, 0xa0, 0xd9, 0xd8, 0x6f, 0x97, 0x9a, 0x45, 0xc3, 0xba, 0x03, 0xcb, 0x1f, 0x94, 0x1a, 0xfb,
	0x87, 0x9d, 0x52, 0x4d, 0x2a, 0x38, 0xa8, 0xd6, 0xf8, 0x17, 0x93, 0x9f, 0xeb, 0xd5, 0xda, 0x41,
	0xa7, 0x54, 0xcc, 0x72, 0x29, 0xb7, 0xba, 0xf7, 0x61, 0xf3, 0xb0, 0xea, 0x16, 0x73, 0xd6, 0x1a,
	0xdc, 0x2d, 0x1f, 0x95, 0x2a, 0x87, 0xe5, 0xda, 0xbe, 0x64, 0xe5, 0x8f, 0xff, 0xf3, 0x57, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xf5, 0xb2, 0x85, 0x3a, 0x81, 0x18, 0x00, 0x00,
}
