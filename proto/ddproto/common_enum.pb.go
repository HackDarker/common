// Code generated by protoc-gen-go. DO NOT EDIT.
// source: common_enum.proto

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 游戏的id
type CommonEnumGame int32

const (
	CommonEnumGame_GID_SRC                    CommonEnumGame = 0
	CommonEnumGame_GID_TEXAS                  CommonEnumGame = 1
	CommonEnumGame_GID_MAHJONG                CommonEnumGame = 2
	CommonEnumGame_GID_DDZ                    CommonEnumGame = 3
	CommonEnumGame_GID_ZJH                    CommonEnumGame = 4
	CommonEnumGame_GID_HALL                   CommonEnumGame = 5
	CommonEnumGame_GID_PDK                    CommonEnumGame = 7
	CommonEnumGame_GID_ZXZ                    CommonEnumGame = 8
	CommonEnumGame_GID_MJBAISHAN              CommonEnumGame = 9
	CommonEnumGame_GID_MJCHANGCHUN            CommonEnumGame = 10
	CommonEnumGame_GID_NIUNIUJINGDIAN         CommonEnumGame = 11
	CommonEnumGame_GID_BANTUOZI               CommonEnumGame = 12
	CommonEnumGame_GID_DOUDIZHUERREN          CommonEnumGame = 13
	CommonEnumGame_GIDDOUDIZHUJINGDIANDONGBEI CommonEnumGame = 14
	CommonEnumGame_GID_TIANDAKENG             CommonEnumGame = 15
	CommonEnumGame_GID_MJ_SONGJIANGHE         CommonEnumGame = 16
	CommonEnumGame_GID_BAIRENNIUNIU           CommonEnumGame = 17
	CommonEnumGame_GID_ZHIZUNWUZHANG          CommonEnumGame = 18
	CommonEnumGame_GID_MJ_YIBIN               CommonEnumGame = 19
	CommonEnumGame_GID_MJ_PENGZHOU            CommonEnumGame = 20
	CommonEnumGame_GID_SANDAYI                CommonEnumGame = 21
	CommonEnumGame_GID_ZHUANZHUAN             CommonEnumGame = 22
	CommonEnumGame_GID_PAOHUZI                CommonEnumGame = 23
	CommonEnumGame_GID_MJ_HAINAN              CommonEnumGame = 24
)

var CommonEnumGame_name = map[int32]string{
	0:  "GID_SRC",
	1:  "GID_TEXAS",
	2:  "GID_MAHJONG",
	3:  "GID_DDZ",
	4:  "GID_ZJH",
	5:  "GID_HALL",
	7:  "GID_PDK",
	8:  "GID_ZXZ",
	9:  "GID_MJBAISHAN",
	10: "GID_MJCHANGCHUN",
	11: "GID_NIUNIUJINGDIAN",
	12: "GID_BANTUOZI",
	13: "GID_DOUDIZHUERREN",
	14: "GIDDOUDIZHUJINGDIANDONGBEI",
	15: "GID_TIANDAKENG",
	16: "GID_MJ_SONGJIANGHE",
	17: "GID_BAIRENNIUNIU",
	18: "GID_ZHIZUNWUZHANG",
	19: "GID_MJ_YIBIN",
	20: "GID_MJ_PENGZHOU",
	21: "GID_SANDAYI",
	22: "GID_ZHUANZHUAN",
	23: "GID_PAOHUZI",
	24: "GID_MJ_HAINAN",
}
var CommonEnumGame_value = map[string]int32{
	"GID_SRC":                    0,
	"GID_TEXAS":                  1,
	"GID_MAHJONG":                2,
	"GID_DDZ":                    3,
	"GID_ZJH":                    4,
	"GID_HALL":                   5,
	"GID_PDK":                    7,
	"GID_ZXZ":                    8,
	"GID_MJBAISHAN":              9,
	"GID_MJCHANGCHUN":            10,
	"GID_NIUNIUJINGDIAN":         11,
	"GID_BANTUOZI":               12,
	"GID_DOUDIZHUERREN":          13,
	"GIDDOUDIZHUJINGDIANDONGBEI": 14,
	"GID_TIANDAKENG":             15,
	"GID_MJ_SONGJIANGHE":         16,
	"GID_BAIRENNIUNIU":           17,
	"GID_ZHIZUNWUZHANG":          18,
	"GID_MJ_YIBIN":               19,
	"GID_MJ_PENGZHOU":            20,
	"GID_SANDAYI":                21,
	"GID_ZHUANZHUAN":             22,
	"GID_PAOHUZI":                23,
	"GID_MJ_HAINAN":              24,
}

func (x CommonEnumGame) Enum() *CommonEnumGame {
	p := new(CommonEnumGame)
	*p = x
	return p
}
func (x CommonEnumGame) String() string {
	return proto.EnumName(CommonEnumGame_name, int32(x))
}
func (x *CommonEnumGame) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommonEnumGame_value, data, "CommonEnumGame")
	if err != nil {
		return err
	}
	*x = CommonEnumGame(value)
	return nil
}
func (CommonEnumGame) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{0} }

// 房间的类型
type COMMON_ENUM_ROOMTYPE int32

const (
	COMMON_ENUM_ROOMTYPE_DESK_FRIEND COMMON_ENUM_ROOMTYPE = 1
	COMMON_ENUM_ROOMTYPE_DESK_COIN   COMMON_ENUM_ROOMTYPE = 2
)

var COMMON_ENUM_ROOMTYPE_name = map[int32]string{
	1: "DESK_FRIEND",
	2: "DESK_COIN",
}
var COMMON_ENUM_ROOMTYPE_value = map[string]int32{
	"DESK_FRIEND": 1,
	"DESK_COIN":   2,
}

func (x COMMON_ENUM_ROOMTYPE) Enum() *COMMON_ENUM_ROOMTYPE {
	p := new(COMMON_ENUM_ROOMTYPE)
	*p = x
	return p
}
func (x COMMON_ENUM_ROOMTYPE) String() string {
	return proto.EnumName(COMMON_ENUM_ROOMTYPE_name, int32(x))
}
func (x *COMMON_ENUM_ROOMTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(COMMON_ENUM_ROOMTYPE_value, data, "COMMON_ENUM_ROOMTYPE")
	if err != nil {
		return err
	}
	*x = COMMON_ENUM_ROOMTYPE(value)
	return nil
}
func (COMMON_ENUM_ROOMTYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{1} }

// 游戏的状态
type COMMON_ENUM_GAMESTATUS int32

const (
	COMMON_ENUM_GAMESTATUS_NOGAME COMMON_ENUM_GAMESTATUS = 1
	COMMON_ENUM_GAMESTATUS_GAMING COMMON_ENUM_GAMESTATUS = 2
)

var COMMON_ENUM_GAMESTATUS_name = map[int32]string{
	1: "NOGAME",
	2: "GAMING",
}
var COMMON_ENUM_GAMESTATUS_value = map[string]int32{
	"NOGAME": 1,
	"GAMING": 2,
}

func (x COMMON_ENUM_GAMESTATUS) Enum() *COMMON_ENUM_GAMESTATUS {
	p := new(COMMON_ENUM_GAMESTATUS)
	*p = x
	return p
}
func (x COMMON_ENUM_GAMESTATUS) String() string {
	return proto.EnumName(COMMON_ENUM_GAMESTATUS_name, int32(x))
}
func (x *COMMON_ENUM_GAMESTATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(COMMON_ENUM_GAMESTATUS_value, data, "COMMON_ENUM_GAMESTATUS")
	if err != nil {
		return err
	}
	*x = COMMON_ENUM_GAMESTATUS(value)
	return nil
}
func (COMMON_ENUM_GAMESTATUS) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{2} }

// 发布版本
type COMMON_ENUM_RELEASETAG int32

const (
	COMMON_ENUM_RELEASETAG_R_PRO          COMMON_ENUM_RELEASETAG = 1
	COMMON_ENUM_RELEASETAG_R_APPLE_VERIFY COMMON_ENUM_RELEASETAG = 2
)

var COMMON_ENUM_RELEASETAG_name = map[int32]string{
	1: "R_PRO",
	2: "R_APPLE_VERIFY",
}
var COMMON_ENUM_RELEASETAG_value = map[string]int32{
	"R_PRO":          1,
	"R_APPLE_VERIFY": 2,
}

func (x COMMON_ENUM_RELEASETAG) Enum() *COMMON_ENUM_RELEASETAG {
	p := new(COMMON_ENUM_RELEASETAG)
	*p = x
	return p
}
func (x COMMON_ENUM_RELEASETAG) String() string {
	return proto.EnumName(COMMON_ENUM_RELEASETAG_name, int32(x))
}
func (x *COMMON_ENUM_RELEASETAG) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(COMMON_ENUM_RELEASETAG_value, data, "COMMON_ENUM_RELEASETAG")
	if err != nil {
		return err
	}
	*x = COMMON_ENUM_RELEASETAG(value)
	return nil
}
func (COMMON_ENUM_RELEASETAG) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{3} }

// 踢人的踢出类型
type COMMON_ENUM_KICKOUT int32

const (
	COMMON_ENUM_KICKOUT_K_COINUNMATCHED              COMMON_ENUM_KICKOUT = 1
	COMMON_ENUM_KICKOUT_K_SYSTEM                     COMMON_ENUM_KICKOUT = 2
	COMMON_ENUM_KICKOUT_K_OFFLINE                    COMMON_ENUM_KICKOUT = 3
	COMMON_ENUM_KICKOUT_K_GAME_BLOCKED               COMMON_ENUM_KICKOUT = 4
	COMMON_ENUM_KICKOUT_K_TIMEOUT_NOTREADY_LOTTERY   COMMON_ENUM_KICKOUT = 5
	COMMON_ENUM_KICKOUT_K_TIMEOUT_NOTREADY_ENTERDESK COMMON_ENUM_KICKOUT = 6
	COMMON_ENUM_KICKOUT_K_OWNER                      COMMON_ENUM_KICKOUT = 7
)

var COMMON_ENUM_KICKOUT_name = map[int32]string{
	1: "K_COINUNMATCHED",
	2: "K_SYSTEM",
	3: "K_OFFLINE",
	4: "K_GAME_BLOCKED",
	5: "K_TIMEOUT_NOTREADY_LOTTERY",
	6: "K_TIMEOUT_NOTREADY_ENTERDESK",
	7: "K_OWNER",
}
var COMMON_ENUM_KICKOUT_value = map[string]int32{
	"K_COINUNMATCHED":              1,
	"K_SYSTEM":                     2,
	"K_OFFLINE":                    3,
	"K_GAME_BLOCKED":               4,
	"K_TIMEOUT_NOTREADY_LOTTERY":   5,
	"K_TIMEOUT_NOTREADY_ENTERDESK": 6,
	"K_OWNER":                      7,
}

func (x COMMON_ENUM_KICKOUT) Enum() *COMMON_ENUM_KICKOUT {
	p := new(COMMON_ENUM_KICKOUT)
	*p = x
	return p
}
func (x COMMON_ENUM_KICKOUT) String() string {
	return proto.EnumName(COMMON_ENUM_KICKOUT_name, int32(x))
}
func (x *COMMON_ENUM_KICKOUT) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(COMMON_ENUM_KICKOUT_value, data, "COMMON_ENUM_KICKOUT")
	if err != nil {
		return err
	}
	*x = COMMON_ENUM_KICKOUT(value)
	return nil
}
func (COMMON_ENUM_KICKOUT) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{4} }

// 玩家申请解散房间的操作类型
type COMMON_ENUM_APPLYDISSOLVE int32

const (
	COMMON_ENUM_APPLYDISSOLVE_AD_AGREE  COMMON_ENUM_APPLYDISSOLVE = 1
	COMMON_ENUM_APPLYDISSOLVE_AD_REFUSE COMMON_ENUM_APPLYDISSOLVE = 2
	COMMON_ENUM_APPLYDISSOLVE_AD_NOACT  COMMON_ENUM_APPLYDISSOLVE = 3
)

var COMMON_ENUM_APPLYDISSOLVE_name = map[int32]string{
	1: "AD_AGREE",
	2: "AD_REFUSE",
	3: "AD_NOACT",
}
var COMMON_ENUM_APPLYDISSOLVE_value = map[string]int32{
	"AD_AGREE":  1,
	"AD_REFUSE": 2,
	"AD_NOACT":  3,
}

func (x COMMON_ENUM_APPLYDISSOLVE) Enum() *COMMON_ENUM_APPLYDISSOLVE {
	p := new(COMMON_ENUM_APPLYDISSOLVE)
	*p = x
	return p
}
func (x COMMON_ENUM_APPLYDISSOLVE) String() string {
	return proto.EnumName(COMMON_ENUM_APPLYDISSOLVE_name, int32(x))
}
func (x *COMMON_ENUM_APPLYDISSOLVE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(COMMON_ENUM_APPLYDISSOLVE_value, data, "COMMON_ENUM_APPLYDISSOLVE")
	if err != nil {
		return err
	}
	*x = COMMON_ENUM_APPLYDISSOLVE(value)
	return nil
}
func (COMMON_ENUM_APPLYDISSOLVE) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{5} }

// 按钮的类型
type BTN_TYPE int32

const (
	BTN_TYPE_BTNTYPE_NEWUSERBUTTON     BTN_TYPE = 1
	BTN_TYPE_BTNTYPE_SHARELINKTIMELINE BTN_TYPE = 2
	BTN_TYPE_REDBAGSHAR                BTN_TYPE = 3
)

var BTN_TYPE_name = map[int32]string{
	1: "BTNTYPE_NEWUSERBUTTON",
	2: "BTNTYPE_SHARELINKTIMELINE",
	3: "REDBAGSHAR",
}
var BTN_TYPE_value = map[string]int32{
	"BTNTYPE_NEWUSERBUTTON":     1,
	"BTNTYPE_SHARELINKTIMELINE": 2,
	"REDBAGSHAR":                3,
}

func (x BTN_TYPE) Enum() *BTN_TYPE {
	p := new(BTN_TYPE)
	*p = x
	return p
}
func (x BTN_TYPE) String() string {
	return proto.EnumName(BTN_TYPE_name, int32(x))
}
func (x *BTN_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(BTN_TYPE_value, data, "BTN_TYPE")
	if err != nil {
		return err
	}
	*x = BTN_TYPE(value)
	return nil
}
func (BTN_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor6, []int{6} }

// 进入金币场房间的错误类型
type COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM int32

const (
	COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_ERROR_EC_COIN_UNDER_MIN       COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM = -100
	COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_ERROR_EC_COIN_OVER_LIMIT      COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM = -102
	COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_ERROR_EC_COIN_UNDER_LIMIT     COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM = -103
	COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_ERROR_EC_OTHER_LV_DESK_GAMING COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM = -104
	COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_ERROR_EC_NONE_DESK_AVAILABLE  COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM = -105
	COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_ERROR_EC_OTHER                COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM = -106
)

var COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_name = map[int32]string{
	-100: "ERROR_EC_COIN_UNDER_MIN",
	-102: "ERROR_EC_COIN_OVER_LIMIT",
	-103: "ERROR_EC_COIN_UNDER_LIMIT",
	-104: "ERROR_EC_OTHER_LV_DESK_GAMING",
	-105: "ERROR_EC_NONE_DESK_AVAILABLE",
	-106: "ERROR_EC_OTHER",
}
var COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_value = map[string]int32{
	"ERROR_EC_COIN_UNDER_MIN":       -100,
	"ERROR_EC_COIN_OVER_LIMIT":      -102,
	"ERROR_EC_COIN_UNDER_LIMIT":     -103,
	"ERROR_EC_OTHER_LV_DESK_GAMING": -104,
	"ERROR_EC_NONE_DESK_AVAILABLE":  -105,
	"ERROR_EC_OTHER":                -106,
}

func (x COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM) Enum() *COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM {
	p := new(COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM)
	*p = x
	return p
}
func (x COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM) String() string {
	return proto.EnumName(COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_name, int32(x))
}
func (x *COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_value, data, "COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM")
	if err != nil {
		return err
	}
	*x = COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM(value)
	return nil
}
func (COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor6, []int{7}
}

func init() {
	proto.RegisterEnum("ddproto.CommonEnumGame", CommonEnumGame_name, CommonEnumGame_value)
	proto.RegisterEnum("ddproto.COMMON_ENUM_ROOMTYPE", COMMON_ENUM_ROOMTYPE_name, COMMON_ENUM_ROOMTYPE_value)
	proto.RegisterEnum("ddproto.COMMON_ENUM_GAMESTATUS", COMMON_ENUM_GAMESTATUS_name, COMMON_ENUM_GAMESTATUS_value)
	proto.RegisterEnum("ddproto.COMMON_ENUM_RELEASETAG", COMMON_ENUM_RELEASETAG_name, COMMON_ENUM_RELEASETAG_value)
	proto.RegisterEnum("ddproto.COMMON_ENUM_KICKOUT", COMMON_ENUM_KICKOUT_name, COMMON_ENUM_KICKOUT_value)
	proto.RegisterEnum("ddproto.COMMON_ENUM_APPLYDISSOLVE", COMMON_ENUM_APPLYDISSOLVE_name, COMMON_ENUM_APPLYDISSOLVE_value)
	proto.RegisterEnum("ddproto.BTN_TYPE", BTN_TYPE_name, BTN_TYPE_value)
	proto.RegisterEnum("ddproto.COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM", COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_name, COMMON_ENUM_ERROR_TYPE_ENTERCOINROOM_value)
}

func init() { proto.RegisterFile("common_enum.proto", fileDescriptor6) }

var fileDescriptor6 = []byte{
	// 734 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x52, 0x4b, 0x6f, 0xe4, 0x44,
	0x10, 0x66, 0x66, 0x36, 0x9b, 0xa4, 0xf2, 0xaa, 0x74, 0x1e, 0xbb, 0x81, 0x5d, 0xc4, 0x61, 0x41,
	0xc2, 0x07, 0xc4, 0x09, 0xce, 0x6d, 0x77, 0x8d, 0xdd, 0x63, 0xbb, 0x7a, 0xd4, 0x8f, 0xc9, 0x8e,
	0x2f, 0x2d, 0xc4, 0xae, 0x38, 0x65, 0x83, 0x10, 0xfc, 0x0e, 0x6e, 0xbc, 0xc4, 0x2f, 0xe0, 0xef,
	0xf0, 0x83, 0x40, 0x6d, 0xc7, 0x33, 0x13, 0x29, 0x3e, 0x58, 0x5d, 0xf5, 0x7d, 0x55, 0xf5, 0xd5,
	0x03, 0xce, 0xbf, 0xbf, 0xbf, 0xbb, 0xbb, 0xff, 0x10, 0xdf, 0x7f, 0xf8, 0xe5, 0xee, 0xab, 0x1f,
	0x7f, 0xba, 0xff, 0xf9, 0x5e, 0xec, 0xbf, 0x7b, 0xd7, 0x3f, 0xb2, 0x7f, 0x67, 0x80, 0x3b, 0x70,
	0xfc, 0xe1, 0xbb, 0xbb, 0xf7, 0xe2, 0x08, 0xf6, 0x4b, 0xad, 0xa2, 0xb3, 0x05, 0x7e, 0x24, 0x4e,
	0xe0, 0x30, 0x19, 0x9e, 0xde, 0x4a, 0x87, 0x13, 0x71, 0x06, 0x47, 0xc9, 0x6c, 0x65, 0xb5, 0x30,
	0x5c, 0xe2, 0x74, 0x24, 0x2b, 0xd5, 0xe1, 0x6c, 0x34, 0xba, 0x45, 0x85, 0xcf, 0xc4, 0x31, 0x1c,
	0x24, 0xa3, 0x92, 0x4d, 0x83, 0x7b, 0x23, 0xb4, 0x54, 0x35, 0xee, 0x6f, 0x78, 0x6f, 0x3b, 0x3c,
	0x10, 0xe7, 0x70, 0xd2, 0xa7, 0x5c, 0xe4, 0x52, 0xbb, 0x4a, 0x32, 0x1e, 0x8a, 0x0b, 0x38, 0x1b,
	0x5c, 0x45, 0x25, 0xb9, 0x2c, 0xaa, 0xc0, 0x08, 0xe2, 0x1a, 0x44, 0x72, 0xb2, 0x0e, 0xac, 0xc3,
	0x42, 0x73, 0xa9, 0xb4, 0x64, 0x3c, 0x12, 0x08, 0xc7, 0xc9, 0x9f, 0x4b, 0xf6, 0xc1, 0x74, 0x1a,
	0x8f, 0xc5, 0x15, 0x9c, 0xf7, 0x9a, 0x4c, 0x50, 0xba, 0xab, 0x02, 0x59, 0x4b, 0x8c, 0x27, 0xe2,
	0x53, 0xf8, 0xb8, 0xd4, 0x6a, 0xf4, 0x8e, 0x19, 0x94, 0xe1, 0x32, 0x27, 0x8d, 0xa7, 0x42, 0xc0,
	0x69, 0xdf, 0x6a, 0x72, 0xca, 0x9a, 0xb8, 0xc4, 0xb3, 0xb1, 0x68, 0xbb, 0x88, 0xce, 0x70, 0xb9,
	0xd0, 0x92, 0xcb, 0x8a, 0x10, 0xc5, 0x25, 0xe0, 0x50, 0x54, 0x5b, 0xe2, 0x41, 0x12, 0x9e, 0x8f,
	0x85, 0xbb, 0x4a, 0x77, 0x81, 0x6f, 0x43, 0x97, 0xd4, 0xa3, 0x18, 0x15, 0xb6, 0x8b, 0xb8, 0xd6,
	0xb9, 0x66, 0xbc, 0xd8, 0x36, 0x18, 0x97, 0xc4, 0x65, 0x57, 0x99, 0x80, 0x97, 0xe3, 0x6c, 0x5d,
	0x2a, 0xbf, 0xd6, 0x78, 0x35, 0x0a, 0xea, 0xaa, 0x20, 0xb9, 0xff, 0xe1, 0xf5, 0x48, 0x5a, 0x4a,
	0x53, 0x85, 0x4e, 0xe3, 0x8b, 0xed, 0xf8, 0x62, 0x25, 0x35, 0x4b, 0xc6, 0x97, 0xd9, 0x37, 0x70,
	0x59, 0x98, 0xb6, 0x35, 0x1c, 0x89, 0x43, 0x1b, 0xad, 0x31, 0xad, 0x5f, 0x2f, 0x29, 0xc5, 0x2a,
	0x72, 0x75, 0x9c, 0x5b, 0x4d, 0xac, 0x70, 0x92, 0x96, 0xdb, 0x3b, 0x0a, 0xa3, 0x19, 0xa7, 0xd9,
	0xd7, 0x70, 0xbd, 0x1b, 0x57, 0xca, 0x96, 0x9c, 0x97, 0x3e, 0x38, 0x01, 0xf0, 0x9c, 0x4d, 0xb2,
	0x71, 0x92, 0xde, 0xa5, 0x6c, 0x75, 0xda, 0x7e, 0xf6, 0xed, 0xe3, 0x08, 0x4b, 0x0d, 0x49, 0x47,
	0x5e, 0x96, 0xe2, 0x10, 0xf6, 0x6c, 0x5c, 0x5a, 0x83, 0x93, 0xd4, 0x86, 0x8d, 0x72, 0xb9, 0x6c,
	0x28, 0xae, 0xc8, 0xea, 0xf9, 0x1a, 0xa7, 0xd9, 0x3f, 0x13, 0xb8, 0xd8, 0x8d, 0xac, 0x75, 0x51,
	0x9b, 0xe0, 0xd3, 0x60, 0x06, 0x39, 0x81, 0x5b, 0xe9, 0x8b, 0x8a, 0x92, 0xcc, 0x63, 0x38, 0xa8,
	0xa3, 0x5b, 0x3b, 0x4f, 0x2d, 0x4e, 0x93, 0xe8, 0x3a, 0x9a, 0xf9, 0xbc, 0xd1, 0x4c, 0x38, 0x4b,
	0xd9, 0xeb, 0x5e, 0x6a, 0xcc, 0x1b, 0x53, 0xd4, 0xa4, 0xf0, 0x59, 0xda, 0x74, 0x1d, 0xbd, 0x6e,
	0xc9, 0x04, 0x1f, 0xd9, 0x78, 0x4b, 0x52, 0xad, 0x63, 0x63, 0xbc, 0x27, 0xbb, 0xc6, 0x3d, 0xf1,
	0x19, 0xbc, 0x7a, 0x02, 0x27, 0xf6, 0x64, 0xd3, 0x3c, 0xf0, 0x79, 0xba, 0xd0, 0x3a, 0x9a, 0x5b,
	0x26, 0x8b, 0xfb, 0xd9, 0x1c, 0x6e, 0x76, 0xb5, 0xa6, 0x56, 0xd6, 0x4a, 0x3b, 0x67, 0x9a, 0x15,
	0x25, 0x71, 0x52, 0x45, 0x59, 0x5a, 0xa2, 0x61, 0xa2, 0x52, 0x45, 0x4b, 0xf3, 0xe0, 0x08, 0xa7,
	0x0f, 0x20, 0x1b, 0x59, 0x78, 0x9c, 0x65, 0x1e, 0x0e, 0x72, 0xcf, 0xb1, 0xdf, 0xc5, 0x0d, 0x5c,
	0xe5, 0x9e, 0xd3, 0x33, 0x32, 0xdd, 0x06, 0x47, 0x36, 0x0f, 0xde, 0x1b, 0xc6, 0x89, 0x78, 0x0d,
	0x37, 0x23, 0xe4, 0x2a, 0x69, 0xa9, 0xd1, 0x5c, 0x27, 0xb1, 0x7d, 0xc3, 0x53, 0x71, 0x0a, 0x60,
	0x49, 0xe5, 0xb2, 0x4c, 0x20, 0xce, 0xb2, 0x5f, 0xa7, 0xf0, 0x66, 0x57, 0x1e, 0x59, 0x6b, 0x6c,
	0x5f, 0x64, 0xe8, 0x28, 0x4d, 0x33, 0x9d, 0x80, 0x78, 0x03, 0x2f, 0x06, 0x8c, 0x8a, 0x7e, 0xc4,
	0x31, 0xb0, 0x22, 0x1b, 0x5b, 0xcd, 0xf8, 0xf7, 0x7f, 0x0f, 0xdf, 0x44, 0x7c, 0x0e, 0x2f, 0x1f,
	0xb3, 0xcc, 0x8a, 0x6c, 0x6c, 0x74, 0xab, 0x3d, 0xfe, 0xb5, 0xa5, 0x7d, 0x01, 0x37, 0x4f, 0x25,
	0x1b, 0x78, 0x7f, 0x6e, 0x79, 0x19, 0xbc, 0xde, 0xf0, 0x8c, 0xaf, 0x12, 0x65, 0x15, 0xfb, 0xa3,
	0x7b, 0x38, 0xa2, 0x3f, 0xb6, 0xdc, 0x2f, 0xe1, 0xd5, 0x86, 0xcb, 0x86, 0x69, 0xe0, 0xc9, 0x95,
	0xd4, 0x8d, 0xcc, 0x1b, 0xc2, 0xdf, 0xb7, 0xd4, 0x4f, 0xe0, 0xf4, 0x71, 0x5a, 0xfc, 0x6d, 0x03,
	0xfe, 0x1f, 0x00, 0x00, 0xff, 0xff, 0x09, 0xf1, 0xe3, 0x3b, 0xf2, 0x04, 0x00, 0x00,
}
