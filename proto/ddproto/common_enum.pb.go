// Code generated by protoc-gen-go.
// source: common_enum.proto
// DO NOT EDIT!

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 游戏的id
type CommonEnumGame int32

const (
	CommonEnumGame_GID_SRC     CommonEnumGame = 0
	CommonEnumGame_GID_TEXAS   CommonEnumGame = 1
	CommonEnumGame_GID_MAHJONG CommonEnumGame = 2
	CommonEnumGame_GID_DDZ     CommonEnumGame = 3
	CommonEnumGame_GID_ZJH     CommonEnumGame = 4
	CommonEnumGame_GID_HALL    CommonEnumGame = 5
)

var CommonEnumGame_name = map[int32]string{
	0: "GID_SRC",
	1: "GID_TEXAS",
	2: "GID_MAHJONG",
	3: "GID_DDZ",
	4: "GID_ZJH",
	5: "GID_HALL",
}
var CommonEnumGame_value = map[string]int32{
	"GID_SRC":     0,
	"GID_TEXAS":   1,
	"GID_MAHJONG": 2,
	"GID_DDZ":     3,
	"GID_ZJH":     4,
	"GID_HALL":    5,
}

func (x CommonEnumGame) Enum() *CommonEnumGame {
	p := new(CommonEnumGame)
	*p = x
	return p
}
func (x CommonEnumGame) String() string {
	return proto.EnumName(CommonEnumGame_name, int32(x))
}
func (x *CommonEnumGame) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommonEnumGame_value, data, "CommonEnumGame")
	if err != nil {
		return err
	}
	*x = CommonEnumGame(value)
	return nil
}
func (CommonEnumGame) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

// 房间的类型
type COMMON_ENUM_ROOMTYPE int32

const (
	COMMON_ENUM_ROOMTYPE_DESK_FRIEND COMMON_ENUM_ROOMTYPE = 1
	COMMON_ENUM_ROOMTYPE_DESK_COIN   COMMON_ENUM_ROOMTYPE = 2
)

var COMMON_ENUM_ROOMTYPE_name = map[int32]string{
	1: "DESK_FRIEND",
	2: "DESK_COIN",
}
var COMMON_ENUM_ROOMTYPE_value = map[string]int32{
	"DESK_FRIEND": 1,
	"DESK_COIN":   2,
}

func (x COMMON_ENUM_ROOMTYPE) Enum() *COMMON_ENUM_ROOMTYPE {
	p := new(COMMON_ENUM_ROOMTYPE)
	*p = x
	return p
}
func (x COMMON_ENUM_ROOMTYPE) String() string {
	return proto.EnumName(COMMON_ENUM_ROOMTYPE_name, int32(x))
}
func (x *COMMON_ENUM_ROOMTYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(COMMON_ENUM_ROOMTYPE_value, data, "COMMON_ENUM_ROOMTYPE")
	if err != nil {
		return err
	}
	*x = COMMON_ENUM_ROOMTYPE(value)
	return nil
}
func (COMMON_ENUM_ROOMTYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

// 游戏的状态
type COMMON_ENUM_GAMESTATUS int32

const (
	COMMON_ENUM_GAMESTATUS_NOGAME COMMON_ENUM_GAMESTATUS = 1
	COMMON_ENUM_GAMESTATUS_GAMING COMMON_ENUM_GAMESTATUS = 2
)

var COMMON_ENUM_GAMESTATUS_name = map[int32]string{
	1: "NOGAME",
	2: "GAMING",
}
var COMMON_ENUM_GAMESTATUS_value = map[string]int32{
	"NOGAME": 1,
	"GAMING": 2,
}

func (x COMMON_ENUM_GAMESTATUS) Enum() *COMMON_ENUM_GAMESTATUS {
	p := new(COMMON_ENUM_GAMESTATUS)
	*p = x
	return p
}
func (x COMMON_ENUM_GAMESTATUS) String() string {
	return proto.EnumName(COMMON_ENUM_GAMESTATUS_name, int32(x))
}
func (x *COMMON_ENUM_GAMESTATUS) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(COMMON_ENUM_GAMESTATUS_value, data, "COMMON_ENUM_GAMESTATUS")
	if err != nil {
		return err
	}
	*x = COMMON_ENUM_GAMESTATUS(value)
	return nil
}
func (COMMON_ENUM_GAMESTATUS) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func init() {
	proto.RegisterEnum("ddproto.CommonEnumGame", CommonEnumGame_name, CommonEnumGame_value)
	proto.RegisterEnum("ddproto.COMMON_ENUM_ROOMTYPE", COMMON_ENUM_ROOMTYPE_name, COMMON_ENUM_ROOMTYPE_value)
	proto.RegisterEnum("ddproto.COMMON_ENUM_GAMESTATUS", COMMON_ENUM_GAMESTATUS_name, COMMON_ENUM_GAMESTATUS_value)
}

var fileDescriptor3 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0x8e, 0xcd, 0x4e, 0x85, 0x30,
	0x10, 0x85, 0xf5, 0xfa, 0x83, 0x0e, 0x1a, 0xc7, 0xc6, 0xf8, 0x10, 0x2c, 0x8c, 0x2b, 0xf7, 0x0d,
	0xad, 0x50, 0xa4, 0xad, 0xa1, 0x25, 0x51, 0x36, 0x8d, 0x11, 0xc2, 0xaa, 0xd4, 0x18, 0x7d, 0xff,
	0xdb, 0x92, 0x90, 0xb0, 0xfb, 0xbe, 0x76, 0xce, 0x9c, 0x81, 0xfb, 0xef, 0xe0, 0x7d, 0x58, 0xdc,
	0xb4, 0xfc, 0xfb, 0xa7, 0x9f, 0xdf, 0xf0, 0x17, 0x48, 0x36, 0x8e, 0x2b, 0x14, 0x33, 0xe0, 0xee,
	0xd7, 0xcd, 0x5f, 0x7e, 0x22, 0x39, 0x64, 0x95, 0x60, 0xce, 0x74, 0x25, 0x9e, 0x90, 0x5b, 0xb8,
	0x4e, 0x62, 0xf9, 0x07, 0x35, 0x78, 0x4a, 0xee, 0x20, 0x4f, 0x2a, 0x69, 0xdd, 0x68, 0x55, 0xe1,
	0x61, 0x1b, 0x66, 0x6c, 0xc0, 0xb3, 0x4d, 0x86, 0xa6, 0xc6, 0x73, 0x72, 0x03, 0x57, 0x49, 0x6a,
	0xda, 0xb6, 0x78, 0x51, 0xbc, 0xc0, 0x43, 0xa9, 0xa5, 0xd4, 0xca, 0x71, 0xd5, 0x4b, 0xd7, 0x69,
	0x2d, 0xed, 0xe7, 0x3b, 0x4f, 0x0b, 0x19, 0x37, 0x6f, 0xee, 0xb5, 0x13, 0x5c, 0xb1, 0xd8, 0x10,
	0x0b, 0xd7, 0x87, 0x52, 0x0b, 0x85, 0x87, 0xe2, 0x19, 0x1e, 0xf7, 0xb9, 0x8a, 0x4a, 0x6e, 0x2c,
	0xb5, 0xbd, 0x21, 0x00, 0x97, 0x4a, 0x27, 0x8f, 0xa1, 0xc8, 0x91, 0x44, 0xba, 0xe8, 0x18, 0x00,
	0x00, 0xff, 0xff, 0x9e, 0x7f, 0x01, 0x8d, 0xef, 0x00, 0x00, 0x00,
}
