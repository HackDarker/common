// Code generated by protoc-gen-go.
// source: phz_base.proto
// DO NOT EDIT!

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of Heartbeat from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_reg from common_client.proto

// Ignoring public import of common_req_reg_via_input from common_client.proto

// Ignoring public import of common_ack_reg from common_client.proto

// Ignoring public import of common_req_gameLogin from common_client.proto

// Ignoring public import of common_req_gameLogin_via_input from common_client.proto

// Ignoring public import of common_ack_gameLogin from common_client.proto

// Ignoring public import of common_req_qrLogin from common_client.proto

// Ignoring public import of common_ack_qrLogin from common_client.proto

// Ignoring public import of common_req_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_reconnect from common_client.proto

// Ignoring public import of common_req_reconnect from common_client.proto

// Ignoring public import of common_req_gameState from common_client.proto

// Ignoring public import of common_ack_gameState from common_client.proto

// Ignoring public import of common_req_logout from common_client.proto

// Ignoring public import of common_ack_logout from common_client.proto

// Ignoring public import of common_req_feedback from common_client.proto

// Ignoring public import of client_base_poker from common_client.proto

// Ignoring public import of common_req_message from common_client.proto

// Ignoring public import of common_bc_message from common_client.proto

// Ignoring public import of common_req_notice from common_client.proto

// Ignoring public import of common_ack_notice from common_client.proto

// Ignoring public import of common_req_enterAgentMode from common_client.proto

// Ignoring public import of common_ack_enterAgentMode from common_client.proto

// Ignoring public import of common_req_quitAgentMode from common_client.proto

// Ignoring public import of common_ack_quitAgentMode from common_client.proto

// Ignoring public import of common_req_leaveDesk from common_client.proto

// Ignoring public import of common_ack_leaveDesk from common_client.proto

// Ignoring public import of common_req_kickout from common_client.proto

// Ignoring public import of common_bc_kickout from common_client.proto

// Ignoring public import of common_req_allowance from common_client.proto

// Ignoring public import of common_ack_allowance from common_client.proto

// Ignoring public import of common_req_applyDissolve from common_client.proto

// Ignoring public import of common_bc_applyDissolve from common_client.proto

// Ignoring public import of common_req_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_timeout from common_client.proto

// Ignoring public import of common_bc_userBreak from common_client.proto

// Ignoring public import of common_req_clickStatistic from common_client.proto

// Ignoring public import of common_req_offline from common_client.proto

// Ignoring public import of common_req_upload_location from common_client.proto

// Ignoring public import of common_bc_leaveTimeout from common_client.proto

// Ignoring public import of common_desk_by_agent from common_client.proto

// Ignoring public import of common_enum_reg from common_client.proto

// Ignoring public import of common_enum_os_type from common_client.proto

// Ignoring public import of common_enum_pokerColor from common_client.proto

type PhzEnumProtoId int32

const (
	PhzEnumProtoId_PHZ_PID_HEARTBEAT    PhzEnumProtoId = 0
	PhzEnumProtoId_PHZ_PID_CREATEDESK   PhzEnumProtoId = 1
	PhzEnumProtoId_PHZ_PID_ENTERDESK    PhzEnumProtoId = 2
	PhzEnumProtoId_PHZ_PID_DESK_ACK     PhzEnumProtoId = 3
	PhzEnumProtoId_PHZ_PID_GAMEINFO     PhzEnumProtoId = 4
	PhzEnumProtoId_PHZ_PID_GAMEINFO_ACK PhzEnumProtoId = 5
	PhzEnumProtoId_PHZ_PID_READY        PhzEnumProtoId = 6
	PhzEnumProtoId_PHZ_PID_READY_ACK    PhzEnumProtoId = 7
	PhzEnumProtoId_PHZ_PID_OPENING      PhzEnumProtoId = 8
	PhzEnumProtoId_PHZ_PID_SENDCARDS    PhzEnumProtoId = 9
	PhzEnumProtoId_PHZ_PID_OUTCARD      PhzEnumProtoId = 10
	PhzEnumProtoId_PHZ_PID_OUTCARD_ACK  PhzEnumProtoId = 11
)

var PhzEnumProtoId_name = map[int32]string{
	0:  "PHZ_PID_HEARTBEAT",
	1:  "PHZ_PID_CREATEDESK",
	2:  "PHZ_PID_ENTERDESK",
	3:  "PHZ_PID_DESK_ACK",
	4:  "PHZ_PID_GAMEINFO",
	5:  "PHZ_PID_GAMEINFO_ACK",
	6:  "PHZ_PID_READY",
	7:  "PHZ_PID_READY_ACK",
	8:  "PHZ_PID_OPENING",
	9:  "PHZ_PID_SENDCARDS",
	10: "PHZ_PID_OUTCARD",
	11: "PHZ_PID_OUTCARD_ACK",
}
var PhzEnumProtoId_value = map[string]int32{
	"PHZ_PID_HEARTBEAT":    0,
	"PHZ_PID_CREATEDESK":   1,
	"PHZ_PID_ENTERDESK":    2,
	"PHZ_PID_DESK_ACK":     3,
	"PHZ_PID_GAMEINFO":     4,
	"PHZ_PID_GAMEINFO_ACK": 5,
	"PHZ_PID_READY":        6,
	"PHZ_PID_READY_ACK":    7,
	"PHZ_PID_OPENING":      8,
	"PHZ_PID_SENDCARDS":    9,
	"PHZ_PID_OUTCARD":      10,
	"PHZ_PID_OUTCARD_ACK":  11,
}

func (x PhzEnumProtoId) Enum() *PhzEnumProtoId {
	p := new(PhzEnumProtoId)
	*p = x
	return p
}
func (x PhzEnumProtoId) String() string {
	return proto.EnumName(PhzEnumProtoId_name, int32(x))
}
func (x *PhzEnumProtoId) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PhzEnumProtoId_value, data, "PhzEnumProtoId")
	if err != nil {
		return err
	}
	*x = PhzEnumProtoId(value)
	return nil
}
func (PhzEnumProtoId) EnumDescriptor() ([]byte, []int) { return fileDescriptor47, []int{0} }

type PhzEnumRoomType int32

const (
	PhzEnumRoomType_PHZ_ROOMTYPE_FRIEND PhzEnumRoomType = 1
)

var PhzEnumRoomType_name = map[int32]string{
	1: "PHZ_ROOMTYPE_FRIEND",
}
var PhzEnumRoomType_value = map[string]int32{
	"PHZ_ROOMTYPE_FRIEND": 1,
}

func (x PhzEnumRoomType) Enum() *PhzEnumRoomType {
	p := new(PhzEnumRoomType)
	*p = x
	return p
}
func (x PhzEnumRoomType) String() string {
	return proto.EnumName(PhzEnumRoomType_name, int32(x))
}
func (x *PhzEnumRoomType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PhzEnumRoomType_value, data, "PhzEnumRoomType")
	if err != nil {
		return err
	}
	*x = PhzEnumRoomType(value)
	return nil
}
func (PhzEnumRoomType) EnumDescriptor() ([]byte, []int) { return fileDescriptor47, []int{1} }

type PhzBaseCreateOption struct {
	UserCount        *int32           `protobuf:"varint,1,opt,name=userCount" json:"userCount,omitempty"`
	RoomType         *PhzEnumRoomType `protobuf:"varint,2,opt,name=roomType,enum=ddproto.PhzEnumRoomType" json:"roomType,omitempty"`
	BoardsCout       *int32           `protobuf:"varint,3,opt,name=boardsCout" json:"boardsCout,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *PhzBaseCreateOption) Reset()                    { *m = PhzBaseCreateOption{} }
func (m *PhzBaseCreateOption) String() string            { return proto.CompactTextString(m) }
func (*PhzBaseCreateOption) ProtoMessage()               {}
func (*PhzBaseCreateOption) Descriptor() ([]byte, []int) { return fileDescriptor47, []int{0} }

func (m *PhzBaseCreateOption) GetUserCount() int32 {
	if m != nil && m.UserCount != nil {
		return *m.UserCount
	}
	return 0
}

func (m *PhzBaseCreateOption) GetRoomType() PhzEnumRoomType {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return PhzEnumRoomType_PHZ_ROOMTYPE_FRIEND
}

func (m *PhzBaseCreateOption) GetBoardsCout() int32 {
	if m != nil && m.BoardsCout != nil {
		return *m.BoardsCout
	}
	return 0
}

type PhzBaseRoomInfo struct {
	OwnerId          *uint32          `protobuf:"varint,1,opt,name=ownerId" json:"ownerId,omitempty"`
	Password         *string          `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	UserCount        *int32           `protobuf:"varint,3,opt,name=userCount" json:"userCount,omitempty"`
	BoardsCout       *int32           `protobuf:"varint,4,opt,name=boardsCout" json:"boardsCout,omitempty"`
	CurrentRound     *int32           `protobuf:"varint,5,opt,name=currentRound" json:"currentRound,omitempty"`
	RoomType         *PhzEnumRoomType `protobuf:"varint,6,opt,name=roomType,enum=ddproto.PhzEnumRoomType" json:"roomType,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *PhzBaseRoomInfo) Reset()                    { *m = PhzBaseRoomInfo{} }
func (m *PhzBaseRoomInfo) String() string            { return proto.CompactTextString(m) }
func (*PhzBaseRoomInfo) ProtoMessage()               {}
func (*PhzBaseRoomInfo) Descriptor() ([]byte, []int) { return fileDescriptor47, []int{1} }

func (m *PhzBaseRoomInfo) GetOwnerId() uint32 {
	if m != nil && m.OwnerId != nil {
		return *m.OwnerId
	}
	return 0
}

func (m *PhzBaseRoomInfo) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

func (m *PhzBaseRoomInfo) GetUserCount() int32 {
	if m != nil && m.UserCount != nil {
		return *m.UserCount
	}
	return 0
}

func (m *PhzBaseRoomInfo) GetBoardsCout() int32 {
	if m != nil && m.BoardsCout != nil {
		return *m.BoardsCout
	}
	return 0
}

func (m *PhzBaseRoomInfo) GetCurrentRound() int32 {
	if m != nil && m.CurrentRound != nil {
		return *m.CurrentRound
	}
	return 0
}

func (m *PhzBaseRoomInfo) GetRoomType() PhzEnumRoomType {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return PhzEnumRoomType_PHZ_ROOMTYPE_FRIEND
}

type PhzBaseDeskInfo struct {
	RoomInfo         *PhzBaseRoomInfo `protobuf:"bytes,1,opt,name=roomInfo" json:"roomInfo,omitempty"`
	GameStatus       *int32           `protobuf:"varint,2,opt,name=gameStatus" json:"gameStatus,omitempty"`
	RemainPaiCount   *int32           `protobuf:"varint,3,opt,name=remainPaiCount" json:"remainPaiCount,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *PhzBaseDeskInfo) Reset()                    { *m = PhzBaseDeskInfo{} }
func (m *PhzBaseDeskInfo) String() string            { return proto.CompactTextString(m) }
func (*PhzBaseDeskInfo) ProtoMessage()               {}
func (*PhzBaseDeskInfo) Descriptor() ([]byte, []int) { return fileDescriptor47, []int{2} }

func (m *PhzBaseDeskInfo) GetRoomInfo() *PhzBaseRoomInfo {
	if m != nil {
		return m.RoomInfo
	}
	return nil
}

func (m *PhzBaseDeskInfo) GetGameStatus() int32 {
	if m != nil && m.GameStatus != nil {
		return *m.GameStatus
	}
	return 0
}

func (m *PhzBaseDeskInfo) GetRemainPaiCount() int32 {
	if m != nil && m.RemainPaiCount != nil {
		return *m.RemainPaiCount
	}
	return 0
}

type PhzBasePlayerInfo struct {
	UserId           *uint32     `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	IsOwner          *bool       `protobuf:"varint,2,opt,name=isOwner" json:"isOwner,omitempty"`
	IsBanker         *bool       `protobuf:"varint,3,opt,name=isBanker" json:"isBanker,omitempty"`
	IsReady          *bool       `protobuf:"varint,4,opt,name=isReady" json:"isReady,omitempty"`
	IsLeave          *bool       `protobuf:"varint,5,opt,name=isLeave" json:"isLeave,omitempty"`
	WxInfo           *WeixinInfo `protobuf:"bytes,6,opt,name=wxInfo" json:"wxInfo,omitempty"`
	Score            *int64      `protobuf:"varint,7,opt,name=score" json:"score,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *PhzBasePlayerInfo) Reset()                    { *m = PhzBasePlayerInfo{} }
func (m *PhzBasePlayerInfo) String() string            { return proto.CompactTextString(m) }
func (*PhzBasePlayerInfo) ProtoMessage()               {}
func (*PhzBasePlayerInfo) Descriptor() ([]byte, []int) { return fileDescriptor47, []int{3} }

func (m *PhzBasePlayerInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *PhzBasePlayerInfo) GetIsOwner() bool {
	if m != nil && m.IsOwner != nil {
		return *m.IsOwner
	}
	return false
}

func (m *PhzBasePlayerInfo) GetIsBanker() bool {
	if m != nil && m.IsBanker != nil {
		return *m.IsBanker
	}
	return false
}

func (m *PhzBasePlayerInfo) GetIsReady() bool {
	if m != nil && m.IsReady != nil {
		return *m.IsReady
	}
	return false
}

func (m *PhzBasePlayerInfo) GetIsLeave() bool {
	if m != nil && m.IsLeave != nil {
		return *m.IsLeave
	}
	return false
}

func (m *PhzBasePlayerInfo) GetWxInfo() *WeixinInfo {
	if m != nil {
		return m.WxInfo
	}
	return nil
}

func (m *PhzBasePlayerInfo) GetScore() int64 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

func init() {
	proto.RegisterType((*PhzBaseCreateOption)(nil), "ddproto.phz_base_createOption")
	proto.RegisterType((*PhzBaseRoomInfo)(nil), "ddproto.phz_base_roomInfo")
	proto.RegisterType((*PhzBaseDeskInfo)(nil), "ddproto.phz_base_deskInfo")
	proto.RegisterType((*PhzBasePlayerInfo)(nil), "ddproto.phz_base_playerInfo")
	proto.RegisterEnum("ddproto.PhzEnumProtoId", PhzEnumProtoId_name, PhzEnumProtoId_value)
	proto.RegisterEnum("ddproto.PhzEnumRoomType", PhzEnumRoomType_name, PhzEnumRoomType_value)
}

var fileDescriptor47 = []byte{
	// 571 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x52, 0xcd, 0x4e, 0xdb, 0x4c,
	0x14, 0xc5, 0x84, 0xfc, 0x70, 0xf9, 0xe0, 0x33, 0x13, 0xa0, 0x16, 0xaa, 0x2a, 0x94, 0x45, 0x85,
	0x68, 0xc5, 0xa2, 0x8b, 0xee, 0x4d, 0x32, 0x80, 0x45, 0xb1, 0xad, 0x89, 0xab, 0x8a, 0x6e, 0xac,
	0x21, 0x9e, 0xb6, 0x16, 0x78, 0xc6, 0x1a, 0xdb, 0x05, 0xfa, 0x0e, 0x5d, 0xf5, 0x0d, 0xfa, 0x58,
	0xdd, 0xf6, 0x45, 0x2a, 0xdf, 0xc4, 0xae, 0xed, 0x55, 0x77, 0x73, 0xce, 0x3d, 0xf7, 0xef, 0xdc,
	0x81, 0x9d, 0xf4, 0xcb, 0xb7, 0xf0, 0x96, 0x67, 0xe2, 0x34, 0xd5, 0x2a, 0x57, 0x64, 0x18, 0x45,
	0xf8, 0x38, 0x1c, 0x2f, 0x54, 0x92, 0x28, 0x19, 0x2e, 0xee, 0x63, 0x21, 0xf3, 0x65, 0x74, 0xf2,
	0xdd, 0x80, 0xfd, 0x2a, 0x21, 0x5c, 0x68, 0xc1, 0x73, 0xe1, 0xa5, 0x79, 0xac, 0x24, 0x79, 0x0e,
	0x9b, 0x45, 0x26, 0xf4, 0x54, 0x15, 0x32, 0xb7, 0x8c, 0x23, 0xe3, 0xb8, 0xcf, 0xfe, 0x12, 0xe4,
	0x2d, 0x8c, 0xb4, 0x52, 0x49, 0xf0, 0x94, 0x0a, 0x6b, 0xfd, 0xc8, 0x38, 0xde, 0x79, 0x73, 0x78,
	0xba, 0x6a, 0x74, 0x5a, 0xd6, 0x13, 0xb2, 0x48, 0xc2, 0x4a, 0xc1, 0x6a, 0x2d, 0x79, 0x01, 0x70,
	0xab, 0xb8, 0x8e, 0xb2, 0xa9, 0x2a, 0x72, 0xab, 0x87, 0x65, 0x1b, 0xcc, 0xe4, 0xb7, 0x01, 0xbb,
	0xf5, 0x3c, 0x65, 0x96, 0x23, 0x3f, 0x29, 0x62, 0xc1, 0x50, 0x3d, 0x48, 0xa1, 0x9d, 0x08, 0x27,
	0xd9, 0x66, 0x15, 0x24, 0x87, 0x30, 0x4a, 0x79, 0x96, 0x3d, 0x28, 0x1d, 0xe1, 0x1c, 0x9b, 0xac,
	0xc6, 0xed, 0x0d, 0x7a, 0xdd, 0x0d, 0xda, 0x93, 0x6c, 0x74, 0x27, 0x21, 0x13, 0xf8, 0x6f, 0x51,
	0x68, 0x2d, 0x64, 0xce, 0x54, 0x21, 0x23, 0xab, 0x8f, 0x8a, 0x16, 0xd7, 0x72, 0x61, 0xf0, 0xef,
	0x2e, 0x4c, 0x7e, 0x34, 0xb7, 0x8c, 0x44, 0x76, 0x87, 0x5b, 0xae, 0xaa, 0x95, 0x6f, 0x5c, 0x73,
	0xab, 0x53, 0xad, 0xe5, 0x09, 0xab, 0xb5, 0xe5, 0x26, 0x9f, 0x79, 0x22, 0xe6, 0x39, 0xcf, 0x8b,
	0x0c, 0x5d, 0xe8, 0xb3, 0x06, 0x43, 0x5e, 0xc2, 0x8e, 0x16, 0x09, 0x8f, 0xa5, 0xcf, 0xe3, 0xa6,
	0x19, 0x1d, 0x76, 0xf2, 0xcb, 0x80, 0x71, 0xdd, 0x27, 0xbd, 0xe7, 0x4f, 0x42, 0x63, 0xfd, 0x03,
	0x18, 0x94, 0xb6, 0xd5, 0xe6, 0xaf, 0x50, 0x79, 0x95, 0x38, 0xf3, 0xca, 0x43, 0x60, 0xd3, 0x11,
	0xab, 0x60, 0x79, 0x95, 0x38, 0x3b, 0xe3, 0xf2, 0x4e, 0x68, 0xec, 0x35, 0x62, 0x35, 0x5e, 0x66,
	0x31, 0xc1, 0xa3, 0x27, 0x34, 0x1d, 0xb3, 0x10, 0x2e, 0x23, 0xef, 0x04, 0xff, 0x2a, 0xd0, 0x6c,
	0x8c, 0x20, 0x24, 0xaf, 0x60, 0xf0, 0xf0, 0x88, 0xbe, 0x0c, 0xd0, 0x97, 0x71, 0xed, 0xcb, 0x07,
	0x11, 0x3f, 0xc6, 0x12, 0x0d, 0x59, 0x49, 0xc8, 0x1e, 0xf4, 0xb3, 0x85, 0xd2, 0xc2, 0x1a, 0x1e,
	0x19, 0xc7, 0x3d, 0xb6, 0x04, 0x27, 0x3f, 0xd7, 0xc1, 0xac, 0x4f, 0x82, 0xb9, 0x4e, 0x44, 0xf6,
	0x61, 0xd7, 0xbf, 0xfc, 0x18, 0xfa, 0xce, 0x2c, 0xbc, 0xa4, 0x36, 0x0b, 0xce, 0xa8, 0x1d, 0x98,
	0x6b, 0xe4, 0x00, 0x48, 0x45, 0x4f, 0x19, 0xb5, 0x03, 0x3a, 0xa3, 0xf3, 0x2b, 0xd3, 0x68, 0xca,
	0xa9, 0x1b, 0x50, 0x86, 0xf4, 0x3a, 0xd9, 0x03, 0xb3, 0xa2, 0x4b, 0x26, 0xb4, 0xa7, 0x57, 0x66,
	0xaf, 0xc9, 0x5e, 0xd8, 0xd7, 0xd4, 0x71, 0xcf, 0x3d, 0x73, 0x83, 0x58, 0xb0, 0xd7, 0x65, 0x51,
	0xdf, 0x27, 0xbb, 0xb0, 0x5d, 0x45, 0x18, 0xb5, 0x67, 0x37, 0xe6, 0xa0, 0xd9, 0x0f, 0x29, 0x54,
	0x0e, 0xc9, 0x18, 0xfe, 0xaf, 0x68, 0xcf, 0xa7, 0xae, 0xe3, 0x5e, 0x98, 0xa3, 0xa6, 0x76, 0x4e,
	0xdd, 0xd9, 0xd4, 0x66, 0xb3, 0xb9, 0xb9, 0xd9, 0xd2, 0xbe, 0x0f, 0x4a, 0xd6, 0x04, 0xf2, 0x0c,
	0xc6, 0x1d, 0x12, 0x2b, 0x6f, 0x9d, 0xbc, 0x5e, 0x7e, 0xcb, 0xd6, 0xb7, 0xad, 0xd4, 0xcc, 0xf3,
	0xae, 0x83, 0x1b, 0x9f, 0x86, 0xe7, 0xcc, 0xa1, 0xee, 0xcc, 0x34, 0xfc, 0xb5, 0x3f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x57, 0x87, 0xb2, 0xc2, 0x6c, 0x04, 0x00, 0x00,
}
