// Code generated by protoc-gen-go.
// source: common_client_award.proto
// DO NOT EDIT!

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of Heartbeat from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_gameLogin from common_client.proto

// Ignoring public import of common_ack_gameLogin from common_client.proto

// Ignoring public import of common_req_logout from common_client.proto

// Ignoring public import of common_ack_logout from common_client.proto

// Ignoring public import of common_req_feedback from common_client.proto

// Ignoring public import of client_base_poker from common_client.proto

// Ignoring public import of common_req_message from common_client.proto

// Ignoring public import of common_bc_message from common_client.proto

// Ignoring public import of common_req_notice from common_client.proto

// Ignoring public import of common_ack_notice from common_client.proto

// Ignoring public import of common_enum_pokerColor from common_client.proto

// 请求得到在线奖励
type AwardReqOnline struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *AwardReqOnline) Reset()                    { *m = AwardReqOnline{} }
func (m *AwardReqOnline) String() string            { return proto.CompactTextString(m) }
func (*AwardReqOnline) ProtoMessage()               {}
func (*AwardReqOnline) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *AwardReqOnline) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type WardAckOnline struct {
	Coin             *int64 `protobuf:"varint,1,opt,name=coin" json:"coin,omitempty"`
	Duration         *int64 `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	ChangeCoin       *int64 `protobuf:"varint,3,opt,name=changeCoin" json:"changeCoin,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *WardAckOnline) Reset()                    { *m = WardAckOnline{} }
func (m *WardAckOnline) String() string            { return proto.CompactTextString(m) }
func (*WardAckOnline) ProtoMessage()               {}
func (*WardAckOnline) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *WardAckOnline) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

func (m *WardAckOnline) GetDuration() int64 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *WardAckOnline) GetChangeCoin() int64 {
	if m != nil && m.ChangeCoin != nil {
		return *m.ChangeCoin
	}
	return 0
}

// 请求得到红包奖励
type RedbagReq struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *RedbagReq) Reset()                    { *m = RedbagReq{} }
func (m *RedbagReq) String() string            { return proto.CompactTextString(m) }
func (*RedbagReq) ProtoMessage()               {}
func (*RedbagReq) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *RedbagReq) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type RedbagAck struct {
	Cash             *int64 `protobuf:"varint,1,opt,name=cash" json:"cash,omitempty"`
	Duration         *int64 `protobuf:"varint,2,opt,name=duration" json:"duration,omitempty"`
	TotalCash        *int64 `protobuf:"varint,3,opt,name=totalCash" json:"totalCash,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *RedbagAck) Reset()                    { *m = RedbagAck{} }
func (m *RedbagAck) String() string            { return proto.CompactTextString(m) }
func (*RedbagAck) ProtoMessage()               {}
func (*RedbagAck) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{3} }

func (m *RedbagAck) GetCash() int64 {
	if m != nil && m.Cash != nil {
		return *m.Cash
	}
	return 0
}

func (m *RedbagAck) GetDuration() int64 {
	if m != nil && m.Duration != nil {
		return *m.Duration
	}
	return 0
}

func (m *RedbagAck) GetTotalCash() int64 {
	if m != nil && m.TotalCash != nil {
		return *m.TotalCash
	}
	return 0
}

func init() {
	proto.RegisterType((*AwardReqOnline)(nil), "ddproto.award_req_online")
	proto.RegisterType((*WardAckOnline)(nil), "ddproto.ward_ack_online")
	proto.RegisterType((*RedbagReq)(nil), "ddproto.redbag_req")
	proto.RegisterType((*RedbagAck)(nil), "ddproto.redbag_ack")
}

var fileDescriptor1 = []byte{
	// 216 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x94, 0x8e, 0xbb, 0x4b, 0xc7, 0x30,
	0x10, 0xc7, 0xad, 0x15, 0x1f, 0xe7, 0xa0, 0x44, 0x87, 0x5a, 0x44, 0xa4, 0x93, 0x83, 0x74, 0x70,
	0x74, 0x12, 0xba, 0x38, 0x96, 0x8e, 0x2e, 0xe1, 0x4c, 0x42, 0x13, 0xda, 0xe6, 0x34, 0x8d, 0xf8,
	0xef, 0x4b, 0xae, 0xb5, 0xea, 0x22, 0xfc, 0x96, 0x70, 0xf9, 0xbe, 0xf8, 0xc0, 0x95, 0xa2, 0x69,
	0x22, 0x2f, 0xd5, 0xe8, 0x8c, 0x8f, 0x12, 0x3f, 0x31, 0xe8, 0xfa, 0x2d, 0x50, 0x24, 0x71, 0xa4,
	0x35, 0x1f, 0xe5, 0xc5, 0x9f, 0xcc, 0xe2, 0x56, 0x4f, 0x70, 0xce, 0x61, 0x19, 0xcc, 0xbb, 0x24,
	0x3f, 0x3a, 0x6f, 0xc4, 0x3d, 0x1c, 0x5a, 0x83, 0xda, 0x84, 0x22, 0xbb, 0xcd, 0xee, 0x4e, 0x1f,
	0x2e, 0xeb, 0x75, 0xa2, 0x6e, 0xd3, 0xfb, 0xcc, 0x5e, 0xb7, 0x66, 0x2a, 0x84, 0x33, 0x1e, 0x40,
	0x35, 0x7c, 0x0f, 0x08, 0x38, 0x50, 0xe4, 0x3c, 0xd7, 0xf3, 0x8e, 0x6f, 0x51, 0xc2, 0xb1, 0xfe,
	0x08, 0x18, 0x1d, 0xf9, 0x62, 0x9f, 0xf5, 0xed, 0x2f, 0x6e, 0x00, 0x94, 0x45, 0xdf, 0x9b, 0x26,
	0xb5, 0x72, 0x76, 0x7f, 0x29, 0xd5, 0x23, 0x40, 0x30, 0xfa, 0x15, 0xfb, 0x44, 0xb9, 0x23, 0xde,
	0xcb, 0xd6, 0x45, 0x35, 0x30, 0x19, 0xce, 0x76, 0x23, 0xc3, 0xd9, 0xfe, 0x4b, 0x76, 0x0d, 0x27,
	0x91, 0x22, 0x8e, 0x4d, 0x2a, 0x2d, 0x60, 0x3f, 0x42, 0xbb, 0xf7, 0x15, 0x00, 0x00, 0xff, 0xff,
	0xef, 0x42, 0xd6, 0x78, 0x78, 0x01, 0x00, 0x00,
}
