// Code generated by protoc-gen-go. DO NOT EDIT.
// source: group_base.proto

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of Heartbeat from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_reg from common_client.proto

// Ignoring public import of common_req_reg_via_input from common_client.proto

// Ignoring public import of common_ack_reg from common_client.proto

// Ignoring public import of common_req_gameLogin from common_client.proto

// Ignoring public import of common_req_gameLogin_via_input from common_client.proto

// Ignoring public import of common_ack_gameLogin from common_client.proto

// Ignoring public import of common_req_qrLogin from common_client.proto

// Ignoring public import of common_ack_qrLogin from common_client.proto

// Ignoring public import of common_req_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_reconnect from common_client.proto

// Ignoring public import of common_req_reconnect from common_client.proto

// Ignoring public import of common_req_gameState from common_client.proto

// Ignoring public import of common_ack_gameState from common_client.proto

// Ignoring public import of common_req_logout from common_client.proto

// Ignoring public import of common_ack_logout from common_client.proto

// Ignoring public import of common_req_feedback from common_client.proto

// Ignoring public import of client_base_poker from common_client.proto

// Ignoring public import of common_req_message from common_client.proto

// Ignoring public import of common_bc_message from common_client.proto

// Ignoring public import of common_req_notice from common_client.proto

// Ignoring public import of common_ack_notice from common_client.proto

// Ignoring public import of common_req_enterAgentMode from common_client.proto

// Ignoring public import of common_ack_enterAgentMode from common_client.proto

// Ignoring public import of common_req_quitAgentMode from common_client.proto

// Ignoring public import of common_ack_quitAgentMode from common_client.proto

// Ignoring public import of common_req_leaveDesk from common_client.proto

// Ignoring public import of common_ack_leaveDesk from common_client.proto

// Ignoring public import of common_req_kickout from common_client.proto

// Ignoring public import of common_bc_kickout from common_client.proto

// Ignoring public import of common_req_allowance from common_client.proto

// Ignoring public import of common_ack_allowance from common_client.proto

// Ignoring public import of common_req_applyDissolve from common_client.proto

// Ignoring public import of common_bc_applyDissolve from common_client.proto

// Ignoring public import of common_req_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_timeout from common_client.proto

// Ignoring public import of common_bc_userBreak from common_client.proto

// Ignoring public import of common_req_clickStatistic from common_client.proto

// Ignoring public import of common_req_offline from common_client.proto

// Ignoring public import of common_req_upload_location from common_client.proto

// Ignoring public import of common_bc_leaveTimeout from common_client.proto

// Ignoring public import of common_desk_by_agent from common_client.proto

// Ignoring public import of common_req_list_coin_desk from common_client.proto

// Ignoring public import of common_ack_list_coin_desk from common_client.proto

// Ignoring public import of CommonCoinDeskInfo from common_client.proto

// Ignoring public import of common_enum_reg from common_client.proto

// Ignoring public import of common_enum_os_type from common_client.proto

// Ignoring public import of common_enum_pokerColor from common_client.proto

// 消息类型
type GroupMsgType int32

const (
	GroupMsgType_group_msg_type_TXT        GroupMsgType = 1
	GroupMsgType_group_msg_type_MemberIn   GroupMsgType = 2
	GroupMsgType_group_msg_type_MemberOut  GroupMsgType = 3
	GroupMsgType_group_msg_type_CreateDesk GroupMsgType = 4
	GroupMsgType_group_msg_type_SysSuccess GroupMsgType = 5
	GroupMsgType_group_msg_type_SysFail    GroupMsgType = 6
)

var GroupMsgType_name = map[int32]string{
	1: "group_msg_type_TXT",
	2: "group_msg_type_MemberIn",
	3: "group_msg_type_MemberOut",
	4: "group_msg_type_CreateDesk",
	5: "group_msg_type_SysSuccess",
	6: "group_msg_type_SysFail",
}
var GroupMsgType_value = map[string]int32{
	"group_msg_type_TXT":        1,
	"group_msg_type_MemberIn":   2,
	"group_msg_type_MemberOut":  3,
	"group_msg_type_CreateDesk": 4,
	"group_msg_type_SysSuccess": 5,
	"group_msg_type_SysFail":    6,
}

func (x GroupMsgType) Enum() *GroupMsgType {
	p := new(GroupMsgType)
	*p = x
	return p
}
func (x GroupMsgType) String() string {
	return proto.EnumName(GroupMsgType_name, int32(x))
}
func (x *GroupMsgType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GroupMsgType_value, data, "GroupMsgType")
	if err != nil {
		return err
	}
	*x = GroupMsgType(value)
	return nil
}
func (GroupMsgType) EnumDescriptor() ([]byte, []int) { return fileDescriptor26, []int{0} }

// 俱乐部信息
type GroupInfo struct {
	Id               *int32             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Info             *string            `protobuf:"bytes,3,opt,name=info" json:"info,omitempty"`
	Owner            *uint32            `protobuf:"varint,4,opt,name=owner" json:"owner,omitempty"`
	Members          []*GroupMemberInfo `protobuf:"bytes,6,rep,name=members" json:"members,omitempty"`
	GameOpts         []*GameOption      `protobuf:"bytes,7,rep,name=gameOpts" json:"gameOpts,omitempty"`
	SyncId           *int64             `protobuf:"varint,8,opt,name=syncId" json:"syncId,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *GroupInfo) Reset()                    { *m = GroupInfo{} }
func (m *GroupInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()               {}
func (*GroupInfo) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{0} }

func (m *GroupInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GroupInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GroupInfo) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

func (m *GroupInfo) GetOwner() uint32 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

func (m *GroupInfo) GetMembers() []*GroupMemberInfo {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *GroupInfo) GetGameOpts() []*GameOption {
	if m != nil {
		return m.GameOpts
	}
	return nil
}

func (m *GroupInfo) GetSyncId() int64 {
	if m != nil && m.SyncId != nil {
		return *m.SyncId
	}
	return 0
}

// 成员信息
type GroupMemberInfo struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	NickName         *string `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
	Remark           *string `protobuf:"bytes,3,opt,name=remark" json:"remark,omitempty"`
	HeadImg          *string `protobuf:"bytes,4,opt,name=headImg" json:"headImg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GroupMemberInfo) Reset()                    { *m = GroupMemberInfo{} }
func (m *GroupMemberInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupMemberInfo) ProtoMessage()               {}
func (*GroupMemberInfo) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{1} }

func (m *GroupMemberInfo) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *GroupMemberInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *GroupMemberInfo) GetRemark() string {
	if m != nil && m.Remark != nil {
		return *m.Remark
	}
	return ""
}

func (m *GroupMemberInfo) GetHeadImg() string {
	if m != nil && m.HeadImg != nil {
		return *m.HeadImg
	}
	return ""
}

// 游戏配置
type GameOption struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	GameId           *int32  `protobuf:"varint,2,opt,name=gameId" json:"gameId,omitempty"`
	Remark           *string `protobuf:"bytes,3,opt,name=remark" json:"remark,omitempty"`
	Option           *string `protobuf:"bytes,4,opt,name=option" json:"option,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GameOption) Reset()                    { *m = GameOption{} }
func (m *GameOption) String() string            { return proto.CompactTextString(m) }
func (*GameOption) ProtoMessage()               {}
func (*GameOption) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{2} }

func (m *GameOption) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GameOption) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *GameOption) GetRemark() string {
	if m != nil && m.Remark != nil {
		return *m.Remark
	}
	return ""
}

func (m *GameOption) GetOption() string {
	if m != nil && m.Option != nil {
		return *m.Option
	}
	return ""
}

// 群消息结构
type GroupMsgItem struct {
	FromUid          *uint32            `protobuf:"varint,1,opt,name=fromUid" json:"fromUid,omitempty"`
	ToGroup          *int32             `protobuf:"varint,2,opt,name=toGroup" json:"toGroup,omitempty"`
	SendTime         *int64             `protobuf:"varint,3,opt,name=sendTime" json:"sendTime,omitempty"`
	MsgType          *GroupMsgType      `protobuf:"varint,4,opt,name=msgType,enum=ddproto.GroupMsgType" json:"msgType,omitempty"`
	TxtContent       *string            `protobuf:"bytes,5,opt,name=txtContent" json:"txtContent,omitempty"`
	DeskContent      *CommonDeskByAgent `protobuf:"bytes,7,opt,name=deskContent" json:"deskContent,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *GroupMsgItem) Reset()                    { *m = GroupMsgItem{} }
func (m *GroupMsgItem) String() string            { return proto.CompactTextString(m) }
func (*GroupMsgItem) ProtoMessage()               {}
func (*GroupMsgItem) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{3} }

func (m *GroupMsgItem) GetFromUid() uint32 {
	if m != nil && m.FromUid != nil {
		return *m.FromUid
	}
	return 0
}

func (m *GroupMsgItem) GetToGroup() int32 {
	if m != nil && m.ToGroup != nil {
		return *m.ToGroup
	}
	return 0
}

func (m *GroupMsgItem) GetSendTime() int64 {
	if m != nil && m.SendTime != nil {
		return *m.SendTime
	}
	return 0
}

func (m *GroupMsgItem) GetMsgType() GroupMsgType {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return GroupMsgType_group_msg_type_TXT
}

func (m *GroupMsgItem) GetTxtContent() string {
	if m != nil && m.TxtContent != nil {
		return *m.TxtContent
	}
	return ""
}

func (m *GroupMsgItem) GetDeskContent() *CommonDeskByAgent {
	if m != nil {
		return m.DeskContent
	}
	return nil
}

func init() {
	proto.RegisterType((*GroupInfo)(nil), "ddproto.group_info")
	proto.RegisterType((*GroupMemberInfo)(nil), "ddproto.group_member_info")
	proto.RegisterType((*GameOption)(nil), "ddproto.game_option")
	proto.RegisterType((*GroupMsgItem)(nil), "ddproto.group_msg_item")
	proto.RegisterEnum("ddproto.GroupMsgType", GroupMsgType_name, GroupMsgType_value)
}

func init() { proto.RegisterFile("group_base.proto", fileDescriptor26) }

var fileDescriptor26 = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x52, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xc5, 0x71, 0x13, 0xa7, 0x13, 0x35, 0x32, 0x4b, 0x95, 0x2e, 0x81, 0x22, 0x2b, 0x27, 0x8b,
	0x43, 0x04, 0x11, 0x77, 0x0e, 0x45, 0xa0, 0x1c, 0xa0, 0x68, 0x1b, 0x24, 0x6e, 0x96, 0x63, 0x4f,
	0x8d, 0x95, 0xee, 0xae, 0xe5, 0xdd, 0x08, 0xf2, 0x71, 0xfc, 0x08, 0xdf, 0xc1, 0x07, 0xa0, 0x5d,
	0xaf, 0xdd, 0x34, 0x29, 0xb7, 0x79, 0xf3, 0xde, 0xcc, 0x9b, 0x67, 0x2f, 0x84, 0x45, 0x2d, 0xb7,
	0x55, 0xb2, 0x4e, 0x15, 0xce, 0xab, 0x5a, 0x6a, 0x49, 0x82, 0x3c, 0xb7, 0xc5, 0xf4, 0x59, 0x26,
	0x39, 0x97, 0x22, 0xc9, 0xee, 0x4a, 0x14, 0xba, 0x61, 0x67, 0x7f, 0x3c, 0x80, 0x66, 0xa4, 0x14,
	0xb7, 0x92, 0x8c, 0xa1, 0x57, 0xe6, 0xd4, 0x8b, 0xbc, 0xb8, 0xcf, 0x7a, 0x65, 0x4e, 0x08, 0x9c,
	0x88, 0x94, 0x23, 0xed, 0x45, 0x5e, 0x7c, 0xca, 0x6c, 0x6d, 0x7a, 0x46, 0x4b, 0xfd, 0xa6, 0x67,
	0xe7, 0xce, 0xa1, 0x2f, 0x7f, 0x0a, 0xac, 0xe9, 0x49, 0xe4, 0xc5, 0x67, 0xac, 0x01, 0xe4, 0x1d,
	0x04, 0x1c, 0xf9, 0x1a, 0x6b, 0x45, 0x07, 0x91, 0x1f, 0x8f, 0x16, 0xd3, 0xb9, 0x3b, 0x66, 0xde,
	0x78, 0x36, 0xac, 0xb5, 0x66, 0xad, 0x94, 0xbc, 0x81, 0x61, 0x91, 0x72, 0xbc, 0xae, 0xb4, 0xa2,
	0x81, 0x1d, 0x3b, 0xbf, 0x1f, 0x4b, 0x39, 0x26, 0xb2, 0xd2, 0xa5, 0x14, 0xac, 0x53, 0x91, 0x09,
	0x0c, 0xd4, 0x4e, 0x64, 0xcb, 0x9c, 0x0e, 0x23, 0x2f, 0xf6, 0x99, 0x43, 0x33, 0x05, 0x4f, 0x8f,
	0x7c, 0x48, 0x08, 0xfe, 0xd6, 0x65, 0x3c, 0x63, 0xa6, 0x24, 0x53, 0x18, 0x8a, 0x32, 0xdb, 0x7c,
	0xb9, 0x0f, 0xda, 0x61, 0xb3, 0xba, 0x46, 0x9e, 0xd6, 0x1b, 0x17, 0xd7, 0x21, 0x42, 0x21, 0xf8,
	0x81, 0x69, 0xbe, 0xe4, 0x85, 0x8d, 0x7c, 0xca, 0x5a, 0x38, 0x43, 0x18, 0xed, 0x5d, 0x79, 0xf4,
	0x45, 0x27, 0x30, 0x30, 0xf4, 0x32, 0xb7, 0x56, 0x7d, 0xe6, 0xd0, 0x7f, 0x8d, 0x26, 0x30, 0x68,
	0x36, 0x39, 0x1f, 0x87, 0x66, 0x7f, 0x3d, 0x18, 0xbb, 0x70, 0xaa, 0x48, 0x4a, 0x8d, 0xdc, 0xdc,
	0x74, 0x5b, 0x4b, 0xfe, 0xad, 0x4b, 0xd7, 0x42, 0xc3, 0x68, 0xf9, 0xc9, 0xa8, 0x9d, 0x6b, 0x0b,
	0x4d, 0x76, 0x85, 0x22, 0x5f, 0x95, 0x1c, 0xad, 0xb1, 0xcf, 0x3a, 0x4c, 0xde, 0x42, 0xc0, 0x55,
	0xb1, 0xda, 0x55, 0x68, 0xbd, 0xc7, 0x8b, 0x8b, 0xc3, 0xdf, 0xa7, 0x8a, 0x44, 0xef, 0x2a, 0x64,
	0xad, 0x8e, 0xbc, 0x02, 0xd0, 0xbf, 0xf4, 0x95, 0x14, 0x1a, 0x85, 0xa6, 0x7d, 0x7b, 0xf1, 0x5e,
	0x87, 0xbc, 0x87, 0x51, 0x8e, 0x6a, 0xd3, 0x0a, 0x82, 0xc8, 0x8b, 0x47, 0x8b, 0xcb, 0x6e, 0xad,
	0x7b, 0xa1, 0x46, 0x92, 0xac, 0x77, 0x49, 0x5a, 0xa0, 0xd0, 0x6c, 0x7f, 0xe2, 0xf5, 0xef, 0x07,
	0xb1, 0x8d, 0x39, 0x99, 0x00, 0x79, 0xd8, 0x49, 0x56, 0xdf, 0x57, 0xa1, 0x47, 0x5e, 0xc0, 0xc5,
	0x41, 0xff, 0xb3, 0x7d, 0x06, 0x4b, 0x11, 0xf6, 0xc8, 0x4b, 0xa0, 0x8f, 0x92, 0xd7, 0x5b, 0x1d,
	0xfa, 0xe4, 0x12, 0x9e, 0x1f, 0xb0, 0x57, 0x35, 0xa6, 0x1a, 0x3f, 0xa0, 0xda, 0x84, 0x27, 0x8f,
	0xd0, 0x37, 0x3b, 0x75, 0xb3, 0xcd, 0x32, 0x54, 0x2a, 0xec, 0x93, 0x29, 0x4c, 0x8e, 0xe9, 0x8f,
	0x69, 0x79, 0x17, 0x0e, 0xbe, 0x3e, 0xf9, 0x17, 0x00, 0x00, 0xff, 0xff, 0x2f, 0xc7, 0xe6, 0x65,
	0xa2, 0x03, 0x00, 0x00,
}
