// Code generated by protoc-gen-go. DO NOT EDIT.
// source: group_base.proto

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// 俱乐部信息
type GroupInfo struct {
	Id               *int32             `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Info             *string            `protobuf:"bytes,3,opt,name=info" json:"info,omitempty"`
	Owner            *uint32            `protobuf:"varint,4,opt,name=owner" json:"owner,omitempty"`
	Members          []*GroupMemberInfo `protobuf:"bytes,6,rep,name=members" json:"members,omitempty"`
	GameOpts         []*GameOption      `protobuf:"bytes,7,rep,name=gameOpts" json:"gameOpts,omitempty"`
	SyncId           *int64             `protobuf:"varint,8,opt,name=syncId" json:"syncId,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *GroupInfo) Reset()                    { *m = GroupInfo{} }
func (m *GroupInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupInfo) ProtoMessage()               {}
func (*GroupInfo) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{0} }

func (m *GroupInfo) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GroupInfo) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *GroupInfo) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

func (m *GroupInfo) GetOwner() uint32 {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return 0
}

func (m *GroupInfo) GetMembers() []*GroupMemberInfo {
	if m != nil {
		return m.Members
	}
	return nil
}

func (m *GroupInfo) GetGameOpts() []*GameOption {
	if m != nil {
		return m.GameOpts
	}
	return nil
}

func (m *GroupInfo) GetSyncId() int64 {
	if m != nil && m.SyncId != nil {
		return *m.SyncId
	}
	return 0
}

// 成员信息
type GroupMemberInfo struct {
	Uid              *uint32 `protobuf:"varint,1,opt,name=uid" json:"uid,omitempty"`
	NickName         *string `protobuf:"bytes,2,opt,name=nickName" json:"nickName,omitempty"`
	Remark           *string `protobuf:"bytes,3,opt,name=remark" json:"remark,omitempty"`
	HeadImg          *string `protobuf:"bytes,4,opt,name=headImg" json:"headImg,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GroupMemberInfo) Reset()                    { *m = GroupMemberInfo{} }
func (m *GroupMemberInfo) String() string            { return proto.CompactTextString(m) }
func (*GroupMemberInfo) ProtoMessage()               {}
func (*GroupMemberInfo) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{1} }

func (m *GroupMemberInfo) GetUid() uint32 {
	if m != nil && m.Uid != nil {
		return *m.Uid
	}
	return 0
}

func (m *GroupMemberInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *GroupMemberInfo) GetRemark() string {
	if m != nil && m.Remark != nil {
		return *m.Remark
	}
	return ""
}

func (m *GroupMemberInfo) GetHeadImg() string {
	if m != nil && m.HeadImg != nil {
		return *m.HeadImg
	}
	return ""
}

// 游戏配置
type GameOption struct {
	Id               *int32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	GameId           *int32  `protobuf:"varint,2,opt,name=gameId" json:"gameId,omitempty"`
	Remark           *string `protobuf:"bytes,3,opt,name=remark" json:"remark,omitempty"`
	Option           *string `protobuf:"bytes,4,opt,name=option" json:"option,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GameOption) Reset()                    { *m = GameOption{} }
func (m *GameOption) String() string            { return proto.CompactTextString(m) }
func (*GameOption) ProtoMessage()               {}
func (*GameOption) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{2} }

func (m *GameOption) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *GameOption) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *GameOption) GetRemark() string {
	if m != nil && m.Remark != nil {
		return *m.Remark
	}
	return ""
}

func (m *GameOption) GetOption() string {
	if m != nil && m.Option != nil {
		return *m.Option
	}
	return ""
}

// 群消息结构
type GroupMsgItem struct {
	FromUid          *uint32 `protobuf:"varint,1,opt,name=fromUid" json:"fromUid,omitempty"`
	ToGroup          *int32  `protobuf:"varint,2,opt,name=toGroup" json:"toGroup,omitempty"`
	SendTime         *int64  `protobuf:"varint,3,opt,name=sendTime" json:"sendTime,omitempty"`
	MsgType          *int32  `protobuf:"varint,4,opt,name=msgType" json:"msgType,omitempty"`
	TxtContent       *string `protobuf:"bytes,5,opt,name=txtContent" json:"txtContent,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *GroupMsgItem) Reset()                    { *m = GroupMsgItem{} }
func (m *GroupMsgItem) String() string            { return proto.CompactTextString(m) }
func (*GroupMsgItem) ProtoMessage()               {}
func (*GroupMsgItem) Descriptor() ([]byte, []int) { return fileDescriptor26, []int{3} }

func (m *GroupMsgItem) GetFromUid() uint32 {
	if m != nil && m.FromUid != nil {
		return *m.FromUid
	}
	return 0
}

func (m *GroupMsgItem) GetToGroup() int32 {
	if m != nil && m.ToGroup != nil {
		return *m.ToGroup
	}
	return 0
}

func (m *GroupMsgItem) GetSendTime() int64 {
	if m != nil && m.SendTime != nil {
		return *m.SendTime
	}
	return 0
}

func (m *GroupMsgItem) GetMsgType() int32 {
	if m != nil && m.MsgType != nil {
		return *m.MsgType
	}
	return 0
}

func (m *GroupMsgItem) GetTxtContent() string {
	if m != nil && m.TxtContent != nil {
		return *m.TxtContent
	}
	return ""
}

func init() {
	proto.RegisterType((*GroupInfo)(nil), "ddproto.group_info")
	proto.RegisterType((*GroupMemberInfo)(nil), "ddproto.group_member_info")
	proto.RegisterType((*GameOption)(nil), "ddproto.game_option")
	proto.RegisterType((*GroupMsgItem)(nil), "ddproto.group_msg_item")
}

func init() { proto.RegisterFile("group_base.proto", fileDescriptor26) }

var fileDescriptor26 = []byte{
	// 346 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x90, 0xdf, 0x6a, 0xfa, 0x30,
	0x14, 0xc7, 0xa9, 0xb5, 0xad, 0x1e, 0x51, 0xfc, 0x05, 0x91, 0xe0, 0xc5, 0x8f, 0xd2, 0xab, 0x5e,
	0xc9, 0x18, 0x7b, 0x83, 0x5d, 0x0c, 0x6f, 0x36, 0x08, 0xee, 0x5a, 0xaa, 0x39, 0x76, 0x45, 0x92,
	0x94, 0x26, 0xb2, 0xf9, 0x2a, 0x7b, 0xb4, 0x3d, 0xcd, 0x48, 0x9a, 0x56, 0x41, 0x76, 0x97, 0xcf,
	0xf9, 0xd3, 0xcf, 0xf9, 0x16, 0xe6, 0x65, 0xa3, 0xce, 0xf5, 0x6e, 0x5f, 0x68, 0x5c, 0xd7, 0x8d,
	0x32, 0x8a, 0x24, 0x9c, 0xbb, 0x47, 0xf6, 0x13, 0x00, 0xb4, 0xdd, 0x4a, 0x1e, 0x15, 0x99, 0xc1,
	0xa0, 0xe2, 0x34, 0x48, 0x83, 0x3c, 0x62, 0x83, 0x8a, 0x13, 0x02, 0x43, 0x59, 0x08, 0xa4, 0x83,
	0x34, 0xc8, 0xc7, 0xcc, 0xbd, 0x6d, 0xcd, 0xce, 0xd2, 0xb0, 0xad, 0xb9, 0xbd, 0x05, 0x44, 0xea,
	0x53, 0x62, 0x43, 0x87, 0x69, 0x90, 0x4f, 0x59, 0x0b, 0xe4, 0x09, 0x12, 0x81, 0x62, 0x8f, 0x8d,
	0xa6, 0x71, 0x1a, 0xe6, 0x93, 0xc7, 0xd5, 0xda, 0x7b, 0xd7, 0xad, 0xb3, 0xed, 0x3a, 0x35, 0xeb,
	0x46, 0xc9, 0x03, 0x8c, 0xca, 0x42, 0xe0, 0x5b, 0x6d, 0x34, 0x4d, 0xdc, 0xda, 0xe2, 0xba, 0x56,
	0x08, 0xdc, 0xa9, 0xda, 0x54, 0x4a, 0xb2, 0x7e, 0x8a, 0x2c, 0x21, 0xd6, 0x17, 0x79, 0xd8, 0x70,
	0x3a, 0x4a, 0x83, 0x3c, 0x64, 0x9e, 0x32, 0x0d, 0xff, 0xee, 0x3c, 0x64, 0x0e, 0xe1, 0xd9, 0x67,
	0x9c, 0x32, 0xfb, 0x24, 0x2b, 0x18, 0xc9, 0xea, 0x70, 0x7a, 0xbd, 0x06, 0xed, 0xd9, 0x7e, 0xba,
	0x41, 0x51, 0x34, 0x27, 0x1f, 0xd7, 0x13, 0xa1, 0x90, 0x7c, 0x60, 0xc1, 0x37, 0xa2, 0x74, 0x91,
	0xc7, 0xac, 0xc3, 0x0c, 0x61, 0x72, 0x73, 0xe5, 0xdd, 0x1f, 0x5d, 0x42, 0x6c, 0xdb, 0x1b, 0xee,
	0x54, 0x11, 0xf3, 0xf4, 0xa7, 0x68, 0x09, 0x71, 0xfb, 0x25, 0xef, 0xf1, 0x94, 0x7d, 0x07, 0x30,
	0xf3, 0xe1, 0x74, 0xb9, 0xab, 0x0c, 0x0a, 0x7b, 0xd3, 0xb1, 0x51, 0xe2, 0xbd, 0x4f, 0xd7, 0xa1,
	0xed, 0x18, 0xf5, 0x62, 0xa7, 0xbd, 0xb5, 0x43, 0x9b, 0x5d, 0xa3, 0xe4, 0xdb, 0x4a, 0xa0, 0x13,
	0x87, 0xac, 0x67, 0xbb, 0x25, 0x74, 0xb9, 0xbd, 0xd4, 0xe8, 0xdc, 0x11, 0xeb, 0x90, 0xfc, 0x07,
	0x30, 0x5f, 0xe6, 0x59, 0x49, 0x83, 0xd2, 0xd0, 0xc8, 0x1d, 0x76, 0x53, 0xf9, 0x0d, 0x00, 0x00,
	0xff, 0xff, 0xb1, 0xcf, 0x05, 0xee, 0x71, 0x02, 0x00, 0x00,
}
