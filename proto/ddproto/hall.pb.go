// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hall.proto

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of hall_item_event from hall_data.proto

// Ignoring public import of hall_mail_item from hall_data.proto

// Ignoring public import of hall_bag_item from hall_data.proto

// Ignoring public import of hall_item_task from hall_data.proto

// Ignoring public import of hall_userData from hall_data.proto

// Ignoring public import of hall_rank_item from hall_data.proto

// Ignoring public import of CoinZone from hall_data.proto

// Ignoring public import of DiamondZone from hall_data.proto

// Ignoring public import of ExchangeZone from hall_data.proto

// Ignoring public import of BuyZone from hall_data.proto

// Ignoring public import of GoodsItem from hall_data.proto

// Ignoring public import of hall_strongbox_info from hall_data.proto

// Ignoring public import of hall_req_new_room_list from hall_data.proto

// Ignoring public import of hall_ack_new_room_list from hall_data.proto

// Ignoring public import of hall_new_room_List from hall_data.proto

// Ignoring public import of hall_enum_protoId from hall_data.proto

// Ignoring public import of hall_enum_trade_type from hall_data.proto

// Ignoring public import of hall_enum_event from hall_data.proto

// Ignoring public import of hall_enum_Reward from hall_data.proto

// Ignoring public import of hall_enum_mail_type from hall_data.proto

// Ignoring public import of hall_lottery_item_type from hall_data.proto

// Ignoring public import of hall_enum_taskType from hall_data.proto

// Ignoring public import of hall_user_VIP from hall_data.proto

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of Heartbeat from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_reg from common_client.proto

// Ignoring public import of common_req_reg_via_input from common_client.proto

// Ignoring public import of common_ack_reg from common_client.proto

// Ignoring public import of common_req_gameLogin from common_client.proto

// Ignoring public import of common_req_gameLogin_via_input from common_client.proto

// Ignoring public import of common_ack_gameLogin from common_client.proto

// Ignoring public import of common_req_qrLogin from common_client.proto

// Ignoring public import of common_ack_qrLogin from common_client.proto

// Ignoring public import of common_req_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_reconnect from common_client.proto

// Ignoring public import of common_req_reconnect from common_client.proto

// Ignoring public import of common_req_gameState from common_client.proto

// Ignoring public import of common_ack_gameState from common_client.proto

// Ignoring public import of common_req_logout from common_client.proto

// Ignoring public import of common_ack_logout from common_client.proto

// Ignoring public import of common_req_feedback from common_client.proto

// Ignoring public import of client_base_poker from common_client.proto

// Ignoring public import of common_req_message from common_client.proto

// Ignoring public import of common_bc_message from common_client.proto

// Ignoring public import of common_req_notice from common_client.proto

// Ignoring public import of common_ack_notice from common_client.proto

// Ignoring public import of common_req_enterAgentMode from common_client.proto

// Ignoring public import of common_ack_enterAgentMode from common_client.proto

// Ignoring public import of common_req_quitAgentMode from common_client.proto

// Ignoring public import of common_ack_quitAgentMode from common_client.proto

// Ignoring public import of common_req_leaveDesk from common_client.proto

// Ignoring public import of common_ack_leaveDesk from common_client.proto

// Ignoring public import of common_req_kickout from common_client.proto

// Ignoring public import of common_bc_kickout from common_client.proto

// Ignoring public import of common_req_allowance from common_client.proto

// Ignoring public import of common_ack_allowance from common_client.proto

// Ignoring public import of common_req_applyDissolve from common_client.proto

// Ignoring public import of common_bc_applyDissolve from common_client.proto

// Ignoring public import of common_req_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_timeout from common_client.proto

// Ignoring public import of common_bc_userBreak from common_client.proto

// Ignoring public import of common_req_clickStatistic from common_client.proto

// Ignoring public import of common_req_offline from common_client.proto

// Ignoring public import of common_req_upload_location from common_client.proto

// Ignoring public import of common_bc_leaveTimeout from common_client.proto

// Ignoring public import of common_desk_by_agent from common_client.proto

// Ignoring public import of common_req_list_coin_desk from common_client.proto

// Ignoring public import of common_ack_list_coin_desk from common_client.proto

// Ignoring public import of CommonCoinDeskInfo from common_client.proto

// Ignoring public import of common_enum_reg from common_client.proto

// Ignoring public import of common_enum_os_type from common_client.proto

// Ignoring public import of common_enum_pokerColor from common_client.proto

// ======================商城商品列表======================
// 商品列表页面类型
type HallEnumGoodsType int32

const (
	HallEnumGoodsType_TYPE_COIN     HallEnumGoodsType = 1
	HallEnumGoodsType_TYPE_DIAMOND  HallEnumGoodsType = 2
	HallEnumGoodsType_TYPE_EXCHANGE HallEnumGoodsType = 3
	HallEnumGoodsType_TYPE_BUY      HallEnumGoodsType = 4
	HallEnumGoodsType_TYPE_VIP      HallEnumGoodsType = 5
)

var HallEnumGoodsType_name = map[int32]string{
	1: "TYPE_COIN",
	2: "TYPE_DIAMOND",
	3: "TYPE_EXCHANGE",
	4: "TYPE_BUY",
	5: "TYPE_VIP",
}
var HallEnumGoodsType_value = map[string]int32{
	"TYPE_COIN":     1,
	"TYPE_DIAMOND":  2,
	"TYPE_EXCHANGE": 3,
	"TYPE_BUY":      4,
	"TYPE_VIP":      5,
}

func (x HallEnumGoodsType) Enum() *HallEnumGoodsType {
	p := new(HallEnumGoodsType)
	*p = x
	return p
}
func (x HallEnumGoodsType) String() string {
	return proto.EnumName(HallEnumGoodsType_name, int32(x))
}
func (x *HallEnumGoodsType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HallEnumGoodsType_value, data, "HallEnumGoodsType")
	if err != nil {
		return err
	}
	*x = HallEnumGoodsType(value)
	return nil
}
func (HallEnumGoodsType) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

// 保险箱操作类型
type HallStrongboxAccessType int32

const (
	HallStrongboxAccessType_SAVE HallStrongboxAccessType = 1
	HallStrongboxAccessType_DRAW HallStrongboxAccessType = 2
)

var HallStrongboxAccessType_name = map[int32]string{
	1: "SAVE",
	2: "DRAW",
}
var HallStrongboxAccessType_value = map[string]int32{
	"SAVE": 1,
	"DRAW": 2,
}

func (x HallStrongboxAccessType) Enum() *HallStrongboxAccessType {
	p := new(HallStrongboxAccessType)
	*p = x
	return p
}
func (x HallStrongboxAccessType) String() string {
	return proto.EnumName(HallStrongboxAccessType_name, int32(x))
}
func (x *HallStrongboxAccessType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(HallStrongboxAccessType_value, data, "HallStrongboxAccessType")
	if err != nil {
		return err
	}
	*x = HallStrongboxAccessType(value)
	return nil
}
func (HallStrongboxAccessType) EnumDescriptor() ([]byte, []int) { return fileDescriptor28, []int{1} }

// 活动列表
type HallReqEvent struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqEvent) Reset()                    { *m = HallReqEvent{} }
func (m *HallReqEvent) String() string            { return proto.CompactTextString(m) }
func (*HallReqEvent) ProtoMessage()               {}
func (*HallReqEvent) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{0} }

func (m *HallReqEvent) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 活动列表ACK
type HallAckEvent struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	EventList        []*HallItemEvent `protobuf:"bytes,2,rep,name=eventList" json:"eventList,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *HallAckEvent) Reset()                    { *m = HallAckEvent{} }
func (m *HallAckEvent) String() string            { return proto.CompactTextString(m) }
func (*HallAckEvent) ProtoMessage()               {}
func (*HallAckEvent) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{1} }

func (m *HallAckEvent) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckEvent) GetEventList() []*HallItemEvent {
	if m != nil {
		return m.EventList
	}
	return nil
}

// 奖励物品信息
type HallLotteryItem struct {
	Id               *int32               `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Name             *string              `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Type             *HallLotteryItemType `protobuf:"varint,3,opt,name=type,enum=ddproto.HallLotteryItemType" json:"type,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *HallLotteryItem) Reset()                    { *m = HallLotteryItem{} }
func (m *HallLotteryItem) String() string            { return proto.CompactTextString(m) }
func (*HallLotteryItem) ProtoMessage()               {}
func (*HallLotteryItem) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{2} }

func (m *HallLotteryItem) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *HallLotteryItem) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *HallLotteryItem) GetType() HallLotteryItemType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return HallLotteryItemType_L_COIN
}

// 签到信息与奖励物品列表
type HallSignLotteryInfo struct {
	IsSignToday      *bool              `protobuf:"varint,1,opt,name=isSignToday" json:"isSignToday,omitempty"`
	TotalDays        *int32             `protobuf:"varint,2,opt,name=totalDays" json:"totalDays,omitempty"`
	ContinuousDays   *int32             `protobuf:"varint,3,opt,name=continuousDays" json:"continuousDays,omitempty"`
	SignItems        []*HallLotteryItem `protobuf:"bytes,4,rep,name=signItems" json:"signItems,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HallSignLotteryInfo) Reset()                    { *m = HallSignLotteryInfo{} }
func (m *HallSignLotteryInfo) String() string            { return proto.CompactTextString(m) }
func (*HallSignLotteryInfo) ProtoMessage()               {}
func (*HallSignLotteryInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{3} }

func (m *HallSignLotteryInfo) GetIsSignToday() bool {
	if m != nil && m.IsSignToday != nil {
		return *m.IsSignToday
	}
	return false
}

func (m *HallSignLotteryInfo) GetTotalDays() int32 {
	if m != nil && m.TotalDays != nil {
		return *m.TotalDays
	}
	return 0
}

func (m *HallSignLotteryInfo) GetContinuousDays() int32 {
	if m != nil && m.ContinuousDays != nil {
		return *m.ContinuousDays
	}
	return 0
}

func (m *HallSignLotteryInfo) GetSignItems() []*HallLotteryItem {
	if m != nil {
		return m.SignItems
	}
	return nil
}

// 转盘信息与奖励物品列表
type HallDrawLotteryInfo struct {
	IsDrawToday      *bool              `protobuf:"varint,1,opt,name=isDrawToday" json:"isDrawToday,omitempty"`
	DialItems        []*HallLotteryItem `protobuf:"bytes,2,rep,name=dialItems" json:"dialItems,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HallDrawLotteryInfo) Reset()                    { *m = HallDrawLotteryInfo{} }
func (m *HallDrawLotteryInfo) String() string            { return proto.CompactTextString(m) }
func (*HallDrawLotteryInfo) ProtoMessage()               {}
func (*HallDrawLotteryInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{4} }

func (m *HallDrawLotteryInfo) GetIsDrawToday() bool {
	if m != nil && m.IsDrawToday != nil {
		return *m.IsDrawToday
	}
	return false
}

func (m *HallDrawLotteryInfo) GetDialItems() []*HallLotteryItem {
	if m != nil {
		return m.DialItems
	}
	return nil
}

// 邮件REQ
type HallReqMailList struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqMailList) Reset()                    { *m = HallReqMailList{} }
func (m *HallReqMailList) String() string            { return proto.CompactTextString(m) }
func (*HallReqMailList) ProtoMessage()               {}
func (*HallReqMailList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{5} }

func (m *HallReqMailList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 邮件ACK
type HallAckMailList struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	List             []*HallMailItem `protobuf:"bytes,2,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *HallAckMailList) Reset()                    { *m = HallAckMailList{} }
func (m *HallAckMailList) String() string            { return proto.CompactTextString(m) }
func (*HallAckMailList) ProtoMessage()               {}
func (*HallAckMailList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{6} }

func (m *HallAckMailList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckMailList) GetList() []*HallMailItem {
	if m != nil {
		return m.List
	}
	return nil
}

// 任务
type HallReqTask struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	TaskType         *HallEnumTaskType `protobuf:"varint,2,opt,name=task_type,json=taskType,enum=ddproto.HallEnumTaskType" json:"task_type,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *HallReqTask) Reset()                    { *m = HallReqTask{} }
func (m *HallReqTask) String() string            { return proto.CompactTextString(m) }
func (*HallReqTask) ProtoMessage()               {}
func (*HallReqTask) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{7} }

func (m *HallReqTask) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqTask) GetTaskType() HallEnumTaskType {
	if m != nil && m.TaskType != nil {
		return *m.TaskType
	}
	return HallEnumTaskType_TYPE_HALL
}

type HallAckTask struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	TaskList         []*HallItemTask `protobuf:"bytes,2,rep,name=taskList" json:"taskList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *HallAckTask) Reset()                    { *m = HallAckTask{} }
func (m *HallAckTask) String() string            { return proto.CompactTextString(m) }
func (*HallAckTask) ProtoMessage()               {}
func (*HallAckTask) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{8} }

func (m *HallAckTask) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckTask) GetTaskList() []*HallItemTask {
	if m != nil {
		return m.TaskList
	}
	return nil
}

// 领取任务奖励
type HallReqCheckTask struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	TaskId           *int32       `protobuf:"varint,2,opt,name=taskId" json:"taskId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqCheckTask) Reset()                    { *m = HallReqCheckTask{} }
func (m *HallReqCheckTask) String() string            { return proto.CompactTextString(m) }
func (*HallReqCheckTask) ProtoMessage()               {}
func (*HallReqCheckTask) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{9} }

func (m *HallReqCheckTask) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqCheckTask) GetTaskId() int32 {
	if m != nil && m.TaskId != nil {
		return *m.TaskId
	}
	return 0
}

type HallAckCheckTask struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckCheckTask) Reset()                    { *m = HallAckCheckTask{} }
func (m *HallAckCheckTask) String() string            { return proto.CompactTextString(m) }
func (*HallAckCheckTask) ProtoMessage()               {}
func (*HallAckCheckTask) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{10} }

func (m *HallAckCheckTask) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 已完成，但未领取奖励的任务数
type HallReqTaskSum struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	TaskType         *HallEnumTaskType `protobuf:"varint,3,opt,name=task_type,json=taskType,enum=ddproto.HallEnumTaskType" json:"task_type,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *HallReqTaskSum) Reset()                    { *m = HallReqTaskSum{} }
func (m *HallReqTaskSum) String() string            { return proto.CompactTextString(m) }
func (*HallReqTaskSum) ProtoMessage()               {}
func (*HallReqTaskSum) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{11} }

func (m *HallReqTaskSum) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqTaskSum) GetTaskType() HallEnumTaskType {
	if m != nil && m.TaskType != nil {
		return *m.TaskType
	}
	return HallEnumTaskType_TYPE_HALL
}

type HallAckTaskSum struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	TaskSum          *int32       `protobuf:"varint,2,opt,name=task_sum,json=taskSum" json:"task_sum,omitempty"`
	BonusSum         *int32       `protobuf:"varint,3,opt,name=bonus_sum,json=bonusSum" json:"bonus_sum,omitempty"`
	BonusNext        *int32       `protobuf:"varint,4,opt,name=bonus_next,json=bonusNext" json:"bonus_next,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckTaskSum) Reset()                    { *m = HallAckTaskSum{} }
func (m *HallAckTaskSum) String() string            { return proto.CompactTextString(m) }
func (*HallAckTaskSum) ProtoMessage()               {}
func (*HallAckTaskSum) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{12} }

func (m *HallAckTaskSum) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckTaskSum) GetTaskSum() int32 {
	if m != nil && m.TaskSum != nil {
		return *m.TaskSum
	}
	return 0
}

func (m *HallAckTaskSum) GetBonusSum() int32 {
	if m != nil && m.BonusSum != nil {
		return *m.BonusSum
	}
	return 0
}

func (m *HallAckTaskSum) GetBonusNext() int32 {
	if m != nil && m.BonusNext != nil {
		return *m.BonusNext
	}
	return 0
}

// 领取红包任务奖励
type HallReqCheckBonus struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	TaskType         *HallEnumTaskType `protobuf:"varint,2,opt,name=task_type,json=taskType,enum=ddproto.HallEnumTaskType" json:"task_type,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *HallReqCheckBonus) Reset()                    { *m = HallReqCheckBonus{} }
func (m *HallReqCheckBonus) String() string            { return proto.CompactTextString(m) }
func (*HallReqCheckBonus) ProtoMessage()               {}
func (*HallReqCheckBonus) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{13} }

func (m *HallReqCheckBonus) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqCheckBonus) GetTaskType() HallEnumTaskType {
	if m != nil && m.TaskType != nil {
		return *m.TaskType
	}
	return HallEnumTaskType_TYPE_HALL
}

type HallAckCheckBonus struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GiveBonus        *float64     `protobuf:"fixed64,2,opt,name=give_bonus,json=giveBonus" json:"give_bonus,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckCheckBonus) Reset()                    { *m = HallAckCheckBonus{} }
func (m *HallAckCheckBonus) String() string            { return proto.CompactTextString(m) }
func (*HallAckCheckBonus) ProtoMessage()               {}
func (*HallAckCheckBonus) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{14} }

func (m *HallAckCheckBonus) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckCheckBonus) GetGiveBonus() float64 {
	if m != nil && m.GiveBonus != nil {
		return *m.GiveBonus
	}
	return 0
}

// 背包道具列表
type HallReqBagItems struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqBagItems) Reset()                    { *m = HallReqBagItems{} }
func (m *HallReqBagItems) String() string            { return proto.CompactTextString(m) }
func (*HallReqBagItems) ProtoMessage()               {}
func (*HallReqBagItems) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{15} }

func (m *HallReqBagItems) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 道具列表ACK
type HallAckBagItems struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Items            []*HallBagItem `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *HallAckBagItems) Reset()                    { *m = HallAckBagItems{} }
func (m *HallAckBagItems) String() string            { return proto.CompactTextString(m) }
func (*HallAckBagItems) ProtoMessage()               {}
func (*HallAckBagItems) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{16} }

func (m *HallAckBagItems) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckBagItems) GetItems() []*HallBagItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// 个人信息
type HallReqUserData struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqUserData) Reset()                    { *m = HallReqUserData{} }
func (m *HallReqUserData) String() string            { return proto.CompactTextString(m) }
func (*HallReqUserData) ProtoMessage()               {}
func (*HallReqUserData) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{17} }

func (m *HallReqUserData) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqUserData) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type HallAckUserData struct {
	Header           *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	User             *HallUserData `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *HallAckUserData) Reset()                    { *m = HallAckUserData{} }
func (m *HallAckUserData) String() string            { return proto.CompactTextString(m) }
func (*HallAckUserData) ProtoMessage()               {}
func (*HallAckUserData) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{18} }

func (m *HallAckUserData) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckUserData) GetUser() *HallUserData {
	if m != nil {
		return m.User
	}
	return nil
}

// 完善个人信息
type HallReqUpdateRealData struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	RealName         *string      `protobuf:"bytes,2,opt,name=realName" json:"realName,omitempty"`
	PhoneNumber      *string      `protobuf:"bytes,3,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	WxNumber         *string      `protobuf:"bytes,4,opt,name=wxNumber" json:"wxNumber,omitempty"`
	RealAddress      *string      `protobuf:"bytes,5,opt,name=realAddress" json:"realAddress,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqUpdateRealData) Reset()                    { *m = HallReqUpdateRealData{} }
func (m *HallReqUpdateRealData) String() string            { return proto.CompactTextString(m) }
func (*HallReqUpdateRealData) ProtoMessage()               {}
func (*HallReqUpdateRealData) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{19} }

func (m *HallReqUpdateRealData) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqUpdateRealData) GetRealName() string {
	if m != nil && m.RealName != nil {
		return *m.RealName
	}
	return ""
}

func (m *HallReqUpdateRealData) GetPhoneNumber() string {
	if m != nil && m.PhoneNumber != nil {
		return *m.PhoneNumber
	}
	return ""
}

func (m *HallReqUpdateRealData) GetWxNumber() string {
	if m != nil && m.WxNumber != nil {
		return *m.WxNumber
	}
	return ""
}

func (m *HallReqUpdateRealData) GetRealAddress() string {
	if m != nil && m.RealAddress != nil {
		return *m.RealAddress
	}
	return ""
}

type HallAckUpdateRealData struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckUpdateRealData) Reset()                    { *m = HallAckUpdateRealData{} }
func (m *HallAckUpdateRealData) String() string            { return proto.CompactTextString(m) }
func (*HallAckUpdateRealData) ProtoMessage()               {}
func (*HallAckUpdateRealData) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{20} }

func (m *HallAckUpdateRealData) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 商品列表Req
type HallReqGoodsList struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GoodsType        *HallEnumGoodsType `protobuf:"varint,2,opt,name=goods_type,json=goodsType,enum=ddproto.HallEnumGoodsType" json:"goods_type,omitempty"`
	ChannelId        *string            `protobuf:"bytes,3,opt,name=channelId" json:"channelId,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HallReqGoodsList) Reset()                    { *m = HallReqGoodsList{} }
func (m *HallReqGoodsList) String() string            { return proto.CompactTextString(m) }
func (*HallReqGoodsList) ProtoMessage()               {}
func (*HallReqGoodsList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{21} }

func (m *HallReqGoodsList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqGoodsList) GetGoodsType() HallEnumGoodsType {
	if m != nil && m.GoodsType != nil {
		return *m.GoodsType
	}
	return HallEnumGoodsType_TYPE_COIN
}

func (m *HallReqGoodsList) GetChannelId() string {
	if m != nil && m.ChannelId != nil {
		return *m.ChannelId
	}
	return ""
}

// 商品列表Ack
type HallAckGoodsList struct {
	Header           *ProtoHeader        `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GoodsType        *HallEnumGoodsType  `protobuf:"varint,2,opt,name=goods_type,json=goodsType,enum=ddproto.HallEnumGoodsType" json:"goods_type,omitempty"`
	Items            []*HallGoodsItemMsg `protobuf:"bytes,3,rep,name=items" json:"items,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *HallAckGoodsList) Reset()                    { *m = HallAckGoodsList{} }
func (m *HallAckGoodsList) String() string            { return proto.CompactTextString(m) }
func (*HallAckGoodsList) ProtoMessage()               {}
func (*HallAckGoodsList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{22} }

func (m *HallAckGoodsList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckGoodsList) GetGoodsType() HallEnumGoodsType {
	if m != nil && m.GoodsType != nil {
		return *m.GoodsType
	}
	return HallEnumGoodsType_TYPE_COIN
}

func (m *HallAckGoodsList) GetItems() []*HallGoodsItemMsg {
	if m != nil {
		return m.Items
	}
	return nil
}

// 购买商品REQ
type HallReqGoodsBuy struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GoodsId          *int32       `protobuf:"varint,2,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	GoodsNum         *int32       `protobuf:"varint,3,opt,name=goods_num,json=goodsNum" json:"goods_num,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqGoodsBuy) Reset()                    { *m = HallReqGoodsBuy{} }
func (m *HallReqGoodsBuy) String() string            { return proto.CompactTextString(m) }
func (*HallReqGoodsBuy) ProtoMessage()               {}
func (*HallReqGoodsBuy) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{23} }

func (m *HallReqGoodsBuy) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqGoodsBuy) GetGoodsId() int32 {
	if m != nil && m.GoodsId != nil {
		return *m.GoodsId
	}
	return 0
}

func (m *HallReqGoodsBuy) GetGoodsNum() int32 {
	if m != nil && m.GoodsNum != nil {
		return *m.GoodsNum
	}
	return 0
}

// 购买商品ACK
type HallAckGoodsBuy struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GoodsType        *HallEnumTradeType `protobuf:"varint,2,opt,name=goods_type,json=goodsType,enum=ddproto.HallEnumTradeType" json:"goods_type,omitempty"`
	Amount           *int32             `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HallAckGoodsBuy) Reset()                    { *m = HallAckGoodsBuy{} }
func (m *HallAckGoodsBuy) String() string            { return proto.CompactTextString(m) }
func (*HallAckGoodsBuy) ProtoMessage()               {}
func (*HallAckGoodsBuy) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{24} }

func (m *HallAckGoodsBuy) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckGoodsBuy) GetGoodsType() HallEnumTradeType {
	if m != nil && m.GoodsType != nil {
		return *m.GoodsType
	}
	return HallEnumTradeType_TRADE_COIN
}

func (m *HallAckGoodsBuy) GetAmount() int32 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

// 单个商品信息
type HallGoodsItemMsg struct {
	GoodsId          *int32             `protobuf:"varint,1,opt,name=goods_id,json=goodsId" json:"goods_id,omitempty"`
	Name             *string            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	PriceType        *HallEnumTradeType `protobuf:"varint,3,opt,name=price_type,json=priceType,enum=ddproto.HallEnumTradeType" json:"price_type,omitempty"`
	Price            *float64           `protobuf:"fixed64,4,opt,name=price" json:"price,omitempty"`
	GoodsType        *HallEnumTradeType `protobuf:"varint,5,opt,name=goods_type,json=goodsType,enum=ddproto.HallEnumTradeType" json:"goods_type,omitempty"`
	Amount           *float64           `protobuf:"fixed64,6,opt,name=amount" json:"amount,omitempty"`
	Discount         *string            `protobuf:"bytes,7,opt,name=discount" json:"discount,omitempty"`
	Image            *string            `protobuf:"bytes,8,opt,name=image" json:"image,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HallGoodsItemMsg) Reset()                    { *m = HallGoodsItemMsg{} }
func (m *HallGoodsItemMsg) String() string            { return proto.CompactTextString(m) }
func (*HallGoodsItemMsg) ProtoMessage()               {}
func (*HallGoodsItemMsg) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{25} }

func (m *HallGoodsItemMsg) GetGoodsId() int32 {
	if m != nil && m.GoodsId != nil {
		return *m.GoodsId
	}
	return 0
}

func (m *HallGoodsItemMsg) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *HallGoodsItemMsg) GetPriceType() HallEnumTradeType {
	if m != nil && m.PriceType != nil {
		return *m.PriceType
	}
	return HallEnumTradeType_TRADE_COIN
}

func (m *HallGoodsItemMsg) GetPrice() float64 {
	if m != nil && m.Price != nil {
		return *m.Price
	}
	return 0
}

func (m *HallGoodsItemMsg) GetGoodsType() HallEnumTradeType {
	if m != nil && m.GoodsType != nil {
		return *m.GoodsType
	}
	return HallEnumTradeType_TRADE_COIN
}

func (m *HallGoodsItemMsg) GetAmount() float64 {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return 0
}

func (m *HallGoodsItemMsg) GetDiscount() string {
	if m != nil && m.Discount != nil {
		return *m.Discount
	}
	return ""
}

func (m *HallGoodsItemMsg) GetImage() string {
	if m != nil && m.Image != nil {
		return *m.Image
	}
	return ""
}

// 排行
type HallReqRank struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqRank) Reset()                    { *m = HallReqRank{} }
func (m *HallReqRank) String() string            { return proto.CompactTextString(m) }
func (*HallReqRank) ProtoMessage()               {}
func (*HallReqRank) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{26} }

func (m *HallReqRank) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckRank struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	RankList         []*HallRankItem `protobuf:"bytes,2,rep,name=rankList" json:"rankList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *HallAckRank) Reset()                    { *m = HallAckRank{} }
func (m *HallAckRank) String() string            { return proto.CompactTextString(m) }
func (*HallAckRank) ProtoMessage()               {}
func (*HallAckRank) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{27} }

func (m *HallAckRank) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckRank) GetRankList() []*HallRankItem {
	if m != nil {
		return m.RankList
	}
	return nil
}

// 抽奖动作
type HallReqDrawLottery struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqDrawLottery) Reset()                    { *m = HallReqDrawLottery{} }
func (m *HallReqDrawLottery) String() string            { return proto.CompactTextString(m) }
func (*HallReqDrawLottery) ProtoMessage()               {}
func (*HallReqDrawLottery) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{28} }

func (m *HallReqDrawLottery) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckDrawLottery struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	LotteryId        *int32       `protobuf:"varint,2,opt,name=lotteryId" json:"lotteryId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckDrawLottery) Reset()                    { *m = HallAckDrawLottery{} }
func (m *HallAckDrawLottery) String() string            { return proto.CompactTextString(m) }
func (*HallAckDrawLottery) ProtoMessage()               {}
func (*HallAckDrawLottery) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{29} }

func (m *HallAckDrawLottery) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckDrawLottery) GetLotteryId() int32 {
	if m != nil && m.LotteryId != nil {
		return *m.LotteryId
	}
	return 0
}

// 请求转盘与签到信息
type HallReqDsLotteryInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqDsLotteryInfo) Reset()                    { *m = HallReqDsLotteryInfo{} }
func (m *HallReqDsLotteryInfo) String() string            { return proto.CompactTextString(m) }
func (*HallReqDsLotteryInfo) ProtoMessage()               {}
func (*HallReqDsLotteryInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{30} }

func (m *HallReqDsLotteryInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 回复转盘与签到信息
type HallAckDsLotteryInfo struct {
	Header           *ProtoHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	DrawLotteryInfo  *HallDrawLotteryInfo `protobuf:"bytes,12,opt,name=drawLotteryInfo" json:"drawLotteryInfo,omitempty"`
	SignLotteryInfo  *HallSignLotteryInfo `protobuf:"bytes,13,opt,name=signLotteryInfo" json:"signLotteryInfo,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *HallAckDsLotteryInfo) Reset()                    { *m = HallAckDsLotteryInfo{} }
func (m *HallAckDsLotteryInfo) String() string            { return proto.CompactTextString(m) }
func (*HallAckDsLotteryInfo) ProtoMessage()               {}
func (*HallAckDsLotteryInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{31} }

func (m *HallAckDsLotteryInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckDsLotteryInfo) GetDrawLotteryInfo() *HallDrawLotteryInfo {
	if m != nil {
		return m.DrawLotteryInfo
	}
	return nil
}

func (m *HallAckDsLotteryInfo) GetSignLotteryInfo() *HallSignLotteryInfo {
	if m != nil {
		return m.SignLotteryInfo
	}
	return nil
}

// 好友列表
type HallReqFriendsList struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqFriendsList) Reset()                    { *m = HallReqFriendsList{} }
func (m *HallReqFriendsList) String() string            { return proto.CompactTextString(m) }
func (*HallReqFriendsList) ProtoMessage()               {}
func (*HallReqFriendsList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{32} }

func (m *HallReqFriendsList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckFriendsList struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Users            []*HallFriendState `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HallAckFriendsList) Reset()                    { *m = HallAckFriendsList{} }
func (m *HallAckFriendsList) String() string            { return proto.CompactTextString(m) }
func (*HallAckFriendsList) ProtoMessage()               {}
func (*HallAckFriendsList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{33} }

func (m *HallAckFriendsList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckFriendsList) GetUsers() []*HallFriendState {
	if m != nil {
		return m.Users
	}
	return nil
}

// 推荐好友列表
type HallReqRecommendUserList struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqRecommendUserList) Reset()                    { *m = HallReqRecommendUserList{} }
func (m *HallReqRecommendUserList) String() string            { return proto.CompactTextString(m) }
func (*HallReqRecommendUserList) ProtoMessage()               {}
func (*HallReqRecommendUserList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{34} }

func (m *HallReqRecommendUserList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckRecommendUserList struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Users            []*HallFriendState `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HallAckRecommendUserList) Reset()                    { *m = HallAckRecommendUserList{} }
func (m *HallAckRecommendUserList) String() string            { return proto.CompactTextString(m) }
func (*HallAckRecommendUserList) ProtoMessage()               {}
func (*HallAckRecommendUserList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{35} }

func (m *HallAckRecommendUserList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckRecommendUserList) GetUsers() []*HallFriendState {
	if m != nil {
		return m.Users
	}
	return nil
}

// 好友搜索
type HallReqFriendsSearch struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Keyword          *string      `protobuf:"bytes,2,opt,name=keyword" json:"keyword,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqFriendsSearch) Reset()                    { *m = HallReqFriendsSearch{} }
func (m *HallReqFriendsSearch) String() string            { return proto.CompactTextString(m) }
func (*HallReqFriendsSearch) ProtoMessage()               {}
func (*HallReqFriendsSearch) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{36} }

func (m *HallReqFriendsSearch) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqFriendsSearch) GetKeyword() string {
	if m != nil && m.Keyword != nil {
		return *m.Keyword
	}
	return ""
}

type HallAckFriendsSearch struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Users            []*HallFriendState `protobuf:"bytes,2,rep,name=users" json:"users,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HallAckFriendsSearch) Reset()                    { *m = HallAckFriendsSearch{} }
func (m *HallAckFriendsSearch) String() string            { return proto.CompactTextString(m) }
func (*HallAckFriendsSearch) ProtoMessage()               {}
func (*HallAckFriendsSearch) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{37} }

func (m *HallAckFriendsSearch) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckFriendsSearch) GetUsers() []*HallFriendState {
	if m != nil {
		return m.Users
	}
	return nil
}

// 添加好友
type HallReqAddFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	AddUserid        []uint32     `protobuf:"varint,2,rep,name=add_userid,json=addUserid" json:"add_userid,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqAddFriend) Reset()                    { *m = HallReqAddFriend{} }
func (m *HallReqAddFriend) String() string            { return proto.CompactTextString(m) }
func (*HallReqAddFriend) ProtoMessage()               {}
func (*HallReqAddFriend) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{38} }

func (m *HallReqAddFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqAddFriend) GetAddUserid() []uint32 {
	if m != nil {
		return m.AddUserid
	}
	return nil
}

type HallAckAddFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckAddFriend) Reset()                    { *m = HallAckAddFriend{} }
func (m *HallAckAddFriend) String() string            { return proto.CompactTextString(m) }
func (*HallAckAddFriend) ProtoMessage()               {}
func (*HallAckAddFriend) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{39} }

func (m *HallAckAddFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 删除好友
type HallReqDelFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	DelUserid        *uint32      `protobuf:"varint,2,opt,name=del_userid,json=delUserid" json:"del_userid,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqDelFriend) Reset()                    { *m = HallReqDelFriend{} }
func (m *HallReqDelFriend) String() string            { return proto.CompactTextString(m) }
func (*HallReqDelFriend) ProtoMessage()               {}
func (*HallReqDelFriend) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{40} }

func (m *HallReqDelFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqDelFriend) GetDelUserid() uint32 {
	if m != nil && m.DelUserid != nil {
		return *m.DelUserid
	}
	return 0
}

type HallAckDelFriend struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckDelFriend) Reset()                    { *m = HallAckDelFriend{} }
func (m *HallAckDelFriend) String() string            { return proto.CompactTextString(m) }
func (*HallAckDelFriend) ProtoMessage()               {}
func (*HallAckDelFriend) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{41} }

func (m *HallAckDelFriend) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 用户状态
type HallFriendState struct {
	IsOnline         *bool         `protobuf:"varint,1,opt,name=is_online,json=isOnline" json:"is_online,omitempty"`
	Info             *HallUserInfo `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *HallFriendState) Reset()                    { *m = HallFriendState{} }
func (m *HallFriendState) String() string            { return proto.CompactTextString(m) }
func (*HallFriendState) ProtoMessage()               {}
func (*HallFriendState) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{42} }

func (m *HallFriendState) GetIsOnline() bool {
	if m != nil && m.IsOnline != nil {
		return *m.IsOnline
	}
	return false
}

func (m *HallFriendState) GetInfo() *HallUserInfo {
	if m != nil {
		return m.Info
	}
	return nil
}

// 用户信息
type HallUserInfo struct {
	NickName         *string `protobuf:"bytes,1,opt,name=nick_name,json=nickName" json:"nick_name,omitempty"`
	HeadImg          *string `protobuf:"bytes,2,opt,name=head_img,json=headImg" json:"head_img,omitempty"`
	Sex              *int32  `protobuf:"varint,3,opt,name=sex" json:"sex,omitempty"`
	City             *string `protobuf:"bytes,4,opt,name=city" json:"city,omitempty"`
	Sign             *string `protobuf:"bytes,5,opt,name=sign" json:"sign,omitempty"`
	UserId           *uint32 `protobuf:"varint,6,opt,name=user_id,json=userId" json:"user_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallUserInfo) Reset()                    { *m = HallUserInfo{} }
func (m *HallUserInfo) String() string            { return proto.CompactTextString(m) }
func (*HallUserInfo) ProtoMessage()               {}
func (*HallUserInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{43} }

func (m *HallUserInfo) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *HallUserInfo) GetHeadImg() string {
	if m != nil && m.HeadImg != nil {
		return *m.HeadImg
	}
	return ""
}

func (m *HallUserInfo) GetSex() int32 {
	if m != nil && m.Sex != nil {
		return *m.Sex
	}
	return 0
}

func (m *HallUserInfo) GetCity() string {
	if m != nil && m.City != nil {
		return *m.City
	}
	return ""
}

func (m *HallUserInfo) GetSign() string {
	if m != nil && m.Sign != nil {
		return *m.Sign
	}
	return ""
}

func (m *HallUserInfo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 保险箱信息
type HallAckStrongboxInfo struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	StrongboxInfo    *HallStrongboxInfo `protobuf:"bytes,2,opt,name=strongboxInfo" json:"strongboxInfo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HallAckStrongboxInfo) Reset()                    { *m = HallAckStrongboxInfo{} }
func (m *HallAckStrongboxInfo) String() string            { return proto.CompactTextString(m) }
func (*HallAckStrongboxInfo) ProtoMessage()               {}
func (*HallAckStrongboxInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{44} }

func (m *HallAckStrongboxInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckStrongboxInfo) GetStrongboxInfo() *HallStrongboxInfo {
	if m != nil {
		return m.StrongboxInfo
	}
	return nil
}

type HallReqStrongboxInfo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqStrongboxInfo) Reset()                    { *m = HallReqStrongboxInfo{} }
func (m *HallReqStrongboxInfo) String() string            { return proto.CompactTextString(m) }
func (*HallReqStrongboxInfo) ProtoMessage()               {}
func (*HallReqStrongboxInfo) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{45} }

func (m *HallReqStrongboxInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 保险箱存取
type HallReqStrongboxAccess struct {
	Header           *ProtoHeader             `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	AccessCoin       *int64                   `protobuf:"varint,2,opt,name=accessCoin" json:"accessCoin,omitempty"`
	Type             *HallStrongboxAccessType `protobuf:"varint,3,opt,name=type,enum=ddproto.HallStrongboxAccessType" json:"type,omitempty"`
	XXX_unrecognized []byte                   `json:"-"`
}

func (m *HallReqStrongboxAccess) Reset()                    { *m = HallReqStrongboxAccess{} }
func (m *HallReqStrongboxAccess) String() string            { return proto.CompactTextString(m) }
func (*HallReqStrongboxAccess) ProtoMessage()               {}
func (*HallReqStrongboxAccess) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{46} }

func (m *HallReqStrongboxAccess) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqStrongboxAccess) GetAccessCoin() int64 {
	if m != nil && m.AccessCoin != nil {
		return *m.AccessCoin
	}
	return 0
}

func (m *HallReqStrongboxAccess) GetType() HallStrongboxAccessType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return HallStrongboxAccessType_SAVE
}

type HallAckStrongboxAccess struct {
	Header           *ProtoHeader       `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	StrongboxInfo    *HallStrongboxInfo `protobuf:"bytes,2,opt,name=strongboxInfo" json:"strongboxInfo,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *HallAckStrongboxAccess) Reset()                    { *m = HallAckStrongboxAccess{} }
func (m *HallAckStrongboxAccess) String() string            { return proto.CompactTextString(m) }
func (*HallAckStrongboxAccess) ProtoMessage()               {}
func (*HallAckStrongboxAccess) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{47} }

func (m *HallAckStrongboxAccess) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckStrongboxAccess) GetStrongboxInfo() *HallStrongboxInfo {
	if m != nil {
		return m.StrongboxInfo
	}
	return nil
}

// 游戏战绩
type Game_GameRecord struct {
	Header   *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id       *int32       `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	GameId   *int32       `protobuf:"varint,3,opt,name=gameId" json:"gameId,omitempty"`
	UserId   *uint32      `protobuf:"varint,4,opt,name=userId" json:"userId,omitempty"`
	RoomType *int32       `protobuf:"varint,5,opt,name=roomType" json:"roomType,omitempty"`
	// 俱乐部战绩查询
	GroupId          *int32 `protobuf:"varint,6,opt,name=groupId" json:"groupId,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Game_GameRecord) Reset()                    { *m = Game_GameRecord{} }
func (m *Game_GameRecord) String() string            { return proto.CompactTextString(m) }
func (*Game_GameRecord) ProtoMessage()               {}
func (*Game_GameRecord) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{48} }

func (m *Game_GameRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_GameRecord) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Game_GameRecord) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *Game_GameRecord) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_GameRecord) GetRoomType() int32 {
	if m != nil && m.RoomType != nil {
		return *m.RoomType
	}
	return 0
}

func (m *Game_GameRecord) GetGroupId() int32 {
	if m != nil && m.GroupId != nil {
		return *m.GroupId
	}
	return 0
}

//
type BeanUserRecord struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=UserId" json:"UserId,omitempty"`
	NickName         *string      `protobuf:"bytes,3,opt,name=NickName" json:"NickName,omitempty"`
	WinAmount        *int64       `protobuf:"varint,4,opt,name=WinAmount" json:"WinAmount,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *BeanUserRecord) Reset()                    { *m = BeanUserRecord{} }
func (m *BeanUserRecord) String() string            { return proto.CompactTextString(m) }
func (*BeanUserRecord) ProtoMessage()               {}
func (*BeanUserRecord) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{49} }

func (m *BeanUserRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BeanUserRecord) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *BeanUserRecord) GetNickName() string {
	if m != nil && m.NickName != nil {
		return *m.NickName
	}
	return ""
}

func (m *BeanUserRecord) GetWinAmount() int64 {
	if m != nil && m.WinAmount != nil {
		return *m.WinAmount
	}
	return 0
}

//
type BeanGameRecord struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Id               *int32            `protobuf:"varint,2,opt,name=id" json:"id,omitempty"`
	DeskId           *int32            `protobuf:"varint,3,opt,name=deskId" json:"deskId,omitempty"`
	BeginTime        *string           `protobuf:"bytes,4,opt,name=beginTime" json:"beginTime,omitempty"`
	Users            []*BeanUserRecord `protobuf:"bytes,5,rep,name=users" json:"users,omitempty"`
	RoundStr         *string           `protobuf:"bytes,6,opt,name=roundStr" json:"roundStr,omitempty"`
	Password         *string           `protobuf:"bytes,7,opt,name=password" json:"password,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *BeanGameRecord) Reset()                    { *m = BeanGameRecord{} }
func (m *BeanGameRecord) String() string            { return proto.CompactTextString(m) }
func (*BeanGameRecord) ProtoMessage()               {}
func (*BeanGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{50} }

func (m *BeanGameRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *BeanGameRecord) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *BeanGameRecord) GetDeskId() int32 {
	if m != nil && m.DeskId != nil {
		return *m.DeskId
	}
	return 0
}

func (m *BeanGameRecord) GetBeginTime() string {
	if m != nil && m.BeginTime != nil {
		return *m.BeginTime
	}
	return ""
}

func (m *BeanGameRecord) GetUsers() []*BeanUserRecord {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *BeanGameRecord) GetRoundStr() string {
	if m != nil && m.RoundStr != nil {
		return *m.RoundStr
	}
	return ""
}

func (m *BeanGameRecord) GetPassword() string {
	if m != nil && m.Password != nil {
		return *m.Password
	}
	return ""
}

// 战绩回复
type Game_AckGameRecord struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32           `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	GameId           *int32            `protobuf:"varint,3,opt,name=gameId" json:"gameId,omitempty"`
	Records          []*BeanGameRecord `protobuf:"bytes,4,rep,name=records" json:"records,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Game_AckGameRecord) Reset()                    { *m = Game_AckGameRecord{} }
func (m *Game_AckGameRecord) String() string            { return proto.CompactTextString(m) }
func (*Game_AckGameRecord) ProtoMessage()               {}
func (*Game_AckGameRecord) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{51} }

func (m *Game_AckGameRecord) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckGameRecord) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_AckGameRecord) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *Game_AckGameRecord) GetRecords() []*BeanGameRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

// 报名
type HallBeanBisai struct {
	Id               *int32  `protobuf:"varint,1,opt,name=Id" json:"Id,omitempty"`
	GameId           *int32  `protobuf:"varint,2,opt,name=GameId" json:"GameId,omitempty"`
	Des              *string `protobuf:"bytes,3,opt,name=Des" json:"Des,omitempty"`
	UserLimit        *int32  `protobuf:"varint,4,opt,name=UserLimit" json:"UserLimit,omitempty"`
	Status           *int32  `protobuf:"varint,5,opt,name=Status" json:"Status,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallBeanBisai) Reset()                    { *m = HallBeanBisai{} }
func (m *HallBeanBisai) String() string            { return proto.CompactTextString(m) }
func (*HallBeanBisai) ProtoMessage()               {}
func (*HallBeanBisai) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{52} }

func (m *HallBeanBisai) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *HallBeanBisai) GetGameId() int32 {
	if m != nil && m.GameId != nil {
		return *m.GameId
	}
	return 0
}

func (m *HallBeanBisai) GetDes() string {
	if m != nil && m.Des != nil {
		return *m.Des
	}
	return ""
}

func (m *HallBeanBisai) GetUserLimit() int32 {
	if m != nil && m.UserLimit != nil {
		return *m.UserLimit
	}
	return 0
}

func (m *HallBeanBisai) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

type HallReqBisai struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqBisai) Reset()                    { *m = HallReqBisai{} }
func (m *HallReqBisai) String() string            { return proto.CompactTextString(m) }
func (*HallReqBisai) ProtoMessage()               {}
func (*HallReqBisai) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{53} }

func (m *HallReqBisai) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// =========================朋友桌分享抽奖=========================
// 朋友卓抽奖-转盘奖品列表
type HallReqFriendLotteryList struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallReqFriendLotteryList) Reset()                    { *m = HallReqFriendLotteryList{} }
func (m *HallReqFriendLotteryList) String() string            { return proto.CompactTextString(m) }
func (*HallReqFriendLotteryList) ProtoMessage()               {}
func (*HallReqFriendLotteryList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{54} }

func (m *HallReqFriendLotteryList) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type HallAckFriendLotteryList struct {
	Header           *ProtoHeader         `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	DrawLotteryInfo  *HallDrawLotteryInfo `protobuf:"bytes,2,opt,name=drawLotteryInfo" json:"drawLotteryInfo,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *HallAckFriendLotteryList) Reset()                    { *m = HallAckFriendLotteryList{} }
func (m *HallAckFriendLotteryList) String() string            { return proto.CompactTextString(m) }
func (*HallAckFriendLotteryList) ProtoMessage()               {}
func (*HallAckFriendLotteryList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{55} }

func (m *HallAckFriendLotteryList) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckFriendLotteryList) GetDrawLotteryInfo() *HallDrawLotteryInfo {
	if m != nil {
		return m.DrawLotteryInfo
	}
	return nil
}

// 抽奖
type HallReqFriendLotteryDraw struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallReqFriendLotteryDraw) Reset()                    { *m = HallReqFriendLotteryDraw{} }
func (m *HallReqFriendLotteryDraw) String() string            { return proto.CompactTextString(m) }
func (*HallReqFriendLotteryDraw) ProtoMessage()               {}
func (*HallReqFriendLotteryDraw) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{56} }

func (m *HallReqFriendLotteryDraw) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type HallAckFriendLotteryDraw struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	LotteryId        *int32       `protobuf:"varint,2,opt,name=lotteryId" json:"lotteryId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckFriendLotteryDraw) Reset()                    { *m = HallAckFriendLotteryDraw{} }
func (m *HallAckFriendLotteryDraw) String() string            { return proto.CompactTextString(m) }
func (*HallAckFriendLotteryDraw) ProtoMessage()               {}
func (*HallAckFriendLotteryDraw) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{57} }

func (m *HallAckFriendLotteryDraw) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckFriendLotteryDraw) GetLotteryId() int32 {
	if m != nil && m.LotteryId != nil {
		return *m.LotteryId
	}
	return 0
}

// 请求玩家间距离是否小于distance
type HallReqDistanceMatched struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Distance         *string      `protobuf:"bytes,2,opt,name=distance" json:"distance,omitempty"`
	UserIds          []uint32     `protobuf:"varint,3,rep,name=userIds" json:"userIds,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqDistanceMatched) Reset()                    { *m = HallReqDistanceMatched{} }
func (m *HallReqDistanceMatched) String() string            { return proto.CompactTextString(m) }
func (*HallReqDistanceMatched) ProtoMessage()               {}
func (*HallReqDistanceMatched) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{58} }

func (m *HallReqDistanceMatched) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallReqDistanceMatched) GetDistance() string {
	if m != nil && m.Distance != nil {
		return *m.Distance
	}
	return ""
}

func (m *HallReqDistanceMatched) GetUserIds() []uint32 {
	if m != nil {
		return m.UserIds
	}
	return nil
}

// 回复玩家间距离小于distance的玩家列表
type HallAckDistanceMatched struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserNickNames    []string     `protobuf:"bytes,2,rep,name=userNickNames" json:"userNickNames,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckDistanceMatched) Reset()                    { *m = HallAckDistanceMatched{} }
func (m *HallAckDistanceMatched) String() string            { return proto.CompactTextString(m) }
func (*HallAckDistanceMatched) ProtoMessage()               {}
func (*HallAckDistanceMatched) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{59} }

func (m *HallAckDistanceMatched) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckDistanceMatched) GetUserNickNames() []string {
	if m != nil {
		return m.UserNickNames
	}
	return nil
}

// ========================代开房间列表============================
// 游戏中代开房间
type HallReqAgentRoomGamingList struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallReqAgentRoomGamingList) Reset()                    { *m = HallReqAgentRoomGamingList{} }
func (m *HallReqAgentRoomGamingList) String() string            { return proto.CompactTextString(m) }
func (*HallReqAgentRoomGamingList) ProtoMessage()               {}
func (*HallReqAgentRoomGamingList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{60} }

func (m *HallReqAgentRoomGamingList) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type HallAckAgentRoomGamingList struct {
	List             []*CommonDeskByAgent `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *HallAckAgentRoomGamingList) Reset()                    { *m = HallAckAgentRoomGamingList{} }
func (m *HallAckAgentRoomGamingList) String() string            { return proto.CompactTextString(m) }
func (*HallAckAgentRoomGamingList) ProtoMessage()               {}
func (*HallAckAgentRoomGamingList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{61} }

func (m *HallAckAgentRoomGamingList) GetList() []*CommonDeskByAgent {
	if m != nil {
		return m.List
	}
	return nil
}

// 历史代开房间
type HallReqAgentRoomHistoryList struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallReqAgentRoomHistoryList) Reset()                    { *m = HallReqAgentRoomHistoryList{} }
func (m *HallReqAgentRoomHistoryList) String() string            { return proto.CompactTextString(m) }
func (*HallReqAgentRoomHistoryList) ProtoMessage()               {}
func (*HallReqAgentRoomHistoryList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{62} }

func (m *HallReqAgentRoomHistoryList) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type HallAckAgentRoomHistoryList struct {
	List             []*CommonDeskByAgent `protobuf:"bytes,1,rep,name=list" json:"list,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *HallAckAgentRoomHistoryList) Reset()                    { *m = HallAckAgentRoomHistoryList{} }
func (m *HallAckAgentRoomHistoryList) String() string            { return proto.CompactTextString(m) }
func (*HallAckAgentRoomHistoryList) ProtoMessage()               {}
func (*HallAckAgentRoomHistoryList) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{63} }

func (m *HallAckAgentRoomHistoryList) GetList() []*CommonDeskByAgent {
	if m != nil {
		return m.List
	}
	return nil
}

// ======================绑定邀请码=====================
// 绑定代理邀请码
type HallReqBindInvcode struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Code             *string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HallReqBindInvcode) Reset()                    { *m = HallReqBindInvcode{} }
func (m *HallReqBindInvcode) String() string            { return proto.CompactTextString(m) }
func (*HallReqBindInvcode) ProtoMessage()               {}
func (*HallReqBindInvcode) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{64} }

func (m *HallReqBindInvcode) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *HallReqBindInvcode) GetCode() string {
	if m != nil && m.Code != nil {
		return *m.Code
	}
	return ""
}

type HallAckBindInvcode struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckBindInvcode) Reset()                    { *m = HallAckBindInvcode{} }
func (m *HallAckBindInvcode) String() string            { return proto.CompactTextString(m) }
func (*HallAckBindInvcode) ProtoMessage()               {}
func (*HallAckBindInvcode) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{65} }

func (m *HallAckBindInvcode) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// ====================经纬度计算距离=======================
// 发送玩家id,返回每个玩家的坐标经纬度
type HallReqUsersLatitude struct {
	Users            []uint32 `protobuf:"varint,1,rep,name=users" json:"users,omitempty"`
	ChanelId         *int32   `protobuf:"varint,2,opt,name=chanelId" json:"chanelId,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *HallReqUsersLatitude) Reset()                    { *m = HallReqUsersLatitude{} }
func (m *HallReqUsersLatitude) String() string            { return proto.CompactTextString(m) }
func (*HallReqUsersLatitude) ProtoMessage()               {}
func (*HallReqUsersLatitude) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{66} }

func (m *HallReqUsersLatitude) GetUsers() []uint32 {
	if m != nil {
		return m.Users
	}
	return nil
}

func (m *HallReqUsersLatitude) GetChanelId() int32 {
	if m != nil && m.ChanelId != nil {
		return *m.ChanelId
	}
	return 0
}

type UserLatitudeItem struct {
	UserA            *uint32  `protobuf:"varint,1,opt,name=userA" json:"userA,omitempty"`
	UserB            *uint32  `protobuf:"varint,2,opt,name=userB" json:"userB,omitempty"`
	Distance         *float64 `protobuf:"fixed64,3,opt,name=distance" json:"distance,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *UserLatitudeItem) Reset()                    { *m = UserLatitudeItem{} }
func (m *UserLatitudeItem) String() string            { return proto.CompactTextString(m) }
func (*UserLatitudeItem) ProtoMessage()               {}
func (*UserLatitudeItem) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{67} }

func (m *UserLatitudeItem) GetUserA() uint32 {
	if m != nil && m.UserA != nil {
		return *m.UserA
	}
	return 0
}

func (m *UserLatitudeItem) GetUserB() uint32 {
	if m != nil && m.UserB != nil {
		return *m.UserB
	}
	return 0
}

func (m *UserLatitudeItem) GetDistance() float64 {
	if m != nil && m.Distance != nil {
		return *m.Distance
	}
	return 0
}

type HallAckUsersLatitude struct {
	Header           *ProtoHeader        `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Items            []*UserLatitudeItem `protobuf:"bytes,2,rep,name=items" json:"items,omitempty"`
	IsShowWarn       *bool               `protobuf:"varint,3,opt,name=isShowWarn" json:"isShowWarn,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *HallAckUsersLatitude) Reset()                    { *m = HallAckUsersLatitude{} }
func (m *HallAckUsersLatitude) String() string            { return proto.CompactTextString(m) }
func (*HallAckUsersLatitude) ProtoMessage()               {}
func (*HallAckUsersLatitude) Descriptor() ([]byte, []int) { return fileDescriptor28, []int{68} }

func (m *HallAckUsersLatitude) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckUsersLatitude) GetItems() []*UserLatitudeItem {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *HallAckUsersLatitude) GetIsShowWarn() bool {
	if m != nil && m.IsShowWarn != nil {
		return *m.IsShowWarn
	}
	return false
}

func init() {
	proto.RegisterType((*HallReqEvent)(nil), "ddproto.hall_req_event")
	proto.RegisterType((*HallAckEvent)(nil), "ddproto.hall_ack_event")
	proto.RegisterType((*HallLotteryItem)(nil), "ddproto.hall_lottery_item")
	proto.RegisterType((*HallSignLotteryInfo)(nil), "ddproto.hall_sign_lottery_info")
	proto.RegisterType((*HallDrawLotteryInfo)(nil), "ddproto.hall_draw_lottery_info")
	proto.RegisterType((*HallReqMailList)(nil), "ddproto.hall_req_mail_list")
	proto.RegisterType((*HallAckMailList)(nil), "ddproto.hall_ack_mail_list")
	proto.RegisterType((*HallReqTask)(nil), "ddproto.hall_req_task")
	proto.RegisterType((*HallAckTask)(nil), "ddproto.hall_ack_task")
	proto.RegisterType((*HallReqCheckTask)(nil), "ddproto.hall_req_checkTask")
	proto.RegisterType((*HallAckCheckTask)(nil), "ddproto.hall_ack_checkTask")
	proto.RegisterType((*HallReqTaskSum)(nil), "ddproto.hall_req_task_sum")
	proto.RegisterType((*HallAckTaskSum)(nil), "ddproto.hall_ack_task_sum")
	proto.RegisterType((*HallReqCheckBonus)(nil), "ddproto.hall_req_checkBonus")
	proto.RegisterType((*HallAckCheckBonus)(nil), "ddproto.hall_ack_checkBonus")
	proto.RegisterType((*HallReqBagItems)(nil), "ddproto.hall_req_bag_items")
	proto.RegisterType((*HallAckBagItems)(nil), "ddproto.hall_ack_bag_items")
	proto.RegisterType((*HallReqUserData)(nil), "ddproto.hall_req_userData")
	proto.RegisterType((*HallAckUserData)(nil), "ddproto.hall_ack_userData")
	proto.RegisterType((*HallReqUpdateRealData)(nil), "ddproto.hall_req_updateRealData")
	proto.RegisterType((*HallAckUpdateRealData)(nil), "ddproto.hall_ack_updateRealData")
	proto.RegisterType((*HallReqGoodsList)(nil), "ddproto.hall_req_goods_list")
	proto.RegisterType((*HallAckGoodsList)(nil), "ddproto.hall_ack_goods_list")
	proto.RegisterType((*HallReqGoodsBuy)(nil), "ddproto.hall_req_goods_buy")
	proto.RegisterType((*HallAckGoodsBuy)(nil), "ddproto.hall_ack_goods_buy")
	proto.RegisterType((*HallGoodsItemMsg)(nil), "ddproto.hall_goods_item_msg")
	proto.RegisterType((*HallReqRank)(nil), "ddproto.hall_req_rank")
	proto.RegisterType((*HallAckRank)(nil), "ddproto.hall_ack_rank")
	proto.RegisterType((*HallReqDrawLottery)(nil), "ddproto.hall_req_draw_lottery")
	proto.RegisterType((*HallAckDrawLottery)(nil), "ddproto.hall_ack_draw_lottery")
	proto.RegisterType((*HallReqDsLotteryInfo)(nil), "ddproto.hall_req_ds_lottery_info")
	proto.RegisterType((*HallAckDsLotteryInfo)(nil), "ddproto.hall_ack_ds_lottery_info")
	proto.RegisterType((*HallReqFriendsList)(nil), "ddproto.hall_req_friends_list")
	proto.RegisterType((*HallAckFriendsList)(nil), "ddproto.hall_ack_friends_list")
	proto.RegisterType((*HallReqRecommendUserList)(nil), "ddproto.hall_req_recommend_user_list")
	proto.RegisterType((*HallAckRecommendUserList)(nil), "ddproto.hall_ack_recommend_user_list")
	proto.RegisterType((*HallReqFriendsSearch)(nil), "ddproto.hall_req_friends_search")
	proto.RegisterType((*HallAckFriendsSearch)(nil), "ddproto.hall_ack_friends_search")
	proto.RegisterType((*HallReqAddFriend)(nil), "ddproto.hall_req_add_friend")
	proto.RegisterType((*HallAckAddFriend)(nil), "ddproto.hall_ack_add_friend")
	proto.RegisterType((*HallReqDelFriend)(nil), "ddproto.hall_req_del_friend")
	proto.RegisterType((*HallAckDelFriend)(nil), "ddproto.hall_ack_del_friend")
	proto.RegisterType((*HallFriendState)(nil), "ddproto.hall_friend_state")
	proto.RegisterType((*HallUserInfo)(nil), "ddproto.hall_user_info")
	proto.RegisterType((*HallAckStrongboxInfo)(nil), "ddproto.hall_ack_strongbox_info")
	proto.RegisterType((*HallReqStrongboxInfo)(nil), "ddproto.hall_req_strongbox_info")
	proto.RegisterType((*HallReqStrongboxAccess)(nil), "ddproto.hall_req_strongbox_access")
	proto.RegisterType((*HallAckStrongboxAccess)(nil), "ddproto.hall_ack_strongbox_access")
	proto.RegisterType((*Game_GameRecord)(nil), "ddproto.game_GameRecord")
	proto.RegisterType((*BeanUserRecord)(nil), "ddproto.BeanUserRecord")
	proto.RegisterType((*BeanGameRecord)(nil), "ddproto.BeanGameRecord")
	proto.RegisterType((*Game_AckGameRecord)(nil), "ddproto.game_AckGameRecord")
	proto.RegisterType((*HallBeanBisai)(nil), "ddproto.hall_bean_bisai")
	proto.RegisterType((*HallReqBisai)(nil), "ddproto.hall_req_bisai")
	proto.RegisterType((*HallReqFriendLotteryList)(nil), "ddproto.hall_req_friend_lottery_list")
	proto.RegisterType((*HallAckFriendLotteryList)(nil), "ddproto.hall_ack_friend_lottery_list")
	proto.RegisterType((*HallReqFriendLotteryDraw)(nil), "ddproto.hall_req_friend_lottery_draw")
	proto.RegisterType((*HallAckFriendLotteryDraw)(nil), "ddproto.hall_ack_friend_lottery_draw")
	proto.RegisterType((*HallReqDistanceMatched)(nil), "ddproto.hall_req_distance_matched")
	proto.RegisterType((*HallAckDistanceMatched)(nil), "ddproto.hall_ack_distance_matched")
	proto.RegisterType((*HallReqAgentRoomGamingList)(nil), "ddproto.hall_req_agent_room_gaming_list")
	proto.RegisterType((*HallAckAgentRoomGamingList)(nil), "ddproto.hall_ack_agent_room_gaming_list")
	proto.RegisterType((*HallReqAgentRoomHistoryList)(nil), "ddproto.hall_req_agent_room_history_list")
	proto.RegisterType((*HallAckAgentRoomHistoryList)(nil), "ddproto.hall_ack_agent_room_history_list")
	proto.RegisterType((*HallReqBindInvcode)(nil), "ddproto.hall_req_bind_invcode")
	proto.RegisterType((*HallAckBindInvcode)(nil), "ddproto.hall_ack_bind_invcode")
	proto.RegisterType((*HallReqUsersLatitude)(nil), "ddproto.hall_req_users_latitude")
	proto.RegisterType((*UserLatitudeItem)(nil), "ddproto.user_latitude_item")
	proto.RegisterType((*HallAckUsersLatitude)(nil), "ddproto.hall_ack_users_latitude")
	proto.RegisterEnum("ddproto.HallEnumGoodsType", HallEnumGoodsType_name, HallEnumGoodsType_value)
	proto.RegisterEnum("ddproto.HallStrongboxAccessType", HallStrongboxAccessType_name, HallStrongboxAccessType_value)
}

func init() { proto.RegisterFile("hall.proto", fileDescriptor28) }

var fileDescriptor28 = []byte{
	// 2048 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xc4, 0x19, 0x5d, 0x6f, 0x1c, 0x49,
	0x91, 0xd9, 0x0f, 0x7b, 0xb7, 0x13, 0x3b, 0xbe, 0xb9, 0xe0, 0x6c, 0x7c, 0x09, 0x67, 0x35, 0x08,
	0x59, 0xb9, 0x23, 0xba, 0xf8, 0xa4, 0xe3, 0x40, 0x07, 0x92, 0xbf, 0x94, 0xac, 0x30, 0x8e, 0x35,
	0xb6, 0x2f, 0xdc, 0x09, 0x34, 0xea, 0x9d, 0xee, 0xec, 0x36, 0xde, 0xe9, 0x31, 0x33, 0xb3, 0xb1,
	0x17, 0x04, 0x88, 0x67, 0x84, 0xc4, 0x1b, 0x08, 0x1e, 0x40, 0x48, 0xfc, 0x84, 0x7b, 0xe1, 0x95,
	0xff, 0xc1, 0x1f, 0xe0, 0x4f, 0xa0, 0xaa, 0xee, 0x99, 0xe9, 0x59, 0xef, 0x5e, 0x98, 0x71, 0x04,
	0x2f, 0xab, 0xa9, 0xea, 0xfa, 0xee, 0xea, 0xea, 0xea, 0x5a, 0x42, 0x46, 0x6c, 0x3c, 0x7e, 0x7c,
	0x11, 0x47, 0x69, 0xe4, 0x2e, 0x73, 0x8e, 0x1f, 0x1b, 0x77, 0x00, 0xe9, 0x73, 0x96, 0x32, 0xbd,
	0xb2, 0xf1, 0x76, 0x10, 0x85, 0x61, 0xa4, 0xfc, 0x60, 0x2c, 0x85, 0x4a, 0x35, 0x92, 0x7e, 0x9f,
	0xac, 0x22, 0x5d, 0x2c, 0x7e, 0xe6, 0x8b, 0x57, 0x42, 0xa5, 0xee, 0xfb, 0x64, 0x69, 0x24, 0x18,
	0x17, 0x71, 0xcf, 0xd9, 0x74, 0xb6, 0x6e, 0x6d, 0xdf, 0x7d, 0x6c, 0x24, 0x3e, 0x3e, 0x86, 0xdf,
	0x67, 0xb8, 0xe6, 0x19, 0x1a, 0xfa, 0xca, 0xf0, 0xb3, 0xe0, 0xbc, 0x0e, 0xbf, 0xfb, 0x11, 0xe9,
	0x22, 0xdb, 0xa1, 0x4c, 0xd2, 0x5e, 0x63, 0xb3, 0xb9, 0x75, 0x6b, 0xbb, 0x97, 0x33, 0xa0, 0x64,
	0x99, 0x8a, 0x50, 0x8b, 0xf6, 0x0a, 0x52, 0x3a, 0x26, 0x6f, 0xe1, 0xea, 0x38, 0x4a, 0x53, 0x11,
	0x4f, 0x91, 0xca, 0x5d, 0x25, 0x0d, 0xc9, 0x51, 0x6d, 0xdb, 0x6b, 0x48, 0xee, 0xba, 0xa4, 0xa5,
	0x58, 0x28, 0x7a, 0x8d, 0x4d, 0x67, 0xab, 0xeb, 0xe1, 0xb7, 0xfb, 0x21, 0x69, 0xa5, 0xd3, 0x0b,
	0xd1, 0x6b, 0x6e, 0x3a, 0x5b, 0xab, 0xdb, 0xef, 0x96, 0x75, 0xd9, 0xd2, 0x7c, 0x20, 0xf3, 0x90,
	0x98, 0xfe, 0xc3, 0x21, 0xeb, 0x48, 0x90, 0xc8, 0xa1, 0x2a, 0xa8, 0xd4, 0xcb, 0xc8, 0xdd, 0x24,
	0xb7, 0x64, 0x72, 0x22, 0x87, 0xea, 0x34, 0xe2, 0x6c, 0x8a, 0xca, 0x3b, 0x9e, 0x8d, 0x72, 0x1f,
	0x90, 0x6e, 0x1a, 0xa5, 0x6c, 0xbc, 0xcf, 0xa6, 0x09, 0x9a, 0xd2, 0xf6, 0x0a, 0x84, 0xfb, 0x4d,
	0xb2, 0x1a, 0x44, 0x2a, 0x95, 0x6a, 0x12, 0x4d, 0x12, 0x24, 0x69, 0x22, 0xc9, 0x0c, 0xd6, 0xfd,
	0x98, 0x74, 0x41, 0x79, 0x3f, 0x15, 0x61, 0xd2, 0x6b, 0x61, 0xa0, 0x36, 0x16, 0x1b, 0xef, 0x15,
	0xc4, 0x34, 0x35, 0xb6, 0xf3, 0x98, 0x5d, 0xce, 0xb1, 0x7d, 0x3f, 0x66, 0x97, 0x33, 0xb6, 0xe7,
	0x28, 0xd0, 0xca, 0x25, 0x1b, 0x6b, 0xad, 0x8d, 0xd7, 0x6b, 0xcd, 0x89, 0xe9, 0x2e, 0x71, 0xf3,
	0xc4, 0x0a, 0x99, 0x1c, 0xfb, 0x63, 0x99, 0x54, 0x4d, 0xae, 0xc8, 0xc8, 0x80, 0xe4, 0xaa, 0x29,
	0xc3, 0x7d, 0x8f, 0xb4, 0xc6, 0x45, 0x6e, 0xdd, 0x2b, 0x1b, 0x8f, 0x42, 0xd1, 0x72, 0x24, 0xa2,
	0x97, 0x64, 0x25, 0x37, 0x3a, 0x65, 0xc9, 0x79, 0x45, 0x5d, 0x1f, 0x93, 0x2e, 0x70, 0x61, 0xe6,
	0xe0, 0x4e, 0xaf, 0x6e, 0xbf, 0x53, 0x56, 0x28, 0xd4, 0x24, 0x44, 0xc9, 0xa7, 0x90, 0x5c, 0x9d,
	0xec, 0x8b, 0xc6, 0x46, 0x31, 0x78, 0x5a, 0x43, 0xf1, 0x87, 0x04, 0x45, 0x1d, 0x2e, 0x74, 0x54,
	0x27, 0x34, 0x4b, 0xce, 0xbd, 0x9c, 0x90, 0x7e, 0x6e, 0xed, 0x50, 0x30, 0x12, 0xc1, 0xf9, 0x69,
	0x75, 0xc5, 0xeb, 0x64, 0x09, 0xe4, 0xf5, 0xb9, 0x49, 0x6c, 0x03, 0xe5, 0xbb, 0x0f, 0xfe, 0xd4,
	0x94, 0x4d, 0x7f, 0x61, 0x8e, 0x78, 0xb6, 0x19, 0x7e, 0x32, 0x09, 0x6f, 0xb2, 0x21, 0xcd, 0x2a,
	0x1b, 0xf2, 0x47, 0xc7, 0x68, 0xcf, 0x76, 0xa4, 0x86, 0xf6, 0xfb, 0x7a, 0x57, 0x80, 0xd3, 0x84,
	0x67, 0x19, 0xe0, 0x93, 0x49, 0xe8, 0xbe, 0x43, 0xba, 0x83, 0x48, 0x4d, 0x12, 0x5c, 0xd3, 0x07,
	0xbe, 0x83, 0x08, 0x58, 0x7c, 0x48, 0x88, 0x5e, 0x54, 0xe2, 0x2a, 0xed, 0xb5, 0x74, 0xc5, 0x40,
	0xcc, 0x91, 0xb8, 0x4a, 0xe9, 0x2f, 0xc9, 0xdb, 0xe5, 0x7d, 0xdb, 0x85, 0xa5, 0xff, 0x59, 0xaa,
	0x0e, 0x8c, 0xfa, 0x7c, 0x6b, 0xeb, 0xa8, 0x7f, 0x48, 0xc8, 0x50, 0xbe, 0x12, 0x3e, 0x7a, 0x85,
	0xfa, 0x1d, 0xaf, 0x0b, 0x18, 0x14, 0x56, 0x2a, 0x1e, 0x03, 0x36, 0xc4, 0xf4, 0xad, 0xa8, 0x82,
	0x5e, 0x58, 0x29, 0x58, 0x53, 0x86, 0xfb, 0x3e, 0x69, 0x4b, 0xab, 0xf4, 0xad, 0x97, 0x23, 0x94,
	0x49, 0xf5, 0x34, 0x11, 0xfd, 0xdc, 0x4a, 0xd8, 0x49, 0x22, 0xe2, 0x7d, 0x96, 0xb2, 0x8a, 0x0a,
	0xef, 0x91, 0x65, 0xe0, 0xf4, 0xa5, 0x3e, 0x50, 0x2b, 0xde, 0x12, 0x80, 0x7d, 0x4e, 0x43, 0x2b,
	0x1d, 0x6b, 0xca, 0x7e, 0x44, 0x5a, 0xc0, 0x89, 0x82, 0xaf, 0xf9, 0x92, 0xc9, 0xf4, 0x90, 0x86,
	0xfe, 0xd3, 0x21, 0xf7, 0x0a, 0x5f, 0x2e, 0x38, 0x4b, 0x85, 0x27, 0xe0, 0xc6, 0xaa, 0xac, 0x75,
	0x83, 0x74, 0x62, 0xc1, 0xc6, 0x47, 0xc5, 0x3d, 0x9c, 0xc3, 0x70, 0xff, 0x5c, 0x8c, 0x22, 0x25,
	0x8e, 0x26, 0xe1, 0x40, 0xc4, 0x78, 0x0e, 0xba, 0x9e, 0x8d, 0x02, 0xee, 0xcb, 0x2b, 0xb3, 0xdc,
	0xd2, 0xdc, 0x19, 0x0c, 0xdc, 0x20, 0x69, 0x87, 0xf3, 0x58, 0x24, 0x49, 0xaf, 0xad, 0xb9, 0x2d,
	0x14, 0x7d, 0x6a, 0x9c, 0xc0, 0xa0, 0xdd, 0xc0, 0x09, 0xfa, 0x17, 0xc7, 0x3a, 0x73, 0xc3, 0x28,
	0xe2, 0x49, 0x9d, 0xab, 0xe8, 0x13, 0x42, 0x34, 0xaf, 0x75, 0xe8, 0x1e, 0xce, 0x39, 0x74, 0x05,
	0x91, 0xd7, 0xc5, 0x6f, 0x38, 0x77, 0xd0, 0x46, 0x04, 0x23, 0xa6, 0x94, 0x18, 0xf7, 0xb9, 0x09,
	0x55, 0x81, 0xa0, 0x5f, 0x38, 0xd6, 0xb1, 0xfc, 0x3f, 0x59, 0xb8, 0x9d, 0x9d, 0x96, 0x26, 0x9e,
	0x96, 0x07, 0x65, 0x46, 0xcd, 0x83, 0x17, 0x51, 0x98, 0x0c, 0xb3, 0x33, 0xf3, 0x73, 0xeb, 0xa4,
	0x6b, 0x8a, 0xc1, 0x64, 0x5a, 0xbd, 0xce, 0x1a, 0xe1, 0xd9, 0x35, 0xb4, 0x8c, 0x70, 0x9f, 0x43,
	0x9d, 0xd5, 0x4b, 0xaa, 0xa8, 0xb3, 0x88, 0x38, 0x9a, 0x84, 0x50, 0xe3, 0xdd, 0x99, 0x98, 0x55,
	0x57, 0xfe, 0xdf, 0x86, 0x2c, 0x8d, 0x19, 0x17, 0xd7, 0x42, 0xb6, 0x4e, 0x96, 0x58, 0x18, 0x4d,
	0x54, 0x6a, 0x8c, 0x33, 0x10, 0xfd, 0x6b, 0xc3, 0x6c, 0x67, 0x39, 0x6a, 0x25, 0x57, 0x9d, 0xb2,
	0xab, 0xf3, 0x9a, 0xdd, 0x4f, 0x08, 0xb9, 0x88, 0x65, 0x20, 0xec, 0x0b, 0xf0, 0x75, 0xc6, 0x21,
	0x03, 0x1a, 0x77, 0x97, 0xb4, 0x11, 0xc0, 0x93, 0xe7, 0x78, 0x1a, 0x98, 0x71, 0xb8, 0x5d, 0xdb,
	0xe1, 0x25, 0x14, 0x6a, 0x20, 0x38, 0xe8, 0x5c, 0x26, 0x01, 0xae, 0x2c, 0xeb, 0x83, 0x9e, 0xc1,
	0x60, 0x87, 0x0c, 0xd9, 0x50, 0xf4, 0x3a, 0xb8, 0xa0, 0x01, 0xfa, 0x3d, 0xab, 0x57, 0x8b, 0x99,
	0xaa, 0xda, 0x5d, 0xd8, 0x1d, 0x57, 0x75, 0x76, 0xe8, 0xb8, 0x80, 0x6b, 0x71, 0xc7, 0x05, 0xab,
	0xfa, 0x76, 0xc8, 0x09, 0xe9, 0x01, 0xf9, 0x6a, 0x6e, 0xb2, 0xdd, 0x8d, 0x57, 0x34, 0x3d, 0x30,
	0x62, 0xc0, 0xf4, 0xfa, 0x62, 0xa0, 0xa0, 0x18, 0xc6, 0xbc, 0x7d, 0x2b, 0x10, 0xf4, 0x19, 0xe9,
	0x15, 0xb6, 0x26, 0xe5, 0x77, 0x43, 0x35, 0x73, 0xff, 0xe5, 0x18, 0x51, 0x68, 0xef, 0x4d, 0x44,
	0xb9, 0x7d, 0x72, 0x07, 0x1c, 0x3e, 0x34, 0x56, 0xaa, 0x97, 0x51, 0xef, 0x36, 0xb2, 0xcd, 0xbc,
	0xe3, 0xae, 0x3d, 0x75, 0xbc, 0x59, 0x3e, 0x10, 0x05, 0x4f, 0x24, 0x5b, 0xd4, 0xca, 0x3c, 0x51,
	0xd7, 0x5e, 0x7c, 0xde, 0x2c, 0x5f, 0x69, 0x5b, 0x5f, 0xc6, 0x52, 0xa8, 0x5a, 0xc5, 0x97, 0x5e,
	0x5a, 0xdb, 0x5a, 0x5f, 0x8c, 0xfb, 0x01, 0x69, 0xc3, 0x15, 0xbe, 0xe0, 0xb9, 0xa6, 0x05, 0xfb,
	0x49, 0x0a, 0x97, 0xa1, 0x26, 0xa4, 0x87, 0xe4, 0x41, 0x71, 0x92, 0x44, 0x10, 0x85, 0x21, 0x90,
	0x60, 0x1f, 0x52, 0xc3, 0x8d, 0x5f, 0x19, 0x69, 0x78, 0xb0, 0x6e, 0x2a, 0xad, 0x86, 0x37, 0xcc,
	0xea, 0x5c, 0xb2, 0x30, 0x26, 0x82, 0xc5, 0xc1, 0xa8, 0xa2, 0xea, 0x1e, 0x59, 0x3e, 0x17, 0xd3,
	0xcb, 0x28, 0xe6, 0xa6, 0xa6, 0x66, 0x20, 0x9d, 0x5a, 0x7d, 0xc5, 0x8d, 0x54, 0x54, 0xf7, 0x6e,
	0x60, 0x35, 0x22, 0x8c, 0x73, 0x43, 0x53, 0xbd, 0xfb, 0x06, 0x5e, 0x90, 0x88, 0x57, 0x66, 0x73,
	0x6b, 0xc5, 0xeb, 0x32, 0xce, 0xcf, 0x10, 0x41, 0xf7, 0xac, 0x56, 0xa2, 0xae, 0x8e, 0x92, 0xa1,
	0x5c, 0x8c, 0x6b, 0x1b, 0x0a, 0xbc, 0xb9, 0xa1, 0xd0, 0x11, 0x77, 0xb9, 0x18, 0xcf, 0x31, 0xb4,
	0xae, 0x0e, 0xfa, 0x13, 0xd3, 0x59, 0xdb, 0xd1, 0x86, 0xbe, 0x41, 0x26, 0x7e, 0xa4, 0xc6, 0x52,
	0x09, 0x33, 0x17, 0xe9, 0xc8, 0xe4, 0x39, 0xc2, 0xee, 0x7b, 0xa4, 0x05, 0x85, 0xc0, 0x34, 0xd2,
	0xf7, 0xae, 0x37, 0xd2, 0xba, 0x4e, 0x20, 0x11, 0xfd, 0xb3, 0x63, 0x26, 0x64, 0xf9, 0x02, 0x08,
	0x57, 0x32, 0x38, 0xf7, 0xf1, 0xba, 0x76, 0xf4, 0x65, 0x07, 0x08, 0xec, 0x89, 0xef, 0x93, 0x0e,
	0x18, 0xe6, 0xcb, 0x70, 0x98, 0xa5, 0x1d, 0xc0, 0xfd, 0x70, 0xe8, 0xae, 0x91, 0x66, 0x22, 0xae,
	0x4c, 0xa7, 0x00, 0x9f, 0x70, 0xe7, 0x07, 0x32, 0x9d, 0x9a, 0xd6, 0x18, 0xbf, 0x01, 0x07, 0x05,
	0xca, 0xf4, 0xc3, 0xf8, 0x6d, 0x3f, 0x2b, 0x96, 0x4a, 0xcf, 0x8a, 0xdf, 0x3a, 0x56, 0x2a, 0x27,
	0x69, 0x1c, 0xa9, 0xe1, 0x20, 0xba, 0xaa, 0x53, 0x9a, 0x77, 0xc9, 0x4a, 0xce, 0xdf, 0x2f, 0xa2,
	0x33, 0xd3, 0x04, 0x96, 0x55, 0x78, 0x65, 0x96, 0xbc, 0x5f, 0x87, 0x9c, 0xb9, 0x89, 0x31, 0xf4,
	0x6f, 0x0e, 0xb9, 0x3f, 0x47, 0x12, 0x0b, 0x02, 0x91, 0x54, 0x7d, 0x03, 0x7e, 0x8d, 0x10, 0xcd,
	0xb7, 0x17, 0x49, 0x85, 0x5e, 0x35, 0x3d, 0x0b, 0xe3, 0x7e, 0xbb, 0x34, 0x50, 0xfc, 0xfa, 0x22,
	0x7f, 0x35, 0x87, 0x3d, 0x54, 0xfc, 0x5d, 0x66, 0x64, 0x39, 0xf6, 0xb5, 0x8c, 0x7c, 0x13, 0xd1,
	0xff, 0xc2, 0x21, 0x77, 0x86, 0x2c, 0x14, 0xfe, 0x53, 0x16, 0x0a, 0x4f, 0x04, 0x51, 0x5c, 0xf5,
	0xb8, 0xea, 0xf9, 0x6b, 0x23, 0x9f, 0xbf, 0xae, 0x93, 0x25, 0x10, 0x68, 0xde, 0x2b, 0x6d, 0xcf,
	0x40, 0x80, 0xd7, 0xf9, 0x87, 0x89, 0x9b, 0x67, 0x23, 0xbe, 0x15, 0xa3, 0x28, 0x3c, 0xcd, 0x1a,
	0xcb, 0xb6, 0x97, 0xc3, 0x50, 0x8d, 0x87, 0x71, 0x34, 0xb9, 0xe8, 0xeb, 0x14, 0x86, 0xc6, 0x57,
	0x83, 0xf4, 0xf7, 0x0e, 0x59, 0xdd, 0x15, 0x4c, 0x41, 0x51, 0xa8, 0x65, 0xf6, 0x3a, 0x59, 0x3a,
	0xd3, 0xe6, 0x98, 0x37, 0xf7, 0x59, 0x6e, 0xce, 0x91, 0x39, 0x96, 0xe6, 0xc1, 0x95, 0xc3, 0xd0,
	0x3c, 0xbd, 0x90, 0x6a, 0x47, 0xb7, 0xb2, 0x2d, 0x4c, 0x8a, 0x02, 0x41, 0xff, 0x6d, 0x4c, 0x7a,
	0x93, 0x91, 0xe4, 0x02, 0xe7, 0x6c, 0x26, 0x92, 0x1a, 0x02, 0x33, 0x06, 0x62, 0x28, 0xd5, 0xa9,
	0x0c, 0x85, 0xa9, 0x02, 0x05, 0xc2, 0xfd, 0x56, 0x76, 0xbd, 0xb4, 0x67, 0x3a, 0xd4, 0x72, 0xb8,
	0xcc, 0xdd, 0xa2, 0xc3, 0x3f, 0x51, 0xfc, 0x24, 0x8d, 0x31, 0xc6, 0xf0, 0x54, 0x37, 0x30, 0xac,
	0x5d, 0xb0, 0x24, 0xc1, 0xdb, 0xd0, 0xf4, 0xe7, 0x19, 0x4c, 0xff, 0xee, 0x10, 0x17, 0x13, 0x67,
	0x27, 0x38, 0xaf, 0xed, 0x71, 0x91, 0x13, 0xa5, 0xc1, 0xc7, 0xc2, 0x1c, 0x7a, 0x42, 0x96, 0x63,
	0xd4, 0x93, 0x4d, 0xc3, 0xcb, 0xde, 0x15, 0x76, 0x78, 0x19, 0x1d, 0xfd, 0x8d, 0x43, 0xf4, 0x9f,
	0x22, 0x03, 0xc1, 0x94, 0x3f, 0x90, 0x09, 0x93, 0x10, 0xe8, 0x7e, 0xfe, 0x97, 0x81, 0x56, 0xf7,
	0x54, 0xab, 0x33, 0x03, 0x4d, 0x0d, 0x41, 0xed, 0xdd, 0x17, 0x89, 0x49, 0x03, 0xf8, 0x84, 0xd0,
	0x43, 0x08, 0x0f, 0x65, 0x28, 0xf3, 0x21, 0x5d, 0x8e, 0x00, 0x39, 0x27, 0x29, 0x4b, 0x27, 0x89,
	0x49, 0x64, 0x03, 0x95, 0xfe, 0x6f, 0xd1, 0x16, 0x54, 0xab, 0x6c, 0x1f, 0x59, 0xbd, 0x9a, 0xb9,
	0xb1, 0xb2, 0xe6, 0x14, 0xbb, 0xab, 0x22, 0x8c, 0x4e, 0xa9, 0xd0, 0xff, 0xc1, 0xb1, 0xda, 0xb2,
	0x79, 0x8c, 0x37, 0x6e, 0xc4, 0x1b, 0xf5, 0x1a, 0xf1, 0x2f, 0xf3, 0x08, 0x48, 0x17, 0x7a, 0xf4,
	0xd3, 0xc5, 0x0e, 0x21, 0xdf, 0x9b, 0x7c, 0x0c, 0xfd, 0xda, 0xba, 0x4e, 0xb8, 0x4c, 0x52, 0xa6,
	0x02, 0xe1, 0x87, 0x2c, 0x0d, 0x46, 0x82, 0x57, 0x9f, 0x87, 0x65, 0x12, 0xb2, 0x79, 0x58, 0x06,
	0x43, 0x8d, 0xd3, 0xce, 0xe9, 0x11, 0xca, 0x8a, 0x97, 0x81, 0x34, 0xb2, 0xae, 0x8a, 0x1b, 0x1a,
	0xf0, 0x0d, 0xb2, 0x02, 0x52, 0xb3, 0x4a, 0xa6, 0x7b, 0xcf, 0xae, 0x57, 0x46, 0xd2, 0xef, 0x90,
	0x77, 0x8b, 0x3e, 0x73, 0x28, 0x54, 0xea, 0x43, 0x25, 0xf6, 0x87, 0x2c, 0x94, 0x6a, 0xf8, 0xe5,
	0xa9, 0x76, 0x6a, 0x58, 0xb1, 0x7d, 0x9c, 0xcf, 0xfa, 0xc4, 0xfc, 0x29, 0xe3, 0xe0, 0xc9, 0x2d,
	0xa6, 0x07, 0xe6, 0x1f, 0x4a, 0x28, 0x6e, 0xfe, 0x60, 0xaa, 0xb9, 0xcd, 0x5f, 0x33, 0xdf, 0x25,
	0x9b, 0xf3, 0x0c, 0x1a, 0xc9, 0x24, 0x8d, 0x5e, 0x97, 0xfc, 0x67, 0x86, 0x77, 0xc6, 0xa2, 0x12,
	0x6f, 0x0d, 0x93, 0xf6, 0xac, 0x77, 0xdf, 0x40, 0x2a, 0xee, 0x4b, 0xf5, 0x2a, 0x88, 0xb8, 0x58,
	0x64, 0x07, 0xb6, 0x6b, 0x11, 0xcf, 0x47, 0x34, 0xf0, 0x9d, 0x3f, 0x1e, 0x71, 0x4c, 0x6d, 0x0b,
	0xa9, 0x56, 0x17, 0x7e, 0x60, 0xcf, 0x6b, 0xa1, 0x9a, 0xfb, 0x63, 0x96, 0xca, 0x74, 0xc2, 0x71,
	0x8c, 0xa3, 0x6f, 0x01, 0x07, 0x73, 0xaa, 0x28, 0xf6, 0xc1, 0x88, 0xe9, 0x69, 0xa2, 0xce, 0xf7,
	0x1c, 0xa6, 0x3f, 0x26, 0xae, 0x7e, 0xaf, 0x19, 0x11, 0xfa, 0xdf, 0x55, 0x23, 0x67, 0xc7, 0x38,
	0xa5, 0x81, 0x0c, 0xbb, 0x6b, 0xca, 0xb6, 0x06, 0x4a, 0x59, 0xde, 0xc4, 0x41, 0x4f, 0x0e, 0xd3,
	0x3f, 0xd9, 0x3d, 0xe7, 0x8c, 0xad, 0xd5, 0x52, 0xf9, 0x49, 0x79, 0x3c, 0x5f, 0xfc, 0x81, 0x71,
	0xdd, 0x7a, 0x33, 0x6f, 0x84, 0x6e, 0x4e, 0x26, 0x27, 0xa3, 0xe8, 0xf2, 0x05, 0x8b, 0x15, 0x9a,
	0xd6, 0xf1, 0x2c, 0xcc, 0xa3, 0x97, 0xe4, 0xee, 0xbc, 0x31, 0xa7, 0xbb, 0x42, 0xba, 0xa7, 0x9f,
	0x1d, 0x1f, 0xf8, 0x7b, 0xcf, 0xfb, 0x47, 0x6b, 0x8e, 0xbb, 0x46, 0x6e, 0x23, 0xb8, 0xdf, 0xdf,
	0xf9, 0xe1, 0xf3, 0xa3, 0xfd, 0xb5, 0x86, 0xfb, 0x16, 0x59, 0x41, 0xcc, 0xc1, 0x8f, 0xf6, 0x9e,
	0xed, 0x1c, 0x3d, 0x3d, 0x58, 0x6b, 0xba, 0xb7, 0x49, 0x07, 0x51, 0xbb, 0x67, 0x9f, 0xad, 0xb5,
	0x72, 0xe8, 0xd3, 0xfe, 0xf1, 0x5a, 0xfb, 0xd1, 0x07, 0x64, 0x63, 0x71, 0x83, 0xe8, 0x76, 0x48,
	0xeb, 0x64, 0xe7, 0xd3, 0x83, 0x35, 0x07, 0xbe, 0xf6, 0xbd, 0x9d, 0x17, 0x6b, 0x8d, 0xe3, 0xaf,
	0x1c, 0x3b, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xbe, 0x97, 0x58, 0xec, 0xe9, 0x1f, 0x00, 0x00,
}
