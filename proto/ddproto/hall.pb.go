// Code generated by protoc-gen-go.
// source: hall.proto
// DO NOT EDIT!

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of hall_item_event from hall_data.proto

// Ignoring public import of hall_item_email from hall_data.proto

// Ignoring public import of hall_item_bag from hall_data.proto

// Ignoring public import of hall_item_task from hall_data.proto

// Ignoring public import of hall_userData from hall_data.proto

// Ignoring public import of hall_item_rank from hall_data.proto

// Ignoring public import of hall_shop from hall_data.proto

// Ignoring public import of CoinZone from hall_data.proto

// Ignoring public import of DiamondZone from hall_data.proto

// Ignoring public import of ExchangeZone from hall_data.proto

// Ignoring public import of BuyZone from hall_data.proto

// Ignoring public import of GoodsItem from hall_data.proto

// Ignoring public import of hall_enum_protoId from hall_data.proto

// Ignoring public import of hall_enum_event from hall_data.proto

// Ignoring public import of hall_enum_Reward from hall_data.proto

// Ignoring public import of hall_enum_emailType from hall_data.proto

// Ignoring public import of hall_enum_bagItemType from hall_data.proto

// Ignoring public import of hall_enum_bagItemRank from hall_data.proto

// Ignoring public import of hall_enum_taskType from hall_data.proto

// Ignoring public import of hall_enum_shopType from hall_data.proto

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of Heartbeat from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_gameLogin from common_client.proto

// Ignoring public import of common_ack_gameLogin from common_client.proto

// Ignoring public import of common_req_logout from common_client.proto

// Ignoring public import of common_ack_logout from common_client.proto

// Ignoring public import of common_req_feedback from common_client.proto

// Ignoring public import of client_base_poker from common_client.proto

// Ignoring public import of common_req_message from common_client.proto

// Ignoring public import of common_bc_message from common_client.proto

// Ignoring public import of common_req_notice from common_client.proto

// Ignoring public import of common_ack_notice from common_client.proto

// Ignoring public import of common_enum_pokerColor from common_client.proto

// 活动列表
type HallReqEvent struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqEvent) Reset()                    { *m = HallReqEvent{} }
func (m *HallReqEvent) String() string            { return proto.CompactTextString(m) }
func (*HallReqEvent) ProtoMessage()               {}
func (*HallReqEvent) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{0} }

func (m *HallReqEvent) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckEvent struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	EventList        []*HallItemEvent `protobuf:"bytes,2,rep,name=eventList" json:"eventList,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *HallAckEvent) Reset()                    { *m = HallAckEvent{} }
func (m *HallAckEvent) String() string            { return proto.CompactTextString(m) }
func (*HallAckEvent) ProtoMessage()               {}
func (*HallAckEvent) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{1} }

func (m *HallAckEvent) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckEvent) GetEventList() []*HallItemEvent {
	if m != nil {
		return m.EventList
	}
	return nil
}

// 邮件
type HallReqMail struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqMail) Reset()                    { *m = HallReqMail{} }
func (m *HallReqMail) String() string            { return proto.CompactTextString(m) }
func (*HallReqMail) ProtoMessage()               {}
func (*HallReqMail) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{2} }

func (m *HallReqMail) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckMail struct {
	Header           *ProtoHeader     `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	EmailList        []*HallItemEmail `protobuf:"bytes,2,rep,name=emailList" json:"emailList,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *HallAckMail) Reset()                    { *m = HallAckMail{} }
func (m *HallAckMail) String() string            { return proto.CompactTextString(m) }
func (*HallAckMail) ProtoMessage()               {}
func (*HallAckMail) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{3} }

func (m *HallAckMail) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckMail) GetEmailList() []*HallItemEmail {
	if m != nil {
		return m.EmailList
	}
	return nil
}

// 任务
type HallReqTask struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqTask) Reset()                    { *m = HallReqTask{} }
func (m *HallReqTask) String() string            { return proto.CompactTextString(m) }
func (*HallReqTask) ProtoMessage()               {}
func (*HallReqTask) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{4} }

func (m *HallReqTask) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckTask struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	TaskList         []*HallItemTask `protobuf:"bytes,2,rep,name=taskList" json:"taskList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *HallAckTask) Reset()                    { *m = HallAckTask{} }
func (m *HallAckTask) String() string            { return proto.CompactTextString(m) }
func (*HallAckTask) ProtoMessage()               {}
func (*HallAckTask) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{5} }

func (m *HallAckTask) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckTask) GetTaskList() []*HallItemTask {
	if m != nil {
		return m.TaskList
	}
	return nil
}

// 领取任务
type HallReqGetTask struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqGetTask) Reset()                    { *m = HallReqGetTask{} }
func (m *HallReqGetTask) String() string            { return proto.CompactTextString(m) }
func (*HallReqGetTask) ProtoMessage()               {}
func (*HallReqGetTask) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{6} }

func (m *HallReqGetTask) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckGetTask struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	FinishedNum      *int32       `protobuf:"varint,2,opt,name=finishedNum" json:"finishedNum,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckGetTask) Reset()                    { *m = HallAckGetTask{} }
func (m *HallAckGetTask) String() string            { return proto.CompactTextString(m) }
func (*HallAckGetTask) ProtoMessage()               {}
func (*HallAckGetTask) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{7} }

func (m *HallAckGetTask) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckGetTask) GetFinishedNum() int32 {
	if m != nil && m.FinishedNum != nil {
		return *m.FinishedNum
	}
	return 0
}

// 背包
type HallReqBag struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqBag) Reset()                    { *m = HallReqBag{} }
func (m *HallReqBag) String() string            { return proto.CompactTextString(m) }
func (*HallReqBag) ProtoMessage()               {}
func (*HallReqBag) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{8} }

func (m *HallReqBag) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckBag struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BagItemList      []*HallItemBag `protobuf:"bytes,2,rep,name=bagItemList" json:"bagItemList,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *HallAckBag) Reset()                    { *m = HallAckBag{} }
func (m *HallAckBag) String() string            { return proto.CompactTextString(m) }
func (*HallAckBag) ProtoMessage()               {}
func (*HallAckBag) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{9} }

func (m *HallAckBag) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckBag) GetBagItemList() []*HallItemBag {
	if m != nil {
		return m.BagItemList
	}
	return nil
}

// 个人信息
type HallReqUserData struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqUserData) Reset()                    { *m = HallReqUserData{} }
func (m *HallReqUserData) String() string            { return proto.CompactTextString(m) }
func (*HallReqUserData) ProtoMessage()               {}
func (*HallReqUserData) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{10} }

func (m *HallReqUserData) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckUserData struct {
	Header           *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	User             *HallUserData `protobuf:"bytes,2,opt,name=user" json:"user,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *HallAckUserData) Reset()                    { *m = HallAckUserData{} }
func (m *HallAckUserData) String() string            { return proto.CompactTextString(m) }
func (*HallAckUserData) ProtoMessage()               {}
func (*HallAckUserData) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{11} }

func (m *HallAckUserData) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckUserData) GetUser() *HallUserData {
	if m != nil {
		return m.User
	}
	return nil
}

// 商城
type HallReqShop struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqShop) Reset()                    { *m = HallReqShop{} }
func (m *HallReqShop) String() string            { return proto.CompactTextString(m) }
func (*HallReqShop) ProtoMessage()               {}
func (*HallReqShop) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{12} }

func (m *HallReqShop) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAck_Shop struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ShopInfo         *HallShop    `protobuf:"bytes,2,opt,name=shopInfo" json:"shopInfo,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAck_Shop) Reset()                    { *m = HallAck_Shop{} }
func (m *HallAck_Shop) String() string            { return proto.CompactTextString(m) }
func (*HallAck_Shop) ProtoMessage()               {}
func (*HallAck_Shop) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{13} }

func (m *HallAck_Shop) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAck_Shop) GetShopInfo() *HallShop {
	if m != nil {
		return m.ShopInfo
	}
	return nil
}

// 排行
type HallReqRank struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqRank) Reset()                    { *m = HallReqRank{} }
func (m *HallReqRank) String() string            { return proto.CompactTextString(m) }
func (*HallReqRank) ProtoMessage()               {}
func (*HallReqRank) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{14} }

func (m *HallReqRank) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckRank struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	RankList         []*HallItemRank `protobuf:"bytes,2,rep,name=rankList" json:"rankList,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *HallAckRank) Reset()                    { *m = HallAckRank{} }
func (m *HallAckRank) String() string            { return proto.CompactTextString(m) }
func (*HallAckRank) ProtoMessage()               {}
func (*HallAckRank) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{15} }

func (m *HallAckRank) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckRank) GetRankList() []*HallItemRank {
	if m != nil {
		return m.RankList
	}
	return nil
}

// 抽奖
type HallReqDrawLottery struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallReqDrawLottery) Reset()                    { *m = HallReqDrawLottery{} }
func (m *HallReqDrawLottery) String() string            { return proto.CompactTextString(m) }
func (*HallReqDrawLottery) ProtoMessage()               {}
func (*HallReqDrawLottery) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{16} }

func (m *HallReqDrawLottery) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

type HallAckDrawLottery struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	LotteryId        *int32       `protobuf:"varint,2,opt,name=lotteryId" json:"lotteryId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *HallAckDrawLottery) Reset()                    { *m = HallAckDrawLottery{} }
func (m *HallAckDrawLottery) String() string            { return proto.CompactTextString(m) }
func (*HallAckDrawLottery) ProtoMessage()               {}
func (*HallAckDrawLottery) Descriptor() ([]byte, []int) { return fileDescriptor11, []int{17} }

func (m *HallAckDrawLottery) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *HallAckDrawLottery) GetLotteryId() int32 {
	if m != nil && m.LotteryId != nil {
		return *m.LotteryId
	}
	return 0
}

func init() {
	proto.RegisterType((*HallReqEvent)(nil), "ddproto.hall_req_event")
	proto.RegisterType((*HallAckEvent)(nil), "ddproto.hall_ack_event")
	proto.RegisterType((*HallReqMail)(nil), "ddproto.hall_req_mail")
	proto.RegisterType((*HallAckMail)(nil), "ddproto.hall_ack_mail")
	proto.RegisterType((*HallReqTask)(nil), "ddproto.hall_req_task")
	proto.RegisterType((*HallAckTask)(nil), "ddproto.hall_ack_task")
	proto.RegisterType((*HallReqGetTask)(nil), "ddproto.hall_req_getTask")
	proto.RegisterType((*HallAckGetTask)(nil), "ddproto.hall_ack_getTask")
	proto.RegisterType((*HallReqBag)(nil), "ddproto.hall_req_bag")
	proto.RegisterType((*HallAckBag)(nil), "ddproto.hall_ack_bag")
	proto.RegisterType((*HallReqUserData)(nil), "ddproto.hall_req_userData")
	proto.RegisterType((*HallAckUserData)(nil), "ddproto.hall_ack_userData")
	proto.RegisterType((*HallReqShop)(nil), "ddproto.hall_req_shop")
	proto.RegisterType((*HallAck_Shop)(nil), "ddproto.hall_ack_Shop")
	proto.RegisterType((*HallReqRank)(nil), "ddproto.hall_req_rank")
	proto.RegisterType((*HallAckRank)(nil), "ddproto.hall_ack_rank")
	proto.RegisterType((*HallReqDrawLottery)(nil), "ddproto.hall_req_draw_lottery")
	proto.RegisterType((*HallAckDrawLottery)(nil), "ddproto.hall_ack_draw_lottery")
}

var fileDescriptor11 = []byte{
	// 418 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x93, 0xdb, 0xcb, 0xd3, 0x30,
	0x18, 0xc6, 0xed, 0x3c, 0x6d, 0x6f, 0xe7, 0x29, 0x9e, 0xca, 0xf0, 0xa2, 0xf4, 0x6a, 0x88, 0xf4,
	0x62, 0x82, 0x78, 0xa1, 0xa2, 0xa0, 0xe0, 0x40, 0x64, 0x44, 0xef, 0x4b, 0xda, 0x66, 0x6d, 0x59,
	0x0f, 0x33, 0xcd, 0x26, 0xfe, 0xf7, 0xf2, 0x66, 0xf9, 0xd2, 0x96, 0x6f, 0x30, 0xd2, 0xef, 0x66,
	0x8c, 0x37, 0xcf, 0xef, 0xe9, 0x8f, 0x90, 0x17, 0x20, 0x67, 0x65, 0x19, 0xee, 0x45, 0x23, 0x1b,
	0x72, 0x3f, 0x4d, 0xd5, 0x9f, 0xc5, 0x23, 0x1c, 0x46, 0x29, 0x93, 0xec, 0x74, 0xb2, 0x78, 0x9a,
	0x34, 0x55, 0xd5, 0xd4, 0x51, 0x52, 0x16, 0xbc, 0x96, 0xa7, 0x61, 0xf0, 0x09, 0x1e, 0xaa, 0x9c,
	0xe0, 0x7f, 0x22, 0x7e, 0xe4, 0xb5, 0x24, 0x6f, 0xe0, 0x5e, 0xce, 0x59, 0xca, 0x85, 0xe7, 0xf8,
	0xce, 0xd2, 0x5d, 0x3d, 0x0b, 0x75, 0x63, 0xb8, 0xc1, 0xdf, 0xef, 0xea, 0x8c, 0xea, 0x4c, 0x70,
	0xd4, 0x3c, 0x4b, 0x76, 0x63, 0x78, 0xf2, 0x0e, 0x66, 0x0a, 0xfb, 0x51, 0xb4, 0xd2, 0x9b, 0xf8,
	0xb7, 0x97, 0xee, 0xca, 0x33, 0x80, 0x6a, 0x2e, 0x24, 0xaf, 0x4e, 0xd5, 0xb4, 0x8b, 0x06, 0x1f,
	0xe1, 0x81, 0xf1, 0xae, 0x58, 0x51, 0x5a, 0x6a, 0x1f, 0x34, 0x8e, 0xda, 0xf6, 0xb8, 0xb2, 0x46,
	0xec, 0x92, 0x35, 0x66, 0x68, 0x17, 0x1d, 0x58, 0x4b, 0xd6, 0xee, 0x2c, 0xad, 0x45, 0xcf, 0xda,
	0x1e, 0x27, 0x6f, 0x61, 0x8a, 0x54, 0x4f, 0xfa, 0xe5, 0x19, 0x69, 0x8c, 0x50, 0x13, 0x0c, 0x3e,
	0xc3, 0x63, 0xa3, 0x9c, 0x71, 0xf9, 0xdb, 0xde, 0x3a, 0xd6, 0x0d, 0x68, 0x3d, 0xaa, 0x81, 0xf8,
	0xe0, 0x6e, 0x8b, 0xba, 0x68, 0x73, 0x9e, 0xfe, 0x3c, 0x54, 0xde, 0xc4, 0x77, 0x96, 0x77, 0x69,
	0x7f, 0x14, 0x7c, 0x80, 0xb9, 0xb1, 0x8c, 0x59, 0x66, 0xfd, 0x88, 0xe7, 0xc6, 0xd0, 0x9a, 0x26,
	0xef, 0xc1, 0x8d, 0x59, 0xb6, 0x96, 0xbc, 0xea, 0xdd, 0xec, 0x8b, 0x33, 0x37, 0x1b, 0xb3, 0x8c,
	0xf6, 0xa3, 0xc1, 0x17, 0x78, 0x62, 0xac, 0x0f, 0x2d, 0x17, 0x5f, 0x99, 0x64, 0x96, 0xea, 0x95,
	0xae, 0x40, 0xf5, 0x71, 0x15, 0xe4, 0x35, 0xdc, 0x41, 0x52, 0x5d, 0xeb, 0x35, 0xf1, 0xab, 0x4e,
	0xaa, 0x32, 0x83, 0x07, 0xdc, 0xe6, 0xcd, 0xde, 0xda, 0xb6, 0x7b, 0xc0, 0xbf, 0xac, 0x71, 0x12,
	0xc2, 0x14, 0x3f, 0xba, 0xae, 0xb7, 0x8d, 0xb6, 0x25, 0x43, 0x5b, 0x3c, 0xa5, 0x26, 0x33, 0xb0,
	0x15, 0xac, 0xbe, 0xc9, 0xba, 0xd9, 0xe3, 0xb8, 0x6e, 0x48, 0x5d, 0x58, 0x37, 0x8c, 0x50, 0x13,
	0x0c, 0xbe, 0xc1, 0x73, 0xa3, 0x9c, 0x0a, 0xf6, 0x37, 0x2a, 0x1b, 0x29, 0xb9, 0xf8, 0x67, 0xa9,
	0x9e, 0xe8, 0x1a, 0x54, 0x1f, 0x5f, 0x43, 0x5e, 0xc1, 0x4c, 0x83, 0xeb, 0x54, 0xaf, 0x5d, 0x37,
	0xd8, 0xdc, 0xda, 0x38, 0xff, 0x03, 0x00, 0x00, 0xff, 0xff, 0x60, 0xcd, 0xd3, 0x6f, 0x7b, 0x06,
	0x00, 0x00,
}
