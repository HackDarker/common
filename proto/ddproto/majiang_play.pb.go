// Code generated by protoc-gen-go. DO NOT EDIT.
// source: majiang_play.proto

package ddproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from common_client.proto

// Ignoring public import of Heartbeat from common_client.proto

// Ignoring public import of ServerInfo from common_client.proto

// Ignoring public import of QuickConn from common_client.proto

// Ignoring public import of AckQuickConn from common_client.proto

// Ignoring public import of WeixinInfo from common_client.proto

// Ignoring public import of common_req_reg from common_client.proto

// Ignoring public import of common_req_reg_via_input from common_client.proto

// Ignoring public import of common_ack_reg from common_client.proto

// Ignoring public import of common_req_gameLogin from common_client.proto

// Ignoring public import of common_req_gameLogin_via_input from common_client.proto

// Ignoring public import of common_ack_gameLogin from common_client.proto

// Ignoring public import of common_req_qrLogin from common_client.proto

// Ignoring public import of common_ack_qrLogin from common_client.proto

// Ignoring public import of common_req_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_qrWxInfo from common_client.proto

// Ignoring public import of common_ack_reconnect from common_client.proto

// Ignoring public import of common_req_reconnect from common_client.proto

// Ignoring public import of common_req_gameState from common_client.proto

// Ignoring public import of common_ack_gameState from common_client.proto

// Ignoring public import of common_req_logout from common_client.proto

// Ignoring public import of common_ack_logout from common_client.proto

// Ignoring public import of common_req_feedback from common_client.proto

// Ignoring public import of client_base_poker from common_client.proto

// Ignoring public import of common_req_message from common_client.proto

// Ignoring public import of common_bc_message from common_client.proto

// Ignoring public import of common_req_notice from common_client.proto

// Ignoring public import of common_ack_notice from common_client.proto

// Ignoring public import of common_req_enterAgentMode from common_client.proto

// Ignoring public import of common_ack_enterAgentMode from common_client.proto

// Ignoring public import of common_req_quitAgentMode from common_client.proto

// Ignoring public import of common_ack_quitAgentMode from common_client.proto

// Ignoring public import of common_req_leaveDesk from common_client.proto

// Ignoring public import of common_ack_leaveDesk from common_client.proto

// Ignoring public import of common_req_kickout from common_client.proto

// Ignoring public import of common_bc_kickout from common_client.proto

// Ignoring public import of common_req_allowance from common_client.proto

// Ignoring public import of common_ack_allowance from common_client.proto

// Ignoring public import of common_req_applyDissolve from common_client.proto

// Ignoring public import of common_bc_applyDissolve from common_client.proto

// Ignoring public import of common_req_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_applyDissolveBack from common_client.proto

// Ignoring public import of common_ack_timeout from common_client.proto

// Ignoring public import of common_bc_userBreak from common_client.proto

// Ignoring public import of common_req_clickStatistic from common_client.proto

// Ignoring public import of common_req_offline from common_client.proto

// Ignoring public import of common_req_upload_location from common_client.proto

// Ignoring public import of common_bc_leaveTimeout from common_client.proto

// Ignoring public import of common_desk_by_agent from common_client.proto

// Ignoring public import of common_enum_reg from common_client.proto

// Ignoring public import of common_enum_os_type from common_client.proto

// Ignoring public import of common_enum_pokerColor from common_client.proto

// Ignoring public import of MJPlayerInfo from majiang_base.proto

// Ignoring public import of MJDeskGameInfo from majiang_base.proto

// Ignoring public import of mj_enum_protoId from majiang_base.proto

// Ignoring public import of MJOption from majiang_base.proto

type ExchangeType int32

const (
	ExchangeType_EXCHANGE_TYPE_DUIJIA      ExchangeType = 0
	ExchangeType_EXCHANGE_TYPE_SHUNSHIZHEN ExchangeType = 1
	ExchangeType_EXCHANGE_TYPE_NISHIZHEN   ExchangeType = 2
)

var ExchangeType_name = map[int32]string{
	0: "EXCHANGE_TYPE_DUIJIA",
	1: "EXCHANGE_TYPE_SHUNSHIZHEN",
	2: "EXCHANGE_TYPE_NISHIZHEN",
}
var ExchangeType_value = map[string]int32{
	"EXCHANGE_TYPE_DUIJIA":      0,
	"EXCHANGE_TYPE_SHUNSHIZHEN": 1,
	"EXCHANGE_TYPE_NISHIZHEN":   2,
}

func (x ExchangeType) Enum() *ExchangeType {
	p := new(ExchangeType)
	*p = x
	return p
}
func (x ExchangeType) String() string {
	return proto.EnumName(ExchangeType_name, int32(x))
}
func (x *ExchangeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExchangeType_value, data, "ExchangeType")
	if err != nil {
		return err
	}
	*x = ExchangeType(value)
	return nil
}
func (ExchangeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor33, []int{0} }

type RECONNECT_TYPE int32

const (
	RECONNECT_TYPE_NORMAL    RECONNECT_TYPE = 1
	RECONNECT_TYPE_RECONNECT RECONNECT_TYPE = 2
)

var RECONNECT_TYPE_name = map[int32]string{
	1: "NORMAL",
	2: "RECONNECT",
}
var RECONNECT_TYPE_value = map[string]int32{
	"NORMAL":    1,
	"RECONNECT": 2,
}

func (x RECONNECT_TYPE) Enum() *RECONNECT_TYPE {
	p := new(RECONNECT_TYPE)
	*p = x
	return p
}
func (x RECONNECT_TYPE) String() string {
	return proto.EnumName(RECONNECT_TYPE_name, int32(x))
}
func (x *RECONNECT_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RECONNECT_TYPE_value, data, "RECONNECT_TYPE")
	if err != nil {
		return err
	}
	*x = RECONNECT_TYPE(value)
	return nil
}
func (RECONNECT_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor33, []int{1} }

type UserCoinBean struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Coin             *int64  `protobuf:"varint,2,opt,name=coin" json:"coin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserCoinBean) Reset()                    { *m = UserCoinBean{} }
func (m *UserCoinBean) String() string            { return proto.CompactTextString(m) }
func (*UserCoinBean) ProtoMessage()               {}
func (*UserCoinBean) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{0} }

func (m *UserCoinBean) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *UserCoinBean) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

// 开局（接收服务端消息）
type Game_Opening struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CurrPlayCount    *int32          `protobuf:"varint,2,opt,name=CurrPlayCount" json:"CurrPlayCount,omitempty"`
	Dice1            *int32          `protobuf:"varint,3,opt,name=dice1" json:"dice1,omitempty"`
	Dice2            *int32          `protobuf:"varint,4,opt,name=dice2" json:"dice2,omitempty"`
	UserCoinBeans    []*UserCoinBean `protobuf:"bytes,5,rep,name=userCoinBeans" json:"userCoinBeans,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Game_Opening) Reset()                    { *m = Game_Opening{} }
func (m *Game_Opening) String() string            { return proto.CompactTextString(m) }
func (*Game_Opening) ProtoMessage()               {}
func (*Game_Opening) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{1} }

func (m *Game_Opening) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_Opening) GetCurrPlayCount() int32 {
	if m != nil && m.CurrPlayCount != nil {
		return *m.CurrPlayCount
	}
	return 0
}

func (m *Game_Opening) GetDice1() int32 {
	if m != nil && m.Dice1 != nil {
		return *m.Dice1
	}
	return 0
}

func (m *Game_Opening) GetDice2() int32 {
	if m != nil && m.Dice2 != nil {
		return *m.Dice2
	}
	return 0
}

func (m *Game_Opening) GetUserCoinBeans() []*UserCoinBean {
	if m != nil {
		return m.UserCoinBeans
	}
	return nil
}

// 发牌
type Game_DealCards struct {
	Header           *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PlayerCard       []*PlayerCard `protobuf:"bytes,2,rep,name=playerCard" json:"playerCard,omitempty"`
	DealerUserId     *uint32       `protobuf:"varint,3,opt,name=dealerUserId" json:"dealerUserId,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Game_DealCards) Reset()                    { *m = Game_DealCards{} }
func (m *Game_DealCards) String() string            { return proto.CompactTextString(m) }
func (*Game_DealCards) ProtoMessage()               {}
func (*Game_DealCards) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{2} }

func (m *Game_DealCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DealCards) GetPlayerCard() []*PlayerCard {
	if m != nil {
		return m.PlayerCard
	}
	return nil
}

func (m *Game_DealCards) GetDealerUserId() uint32 {
	if m != nil && m.DealerUserId != nil {
		return *m.DealerUserId
	}
	return 0
}

// 换牌（3张）
type Game_ExchangeCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ExchangeOutCards []*CardInfo  `protobuf:"bytes,2,rep,name=exchangeOutCards" json:"exchangeOutCards,omitempty"`
	UserId           *uint32      `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	ExchangeNum      *int32       `protobuf:"varint,4,opt,name=exchangeNum" json:"exchangeNum,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ExchangeCards) Reset()                    { *m = Game_ExchangeCards{} }
func (m *Game_ExchangeCards) String() string            { return proto.CompactTextString(m) }
func (*Game_ExchangeCards) ProtoMessage()               {}
func (*Game_ExchangeCards) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{3} }

func (m *Game_ExchangeCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ExchangeCards) GetExchangeOutCards() []*CardInfo {
	if m != nil {
		return m.ExchangeOutCards
	}
	return nil
}

func (m *Game_ExchangeCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ExchangeCards) GetExchangeNum() int32 {
	if m != nil && m.ExchangeNum != nil {
		return *m.ExchangeNum
	}
	return 0
}

// 发海底牌：长沙麻将需要询问是否需要海底牌
type Game_DealHaiDiCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	HaidiCard        *CardInfo    `protobuf:"bytes,2,opt,name=haidiCard" json:"haidiCard,omitempty"`
	UserId           *uint32      `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_DealHaiDiCards) Reset()                    { *m = Game_DealHaiDiCards{} }
func (m *Game_DealHaiDiCards) String() string            { return proto.CompactTextString(m) }
func (*Game_DealHaiDiCards) ProtoMessage()               {}
func (*Game_DealHaiDiCards) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{4} }

func (m *Game_DealHaiDiCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DealHaiDiCards) GetHaidiCard() *CardInfo {
	if m != nil {
		return m.HaidiCard
	}
	return nil
}

func (m *Game_DealHaiDiCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type Game_ReqDealHaiDiCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Need             *bool        `protobuf:"varint,3,opt,name=need" json:"need,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ReqDealHaiDiCards) Reset()                    { *m = Game_ReqDealHaiDiCards{} }
func (m *Game_ReqDealHaiDiCards) String() string            { return proto.CompactTextString(m) }
func (*Game_ReqDealHaiDiCards) ProtoMessage()               {}
func (*Game_ReqDealHaiDiCards) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{5} }

func (m *Game_ReqDealHaiDiCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ReqDealHaiDiCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ReqDealHaiDiCards) GetNeed() bool {
	if m != nil && m.Need != nil {
		return *m.Need
	}
	return false
}

type Game_AckDealHaiDiCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Need             *bool        `protobuf:"varint,3,opt,name=need" json:"need,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckDealHaiDiCards) Reset()                    { *m = Game_AckDealHaiDiCards{} }
func (m *Game_AckDealHaiDiCards) String() string            { return proto.CompactTextString(m) }
func (*Game_AckDealHaiDiCards) ProtoMessage()               {}
func (*Game_AckDealHaiDiCards) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{6} }

func (m *Game_AckDealHaiDiCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckDealHaiDiCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_AckDealHaiDiCards) GetNeed() bool {
	if m != nil && m.Need != nil {
		return *m.Need
	}
	return false
}

//
type Game_AckExchangeCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	ExchangeOutCards []*CardInfo  `protobuf:"bytes,3,rep,name=exchangeOutCards" json:"exchangeOutCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckExchangeCards) Reset()                    { *m = Game_AckExchangeCards{} }
func (m *Game_AckExchangeCards) String() string            { return proto.CompactTextString(m) }
func (*Game_AckExchangeCards) ProtoMessage()               {}
func (*Game_AckExchangeCards) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{7} }

func (m *Game_AckExchangeCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckExchangeCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_AckExchangeCards) GetExchangeOutCards() []*CardInfo {
	if m != nil {
		return m.ExchangeOutCards
	}
	return nil
}

type Game_ExchangeCardsEnd struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ExchangeInCards  []*CardInfo  `protobuf:"bytes,2,rep,name=exchangeInCards" json:"exchangeInCards,omitempty"`
	ExchangeNum      *int32       `protobuf:"varint,3,opt,name=exchangeNum" json:"exchangeNum,omitempty"`
	ExchangeType     *int32       `protobuf:"varint,4,opt,name=exchangeType" json:"exchangeType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ExchangeCardsEnd) Reset()                    { *m = Game_ExchangeCardsEnd{} }
func (m *Game_ExchangeCardsEnd) String() string            { return proto.CompactTextString(m) }
func (*Game_ExchangeCardsEnd) ProtoMessage()               {}
func (*Game_ExchangeCardsEnd) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{8} }

func (m *Game_ExchangeCardsEnd) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ExchangeCardsEnd) GetExchangeInCards() []*CardInfo {
	if m != nil {
		return m.ExchangeInCards
	}
	return nil
}

func (m *Game_ExchangeCardsEnd) GetExchangeNum() int32 {
	if m != nil && m.ExchangeNum != nil {
		return *m.ExchangeNum
	}
	return 0
}

func (m *Game_ExchangeCardsEnd) GetExchangeType() int32 {
	if m != nil && m.ExchangeType != nil {
		return *m.ExchangeType
	}
	return 0
}

// 定缺（和个人玩家ACK）
type Game_DingQue struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Color            *int32       `protobuf:"varint,2,opt,name=color" json:"color,omitempty"`
	UserId           *uint32      `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_DingQue) Reset()                    { *m = Game_DingQue{} }
func (m *Game_DingQue) String() string            { return proto.CompactTextString(m) }
func (*Game_DingQue) ProtoMessage()               {}
func (*Game_DingQue) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{9} }

func (m *Game_DingQue) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DingQue) GetColor() int32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *Game_DingQue) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type DingQueEndBean struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Flower           *int32  `protobuf:"varint,2,opt,name=flower" json:"flower,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DingQueEndBean) Reset()                    { *m = DingQueEndBean{} }
func (m *DingQueEndBean) String() string            { return proto.CompactTextString(m) }
func (*DingQueEndBean) ProtoMessage()               {}
func (*DingQueEndBean) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{10} }

func (m *DingQueEndBean) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *DingQueEndBean) GetFlower() int32 {
	if m != nil && m.Flower != nil {
		return *m.Flower
	}
	return 0
}

type Game_DingQueEnd struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Ques             []*DingQueEndBean `protobuf:"bytes,2,rep,name=Ques" json:"Ques,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Game_DingQueEnd) Reset()                    { *m = Game_DingQueEnd{} }
func (m *Game_DingQueEnd) String() string            { return proto.CompactTextString(m) }
func (*Game_DingQueEnd) ProtoMessage()               {}
func (*Game_DingQueEnd) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{11} }

func (m *Game_DingQueEnd) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DingQueEnd) GetQues() []*DingQueEndBean {
	if m != nil {
		return m.Ques
	}
	return nil
}

// 定缺开始广播（和ACK）
type Game_BroadcastBeginDingQue struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Color            []int32      `protobuf:"varint,2,rep,name=color" json:"color,omitempty"`
	Reconnect        *bool        `protobuf:"varint,3,opt,name=reconnect" json:"reconnect,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_BroadcastBeginDingQue) Reset()                    { *m = Game_BroadcastBeginDingQue{} }
func (m *Game_BroadcastBeginDingQue) String() string            { return proto.CompactTextString(m) }
func (*Game_BroadcastBeginDingQue) ProtoMessage()               {}
func (*Game_BroadcastBeginDingQue) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{12} }

func (m *Game_BroadcastBeginDingQue) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_BroadcastBeginDingQue) GetColor() []int32 {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *Game_BroadcastBeginDingQue) GetReconnect() bool {
	if m != nil && m.Reconnect != nil {
		return *m.Reconnect
	}
	return false
}

// 换牌开始(广播)
type Game_BroadcastBeginExchange struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Reconnect        *bool        `protobuf:"varint,2,opt,name=reconnect" json:"reconnect,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_BroadcastBeginExchange) Reset()                    { *m = Game_BroadcastBeginExchange{} }
func (m *Game_BroadcastBeginExchange) String() string            { return proto.CompactTextString(m) }
func (*Game_BroadcastBeginExchange) ProtoMessage()               {}
func (*Game_BroadcastBeginExchange) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{13} }

func (m *Game_BroadcastBeginExchange) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_BroadcastBeginExchange) GetReconnect() bool {
	if m != nil && m.Reconnect != nil {
		return *m.Reconnect
	}
	return false
}

// 摸牌
type Game_GetInCard struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Card             *CardInfo    `protobuf:"bytes,2,opt,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_GetInCard) Reset()                    { *m = Game_GetInCard{} }
func (m *Game_GetInCard) String() string            { return proto.CompactTextString(m) }
func (*Game_GetInCard) ProtoMessage()               {}
func (*Game_GetInCard) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{14} }

func (m *Game_GetInCard) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_GetInCard) GetCard() *CardInfo {
	if m != nil {
		return m.Card
	}
	return nil
}

// 出牌
type Game_SendOutCard struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CardId           *int32       `protobuf:"varint,2,opt,name=cardId" json:"cardId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_SendOutCard) Reset()                    { *m = Game_SendOutCard{} }
func (m *Game_SendOutCard) String() string            { return proto.CompactTextString(m) }
func (*Game_SendOutCard) ProtoMessage()               {}
func (*Game_SendOutCard) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{15} }

func (m *Game_SendOutCard) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SendOutCard) GetCardId() int32 {
	if m != nil && m.CardId != nil {
		return *m.CardId
	}
	return 0
}

type Game_AckSendOutCard struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Result           *int32       `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	UserId           *uint32      `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	Card             *CardInfo    `protobuf:"bytes,4,opt,name=card" json:"card,omitempty"`
	Card2            *CardInfo    `protobuf:"bytes,5,opt,name=card2" json:"card2,omitempty"`
	IsAuto           *bool        `protobuf:"varint,6,opt,name=isAuto" json:"isAuto,omitempty"`
	HandPaiCount     *int32       `protobuf:"varint,7,opt,name=handPaiCount" json:"handPaiCount,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckSendOutCard) Reset()                    { *m = Game_AckSendOutCard{} }
func (m *Game_AckSendOutCard) String() string            { return proto.CompactTextString(m) }
func (*Game_AckSendOutCard) ProtoMessage()               {}
func (*Game_AckSendOutCard) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{16} }

func (m *Game_AckSendOutCard) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckSendOutCard) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *Game_AckSendOutCard) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_AckSendOutCard) GetCard() *CardInfo {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *Game_AckSendOutCard) GetCard2() *CardInfo {
	if m != nil {
		return m.Card2
	}
	return nil
}

func (m *Game_AckSendOutCard) GetIsAuto() bool {
	if m != nil && m.IsAuto != nil {
		return *m.IsAuto
	}
	return false
}

func (m *Game_AckSendOutCard) GetHandPaiCount() int32 {
	if m != nil && m.HandPaiCount != nil {
		return *m.HandPaiCount
	}
	return 0
}

// 碰牌
type Game_ActPeng struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	PengCard         *CardInfo    `protobuf:"bytes,3,opt,name=pengCard" json:"pengCard,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActPeng) Reset()                    { *m = Game_ActPeng{} }
func (m *Game_ActPeng) String() string            { return proto.CompactTextString(m) }
func (*Game_ActPeng) ProtoMessage()               {}
func (*Game_ActPeng) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{17} }

func (m *Game_ActPeng) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActPeng) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ActPeng) GetPengCard() *CardInfo {
	if m != nil {
		return m.PengCard
	}
	return nil
}

type Game_AckActPeng struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PengCard         []*CardInfo  `protobuf:"bytes,2,rep,name=pengCard" json:"pengCard,omitempty"`
	UserIdOut        *uint32      `protobuf:"varint,3,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32      `protobuf:"varint,4,opt,name=userIdIn" json:"userIdIn,omitempty"`
	JiaoInfos        []*JiaoInfo  `protobuf:"bytes,5,rep,name=jiaoInfos" json:"jiaoInfos,omitempty"`
	IsQiang          *bool        `protobuf:"varint,6,opt,name=isQiang" json:"isQiang,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckActPeng) Reset()                    { *m = Game_AckActPeng{} }
func (m *Game_AckActPeng) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActPeng) ProtoMessage()               {}
func (*Game_AckActPeng) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{18} }

func (m *Game_AckActPeng) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActPeng) GetPengCard() []*CardInfo {
	if m != nil {
		return m.PengCard
	}
	return nil
}

func (m *Game_AckActPeng) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_AckActPeng) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *Game_AckActPeng) GetJiaoInfos() []*JiaoInfo {
	if m != nil {
		return m.JiaoInfos
	}
	return nil
}

func (m *Game_AckActPeng) GetIsQiang() bool {
	if m != nil && m.IsQiang != nil {
		return *m.IsQiang
	}
	return false
}

// 吃牌
type Game_ActChi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	ChiCard          *CardInfo    `protobuf:"bytes,3,opt,name=chiCard" json:"chiCard,omitempty"`
	ChooseCards      []*CardInfo  `protobuf:"bytes,4,rep,name=chooseCards" json:"chooseCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActChi) Reset()                    { *m = Game_ActChi{} }
func (m *Game_ActChi) String() string            { return proto.CompactTextString(m) }
func (*Game_ActChi) ProtoMessage()               {}
func (*Game_ActChi) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{19} }

func (m *Game_ActChi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActChi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ActChi) GetChiCard() *CardInfo {
	if m != nil {
		return m.ChiCard
	}
	return nil
}

func (m *Game_ActChi) GetChooseCards() []*CardInfo {
	if m != nil {
		return m.ChooseCards
	}
	return nil
}

type Game_AckActChi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ChiCard          []*CardInfo  `protobuf:"bytes,2,rep,name=chiCard" json:"chiCard,omitempty"`
	UserIdOut        *uint32      `protobuf:"varint,3,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32      `protobuf:"varint,4,opt,name=userIdIn" json:"userIdIn,omitempty"`
	JiaoInfos        []*JiaoInfo  `protobuf:"bytes,5,rep,name=jiaoInfos" json:"jiaoInfos,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckActChi) Reset()                    { *m = Game_AckActChi{} }
func (m *Game_AckActChi) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActChi) ProtoMessage()               {}
func (*Game_AckActChi) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{20} }

func (m *Game_AckActChi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActChi) GetChiCard() []*CardInfo {
	if m != nil {
		return m.ChiCard
	}
	return nil
}

func (m *Game_AckActChi) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_AckActChi) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *Game_AckActChi) GetJiaoInfos() []*JiaoInfo {
	if m != nil {
		return m.JiaoInfos
	}
	return nil
}

// 杠牌
type Game_ActGang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	GangCard         *CardInfo    `protobuf:"bytes,3,opt,name=gangCard" json:"gangCard,omitempty"`
	Bu               *bool        `protobuf:"varint,4,opt,name=bu" json:"bu,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActGang) Reset()                    { *m = Game_ActGang{} }
func (m *Game_ActGang) String() string            { return proto.CompactTextString(m) }
func (*Game_ActGang) ProtoMessage()               {}
func (*Game_ActGang) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{21} }

func (m *Game_ActGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActGang) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ActGang) GetGangCard() *CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

func (m *Game_ActGang) GetBu() bool {
	if m != nil && m.Bu != nil {
		return *m.Bu
	}
	return false
}

type Game_AckActGang struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GangType         *int32          `protobuf:"varint,2,opt,name=gangType" json:"gangType,omitempty"`
	GangCard         []*CardInfo     `protobuf:"bytes,3,rep,name=GangCard" json:"GangCard,omitempty"`
	UserIdOut        *uint32         `protobuf:"varint,4,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32         `protobuf:"varint,5,opt,name=userIdIn" json:"userIdIn,omitempty"`
	ChangShaBu       *bool           `protobuf:"varint,6,opt,name=changShaBu" json:"changShaBu,omitempty"`
	UserCoinBeans    []*UserCoinBean `protobuf:"bytes,7,rep,name=userCoinBeans" json:"userCoinBeans,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Game_AckActGang) Reset()                    { *m = Game_AckActGang{} }
func (m *Game_AckActGang) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActGang) ProtoMessage()               {}
func (*Game_AckActGang) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{22} }

func (m *Game_AckActGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActGang) GetGangType() int32 {
	if m != nil && m.GangType != nil {
		return *m.GangType
	}
	return 0
}

func (m *Game_AckActGang) GetGangCard() []*CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

func (m *Game_AckActGang) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_AckActGang) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *Game_AckActGang) GetChangShaBu() bool {
	if m != nil && m.ChangShaBu != nil {
		return *m.ChangShaBu
	}
	return false
}

func (m *Game_AckActGang) GetUserCoinBeans() []*UserCoinBean {
	if m != nil {
		return m.UserCoinBeans
	}
	return nil
}

// 长沙杠牌杠牌
type Game_ChangShaActGang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	GangCard         *CardInfo    `protobuf:"bytes,3,opt,name=gangCard" json:"gangCard,omitempty"`
	ChangShaGang     *bool        `protobuf:"varint,4,opt,name=changShaGang" json:"changShaGang,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ChangShaActGang) Reset()                    { *m = Game_ChangShaActGang{} }
func (m *Game_ChangShaActGang) String() string            { return proto.CompactTextString(m) }
func (*Game_ChangShaActGang) ProtoMessage()               {}
func (*Game_ChangShaActGang) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{23} }

func (m *Game_ChangShaActGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ChangShaActGang) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ChangShaActGang) GetGangCard() *CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

func (m *Game_ChangShaActGang) GetChangShaGang() bool {
	if m != nil && m.ChangShaGang != nil {
		return *m.ChangShaGang
	}
	return false
}

// 长沙杠牌回复
type Game_ChangShaAckActGang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GangType         *int32       `protobuf:"varint,2,opt,name=gangType" json:"gangType,omitempty"`
	GangCard         []*CardInfo  `protobuf:"bytes,3,rep,name=GangCard" json:"GangCard,omitempty"`
	UserIdOut        *uint32      `protobuf:"varint,4,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32      `protobuf:"varint,5,opt,name=userIdIn" json:"userIdIn,omitempty"`
	Bu               *bool        `protobuf:"varint,6,opt,name=bu" json:"bu,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ChangShaAckActGang) Reset()                    { *m = Game_ChangShaAckActGang{} }
func (m *Game_ChangShaAckActGang) String() string            { return proto.CompactTextString(m) }
func (*Game_ChangShaAckActGang) ProtoMessage()               {}
func (*Game_ChangShaAckActGang) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{24} }

func (m *Game_ChangShaAckActGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ChangShaAckActGang) GetGangType() int32 {
	if m != nil && m.GangType != nil {
		return *m.GangType
	}
	return 0
}

func (m *Game_ChangShaAckActGang) GetGangCard() []*CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

func (m *Game_ChangShaAckActGang) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_ChangShaAckActGang) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *Game_ChangShaAckActGang) GetBu() bool {
	if m != nil && m.Bu != nil {
		return *m.Bu
	}
	return false
}

// 胡牌
type Game_ActHu struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	HuCard           *CardInfo    `protobuf:"bytes,3,opt,name=huCard" json:"huCard,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActHu) Reset()                    { *m = Game_ActHu{} }
func (m *Game_ActHu) String() string            { return proto.CompactTextString(m) }
func (*Game_ActHu) ProtoMessage()               {}
func (*Game_ActHu) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{25} }

func (m *Game_ActHu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActHu) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ActHu) GetHuCard() *CardInfo {
	if m != nil {
		return m.HuCard
	}
	return nil
}

type Game_AckActHu struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	HuType           *int32          `protobuf:"varint,2,opt,name=huType" json:"huType,omitempty"`
	HuCard           *CardInfo       `protobuf:"bytes,3,opt,name=huCard" json:"huCard,omitempty"`
	UserIdOut        *uint32         `protobuf:"varint,4,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32         `protobuf:"varint,5,opt,name=userIdIn" json:"userIdIn,omitempty"`
	IsZiMo           *bool           `protobuf:"varint,6,opt,name=isZiMo" json:"isZiMo,omitempty"`
	PaiType          []PaiType       `protobuf:"varint,7,rep,name=paiType,enum=ddproto.PaiType" json:"paiType,omitempty"`
	UserCoinBeans    []*UserCoinBean `protobuf:"bytes,8,rep,name=userCoinBeans" json:"userCoinBeans,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Game_AckActHu) Reset()                    { *m = Game_AckActHu{} }
func (m *Game_AckActHu) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActHu) ProtoMessage()               {}
func (*Game_AckActHu) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{26} }

func (m *Game_AckActHu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActHu) GetHuType() int32 {
	if m != nil && m.HuType != nil {
		return *m.HuType
	}
	return 0
}

func (m *Game_AckActHu) GetHuCard() *CardInfo {
	if m != nil {
		return m.HuCard
	}
	return nil
}

func (m *Game_AckActHu) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_AckActHu) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *Game_AckActHu) GetIsZiMo() bool {
	if m != nil && m.IsZiMo != nil {
		return *m.IsZiMo
	}
	return false
}

func (m *Game_AckActHu) GetPaiType() []PaiType {
	if m != nil {
		return m.PaiType
	}
	return nil
}

func (m *Game_AckActHu) GetUserCoinBeans() []*UserCoinBean {
	if m != nil {
		return m.UserCoinBeans
	}
	return nil
}

// 长沙起手胡牌
type Game_ActChangShaQiShouHu struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Hu               *bool        `protobuf:"varint,3,opt,name=hu" json:"hu,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActChangShaQiShouHu) Reset()                    { *m = Game_ActChangShaQiShouHu{} }
func (m *Game_ActChangShaQiShouHu) String() string            { return proto.CompactTextString(m) }
func (*Game_ActChangShaQiShouHu) ProtoMessage()               {}
func (*Game_ActChangShaQiShouHu) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{27} }

func (m *Game_ActChangShaQiShouHu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActChangShaQiShouHu) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ActChangShaQiShouHu) GetHu() bool {
	if m != nil && m.Hu != nil {
		return *m.Hu
	}
	return false
}

// 长沙起手胡牌 这里需要广播
type Game_AckActChangShaQiShouHu struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	HuType           *int32       `protobuf:"varint,2,opt,name=huType" json:"huType,omitempty"`
	HandPais         []*CardInfo  `protobuf:"bytes,3,rep,name=handPais" json:"handPais,omitempty"`
	HuUserId         *uint32      `protobuf:"varint,4,opt,name=huUserId" json:"huUserId,omitempty"`
	PaiType          []PaiType    `protobuf:"varint,5,rep,name=paiType,enum=ddproto.PaiType" json:"paiType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckActChangShaQiShouHu) Reset()                    { *m = Game_AckActChangShaQiShouHu{} }
func (m *Game_AckActChangShaQiShouHu) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActChangShaQiShouHu) ProtoMessage()               {}
func (*Game_AckActChangShaQiShouHu) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{28} }

func (m *Game_AckActChangShaQiShouHu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActChangShaQiShouHu) GetHuType() int32 {
	if m != nil && m.HuType != nil {
		return *m.HuType
	}
	return 0
}

func (m *Game_AckActChangShaQiShouHu) GetHandPais() []*CardInfo {
	if m != nil {
		return m.HandPais
	}
	return nil
}

func (m *Game_AckActChangShaQiShouHu) GetHuUserId() uint32 {
	if m != nil && m.HuUserId != nil {
		return *m.HuUserId
	}
	return 0
}

func (m *Game_AckActChangShaQiShouHu) GetPaiType() []PaiType {
	if m != nil {
		return m.PaiType
	}
	return nil
}

// 长沙麻将的胡牌结果
type Game_AckActHuChangSha struct {
	Hus              []*Game_AckActHu `protobuf:"bytes,1,rep,name=hus" json:"hus,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Game_AckActHuChangSha) Reset()                    { *m = Game_AckActHuChangSha{} }
func (m *Game_AckActHuChangSha) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActHuChangSha) ProtoMessage()               {}
func (*Game_AckActHuChangSha) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{29} }

func (m *Game_AckActHuChangSha) GetHus() []*Game_AckActHu {
	if m != nil {
		return m.Hus
	}
	return nil
}

// 过牌
type Game_ActGuo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActGuo) Reset()                    { *m = Game_ActGuo{} }
func (m *Game_ActGuo) String() string            { return proto.CompactTextString(m) }
func (*Game_ActGuo) ProtoMessage()               {}
func (*Game_ActGuo) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{30} }

func (m *Game_ActGuo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActGuo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 过牌收到服务器确认后，还是要协议 【PID_game_SENDOVERTURN ：game_SendOverTurn】 后结束此轮
type Game_AckActGuo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckActGuo) Reset()                    { *m = Game_AckActGuo{} }
func (m *Game_AckActGuo) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActGuo) ProtoMessage()               {}
func (*Game_AckActGuo) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{31} }

func (m *Game_AckActGuo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActGuo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 一般OverTurn 只有一张牌，可以对于长沙麻将，在杠之后会有两张牌，这了需要特殊处理
type Game_ChangShaOverTurnAfterGang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CanHu            *bool        `protobuf:"varint,2,opt,name=canHu" json:"canHu,omitempty"`
	CanGuo           *bool        `protobuf:"varint,3,opt,name=canGuo" json:"canGuo,omitempty"`
	GangPai          []*CardInfo  `protobuf:"bytes,4,rep,name=gangPai" json:"gangPai,omitempty"`
	HuCards          []*CardInfo  `protobuf:"bytes,5,rep,name=huCards" json:"huCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ChangShaOverTurnAfterGang) Reset()         { *m = Game_ChangShaOverTurnAfterGang{} }
func (m *Game_ChangShaOverTurnAfterGang) String() string { return proto.CompactTextString(m) }
func (*Game_ChangShaOverTurnAfterGang) ProtoMessage()    {}
func (*Game_ChangShaOverTurnAfterGang) Descriptor() ([]byte, []int) {
	return fileDescriptor33, []int{32}
}

func (m *Game_ChangShaOverTurnAfterGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ChangShaOverTurnAfterGang) GetCanHu() bool {
	if m != nil && m.CanHu != nil {
		return *m.CanHu
	}
	return false
}

func (m *Game_ChangShaOverTurnAfterGang) GetCanGuo() bool {
	if m != nil && m.CanGuo != nil {
		return *m.CanGuo
	}
	return false
}

func (m *Game_ChangShaOverTurnAfterGang) GetGangPai() []*CardInfo {
	if m != nil {
		return m.GangPai
	}
	return nil
}

func (m *Game_ChangShaOverTurnAfterGang) GetHuCards() []*CardInfo {
	if m != nil {
		return m.HuCards
	}
	return nil
}

type Game_ChangshQiShouHuOverTurn struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ChangshQiShouHuOverTurn) Reset()                    { *m = Game_ChangshQiShouHuOverTurn{} }
func (m *Game_ChangshQiShouHuOverTurn) String() string            { return proto.CompactTextString(m) }
func (*Game_ChangshQiShouHuOverTurn) ProtoMessage()               {}
func (*Game_ChangshQiShouHuOverTurn) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{33} }

func (m *Game_ChangshQiShouHuOverTurn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 轮到谁操作(摸牌、碰/杠/过/胡)
type Game_OverTurn struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32        `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	NextUserId       *uint32        `protobuf:"varint,3,opt,name=nextUserId" json:"nextUserId,omitempty"`
	ActType          *int32         `protobuf:"varint,4,opt,name=actType" json:"actType,omitempty"`
	CanPeng          *bool          `protobuf:"varint,5,opt,name=canPeng" json:"canPeng,omitempty"`
	CanGang          *bool          `protobuf:"varint,6,opt,name=canGang" json:"canGang,omitempty"`
	CanHu            *bool          `protobuf:"varint,7,opt,name=canHu" json:"canHu,omitempty"`
	ActCard          *CardInfo      `protobuf:"bytes,8,opt,name=actCard" json:"actCard,omitempty"`
	GangCards        []*CardInfo    `protobuf:"bytes,9,rep,name=gangCards" json:"gangCards,omitempty"`
	Time             *int32         `protobuf:"varint,10,opt,name=time" json:"time,omitempty"`
	PaiCount         *int32         `protobuf:"varint,11,opt,name=paiCount" json:"paiCount,omitempty"`
	JiaoInfos        []*JiaoInfo    `protobuf:"bytes,12,rep,name=jiaoInfos" json:"jiaoInfos,omitempty"`
	CanChi           *bool          `protobuf:"varint,13,opt,name=canChi" json:"canChi,omitempty"`
	ChiInfo          []*ChiOverTurn `protobuf:"bytes,14,rep,name=chiInfo" json:"chiInfo,omitempty"`
	CanBu            *bool          `protobuf:"varint,15,opt,name=canBu" json:"canBu,omitempty"`
	CanGuo           *bool          `protobuf:"varint,16,opt,name=canGuo" json:"canGuo,omitempty"`
	BuCards          []*CardInfo    `protobuf:"bytes,17,rep,name=buCards" json:"buCards,omitempty"`
	CanTing          *bool          `protobuf:"varint,18,opt,name=canTing" json:"canTing,omitempty"`
	IsBaoTingAgent   *bool          `protobuf:"varint,19,opt,name=isBaoTingAgent" json:"isBaoTingAgent,omitempty"`
	CanFly           *bool          `protobuf:"varint,20,opt,name=canFly" json:"canFly,omitempty"`
	CanTi            *bool          `protobuf:"varint,21,opt,name=canTi" json:"canTi,omitempty"`
	TiCards          []*CardInfo    `protobuf:"bytes,22,rep,name=tiCards" json:"tiCards,omitempty"`
	UserIdOut        *uint32        `protobuf:"varint,23,opt,name=userIdOut" json:"userIdOut,omitempty"`
	GangBeans        []*GangBean    `protobuf:"bytes,24,rep,name=gangBeans" json:"gangBeans,omitempty"`
	IsQiang          *bool          `protobuf:"varint,25,opt,name=isQiang" json:"isQiang,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Game_OverTurn) Reset()                    { *m = Game_OverTurn{} }
func (m *Game_OverTurn) String() string            { return proto.CompactTextString(m) }
func (*Game_OverTurn) ProtoMessage()               {}
func (*Game_OverTurn) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{34} }

func (m *Game_OverTurn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_OverTurn) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_OverTurn) GetNextUserId() uint32 {
	if m != nil && m.NextUserId != nil {
		return *m.NextUserId
	}
	return 0
}

func (m *Game_OverTurn) GetActType() int32 {
	if m != nil && m.ActType != nil {
		return *m.ActType
	}
	return 0
}

func (m *Game_OverTurn) GetCanPeng() bool {
	if m != nil && m.CanPeng != nil {
		return *m.CanPeng
	}
	return false
}

func (m *Game_OverTurn) GetCanGang() bool {
	if m != nil && m.CanGang != nil {
		return *m.CanGang
	}
	return false
}

func (m *Game_OverTurn) GetCanHu() bool {
	if m != nil && m.CanHu != nil {
		return *m.CanHu
	}
	return false
}

func (m *Game_OverTurn) GetActCard() *CardInfo {
	if m != nil {
		return m.ActCard
	}
	return nil
}

func (m *Game_OverTurn) GetGangCards() []*CardInfo {
	if m != nil {
		return m.GangCards
	}
	return nil
}

func (m *Game_OverTurn) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Game_OverTurn) GetPaiCount() int32 {
	if m != nil && m.PaiCount != nil {
		return *m.PaiCount
	}
	return 0
}

func (m *Game_OverTurn) GetJiaoInfos() []*JiaoInfo {
	if m != nil {
		return m.JiaoInfos
	}
	return nil
}

func (m *Game_OverTurn) GetCanChi() bool {
	if m != nil && m.CanChi != nil {
		return *m.CanChi
	}
	return false
}

func (m *Game_OverTurn) GetChiInfo() []*ChiOverTurn {
	if m != nil {
		return m.ChiInfo
	}
	return nil
}

func (m *Game_OverTurn) GetCanBu() bool {
	if m != nil && m.CanBu != nil {
		return *m.CanBu
	}
	return false
}

func (m *Game_OverTurn) GetCanGuo() bool {
	if m != nil && m.CanGuo != nil {
		return *m.CanGuo
	}
	return false
}

func (m *Game_OverTurn) GetBuCards() []*CardInfo {
	if m != nil {
		return m.BuCards
	}
	return nil
}

func (m *Game_OverTurn) GetCanTing() bool {
	if m != nil && m.CanTing != nil {
		return *m.CanTing
	}
	return false
}

func (m *Game_OverTurn) GetIsBaoTingAgent() bool {
	if m != nil && m.IsBaoTingAgent != nil {
		return *m.IsBaoTingAgent
	}
	return false
}

func (m *Game_OverTurn) GetCanFly() bool {
	if m != nil && m.CanFly != nil {
		return *m.CanFly
	}
	return false
}

func (m *Game_OverTurn) GetCanTi() bool {
	if m != nil && m.CanTi != nil {
		return *m.CanTi
	}
	return false
}

func (m *Game_OverTurn) GetTiCards() []*CardInfo {
	if m != nil {
		return m.TiCards
	}
	return nil
}

func (m *Game_OverTurn) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_OverTurn) GetGangBeans() []*GangBean {
	if m != nil {
		return m.GangBeans
	}
	return nil
}

func (m *Game_OverTurn) GetIsQiang() bool {
	if m != nil && m.IsQiang != nil {
		return *m.IsQiang
	}
	return false
}

// 吃牌的结构
type ChiOverTurn struct {
	ChiCard          []*CardInfo `protobuf:"bytes,14,rep,name=chiCard" json:"chiCard,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ChiOverTurn) Reset()                    { *m = ChiOverTurn{} }
func (m *ChiOverTurn) String() string            { return proto.CompactTextString(m) }
func (*ChiOverTurn) ProtoMessage()               {}
func (*ChiOverTurn) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{35} }

func (m *ChiOverTurn) GetChiCard() []*CardInfo {
	if m != nil {
		return m.ChiCard
	}
	return nil
}

type JiaoInfo struct {
	OutCard          *CardInfo      `protobuf:"bytes,1,opt,name=outCard" json:"outCard,omitempty"`
	PaiInfos         []*JiaoPaiInfo `protobuf:"bytes,2,rep,name=paiInfos" json:"paiInfos,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *JiaoInfo) Reset()                    { *m = JiaoInfo{} }
func (m *JiaoInfo) String() string            { return proto.CompactTextString(m) }
func (*JiaoInfo) ProtoMessage()               {}
func (*JiaoInfo) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{36} }

func (m *JiaoInfo) GetOutCard() *CardInfo {
	if m != nil {
		return m.OutCard
	}
	return nil
}

func (m *JiaoInfo) GetPaiInfos() []*JiaoPaiInfo {
	if m != nil {
		return m.PaiInfos
	}
	return nil
}

type JiaoPaiInfo struct {
	HuCard           *CardInfo `protobuf:"bytes,1,opt,name=huCard" json:"huCard,omitempty"`
	Fan              *int32    `protobuf:"varint,2,opt,name=fan" json:"fan,omitempty"`
	Count            *int32    `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *JiaoPaiInfo) Reset()                    { *m = JiaoPaiInfo{} }
func (m *JiaoPaiInfo) String() string            { return proto.CompactTextString(m) }
func (*JiaoPaiInfo) ProtoMessage()               {}
func (*JiaoPaiInfo) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{37} }

func (m *JiaoPaiInfo) GetHuCard() *CardInfo {
	if m != nil {
		return m.HuCard
	}
	return nil
}

func (m *JiaoPaiInfo) GetFan() int32 {
	if m != nil && m.Fan != nil {
		return *m.Fan
	}
	return 0
}

func (m *JiaoPaiInfo) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

// 发送游戏信息(广播)
type Game_SendGameInfo struct {
	Header *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// 1. 首先是牌桌的玩家数据（玩家数据包括其id昵称筹码头像等基本信息，其手牌数据，以及自己打出的牌的数据，还有状态是否已经胡牌了，玩家在整局的总输赢）
	PlayerInfo []*MJPlayerInfo `protobuf:"bytes,2,rep,name=playerInfo" json:"playerInfo,omitempty"`
	// 2. 桌面信息（包括：游戏是否结束，当前轮到哪个玩家，倒计时剩余时间）
	DeskGameInfo *MJDeskGameInfo `protobuf:"bytes,3,opt,name=deskGameInfo" json:"deskGameInfo,omitempty"`
	//
	SenderUserId     *uint32         `protobuf:"varint,4,opt,name=senderUserId" json:"senderUserId,omitempty"`
	IsReconnect      *RECONNECT_TYPE `protobuf:"varint,5,opt,name=isReconnect,enum=ddproto.RECONNECT_TYPE" json:"isReconnect,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Game_SendGameInfo) Reset()                    { *m = Game_SendGameInfo{} }
func (m *Game_SendGameInfo) String() string            { return proto.CompactTextString(m) }
func (*Game_SendGameInfo) ProtoMessage()               {}
func (*Game_SendGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{38} }

func (m *Game_SendGameInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SendGameInfo) GetPlayerInfo() []*MJPlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *Game_SendGameInfo) GetDeskGameInfo() *MJDeskGameInfo {
	if m != nil {
		return m.DeskGameInfo
	}
	return nil
}

func (m *Game_SendGameInfo) GetSenderUserId() uint32 {
	if m != nil && m.SenderUserId != nil {
		return *m.SenderUserId
	}
	return 0
}

func (m *Game_SendGameInfo) GetIsReconnect() RECONNECT_TYPE {
	if m != nil && m.IsReconnect != nil {
		return *m.IsReconnect
	}
	return RECONNECT_TYPE_NORMAL
}

type GameReqBuxiazi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	PaiId            *int32       `protobuf:"varint,3,opt,name=paiId" json:"paiId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqBuxiazi) Reset()                    { *m = GameReqBuxiazi{} }
func (m *GameReqBuxiazi) String() string            { return proto.CompactTextString(m) }
func (*GameReqBuxiazi) ProtoMessage()               {}
func (*GameReqBuxiazi) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{39} }

func (m *GameReqBuxiazi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqBuxiazi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameReqBuxiazi) GetPaiId() int32 {
	if m != nil && m.PaiId != nil {
		return *m.PaiId
	}
	return 0
}

type GameAckBuxiazi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BuCards          []*CardInfo  `protobuf:"bytes,2,rep,name=buCards" json:"buCards,omitempty"`
	XiaCouont        *int32       `protobuf:"varint,3,opt,name=xiaCouont" json:"xiaCouont,omitempty"`
	MoCards          []*CardInfo  `protobuf:"bytes,4,rep,name=moCards" json:"moCards,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	IsZhuoXiaBu      *bool        `protobuf:"varint,6,opt,name=IsZhuoXiaBu" json:"IsZhuoXiaBu,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckBuxiazi) Reset()                    { *m = GameAckBuxiazi{} }
func (m *GameAckBuxiazi) String() string            { return proto.CompactTextString(m) }
func (*GameAckBuxiazi) ProtoMessage()               {}
func (*GameAckBuxiazi) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{40} }

func (m *GameAckBuxiazi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckBuxiazi) GetBuCards() []*CardInfo {
	if m != nil {
		return m.BuCards
	}
	return nil
}

func (m *GameAckBuxiazi) GetXiaCouont() int32 {
	if m != nil && m.XiaCouont != nil {
		return *m.XiaCouont
	}
	return 0
}

func (m *GameAckBuxiazi) GetMoCards() []*CardInfo {
	if m != nil {
		return m.MoCards
	}
	return nil
}

func (m *GameAckBuxiazi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameAckBuxiazi) GetIsZhuoXiaBu() bool {
	if m != nil && m.IsZhuoXiaBu != nil {
		return *m.IsZhuoXiaBu
	}
	return false
}

// 报听的广播
type GameBcBaoting struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsBaoTing        *bool        `protobuf:"varint,3,opt,name=isBaoTing" json:"isBaoTing,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameBcBaoting) Reset()                    { *m = GameBcBaoting{} }
func (m *GameBcBaoting) String() string            { return proto.CompactTextString(m) }
func (*GameBcBaoting) ProtoMessage()               {}
func (*GameBcBaoting) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{41} }

func (m *GameBcBaoting) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameBcBaoting) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameBcBaoting) GetIsBaoTing() bool {
	if m != nil && m.IsBaoTing != nil {
		return *m.IsBaoTing
	}
	return false
}

// 玩家请求报听
type GameReqBaoting struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqBaoting) Reset()                    { *m = GameReqBaoting{} }
func (m *GameReqBaoting) String() string            { return proto.CompactTextString(m) }
func (*GameReqBaoting) ProtoMessage()               {}
func (*GameReqBaoting) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{42} }

func (m *GameReqBaoting) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqBaoting) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 回复玩家请求报听 单播
type GameAckBaoting struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	TingInfos        []*JiaoInfo  `protobuf:"bytes,3,rep,name=tingInfos" json:"tingInfos,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckBaoting) Reset()                    { *m = GameAckBaoting{} }
func (m *GameAckBaoting) String() string            { return proto.CompactTextString(m) }
func (*GameAckBaoting) ProtoMessage()               {}
func (*GameAckBaoting) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{43} }

func (m *GameAckBaoting) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckBaoting) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameAckBaoting) GetTingInfos() []*JiaoInfo {
	if m != nil {
		return m.TingInfos
	}
	return nil
}

// 剩余18张牌 如果所有玩家都没有杠
// 开始分张 没人发一张牌
type GameBcFenzhang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Status           *int32       `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameBcFenzhang) Reset()                    { *m = GameBcFenzhang{} }
func (m *GameBcFenzhang) String() string            { return proto.CompactTextString(m) }
func (*GameBcFenzhang) ProtoMessage()               {}
func (*GameBcFenzhang) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{44} }

func (m *GameBcFenzhang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameBcFenzhang) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

// 宜宾麻将 开始飘阶段
type GameBcPiao struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameBcPiao) Reset()                    { *m = GameBcPiao{} }
func (m *GameBcPiao) String() string            { return proto.CompactTextString(m) }
func (*GameBcPiao) ProtoMessage()               {}
func (*GameBcPiao) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{45} }

func (m *GameBcPiao) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 宜宾麻将 飘还是不飘
type GameReqPiao struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	IsPiao           *bool        `protobuf:"varint,2,opt,name=isPiao" json:"isPiao,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqPiao) Reset()                    { *m = GameReqPiao{} }
func (m *GameReqPiao) String() string            { return proto.CompactTextString(m) }
func (*GameReqPiao) ProtoMessage()               {}
func (*GameReqPiao) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{46} }

func (m *GameReqPiao) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqPiao) GetIsPiao() bool {
	if m != nil && m.IsPiao != nil {
		return *m.IsPiao
	}
	return false
}

// 宜宾麻将 玩家选择飘的回复
type GameAckPiao struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsPiao           *bool        `protobuf:"varint,3,opt,name=isPiao" json:"isPiao,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckPiao) Reset()                    { *m = GameAckPiao{} }
func (m *GameAckPiao) String() string            { return proto.CompactTextString(m) }
func (*GameAckPiao) ProtoMessage()               {}
func (*GameAckPiao) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{47} }

func (m *GameAckPiao) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckPiao) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameAckPiao) GetIsPiao() bool {
	if m != nil && m.IsPiao != nil {
		return *m.IsPiao
	}
	return false
}

// 宜宾麻将 广播本金牌
type GameBcBenjin struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Benjin           *CardInfo    `protobuf:"bytes,2,opt,name=benjin" json:"benjin,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameBcBenjin) Reset()                    { *m = GameBcBenjin{} }
func (m *GameBcBenjin) String() string            { return proto.CompactTextString(m) }
func (*GameBcBenjin) ProtoMessage()               {}
func (*GameBcBenjin) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{48} }

func (m *GameBcBenjin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameBcBenjin) GetBenjin() *CardInfo {
	if m != nil {
		return m.Benjin
	}
	return nil
}

// 宜宾麻将 飞
type GameReqFly struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	FlyCard          *CardInfo    `protobuf:"bytes,3,opt,name=flyCard" json:"flyCard,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqFly) Reset()                    { *m = GameReqFly{} }
func (m *GameReqFly) String() string            { return proto.CompactTextString(m) }
func (*GameReqFly) ProtoMessage()               {}
func (*GameReqFly) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{49} }

func (m *GameReqFly) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqFly) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameReqFly) GetFlyCard() *CardInfo {
	if m != nil {
		return m.FlyCard
	}
	return nil
}

type GameAckFly struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	FlyCards         []*CardInfo  `protobuf:"bytes,2,rep,name=flyCards" json:"flyCards,omitempty"`
	UserIdOut        *uint32      `protobuf:"varint,3,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32      `protobuf:"varint,4,opt,name=userIdIn" json:"userIdIn,omitempty"`
	JiaoInfos        []*JiaoInfo  `protobuf:"bytes,5,rep,name=jiaoInfos" json:"jiaoInfos,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckFly) Reset()                    { *m = GameAckFly{} }
func (m *GameAckFly) String() string            { return proto.CompactTextString(m) }
func (*GameAckFly) ProtoMessage()               {}
func (*GameAckFly) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{50} }

func (m *GameAckFly) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckFly) GetFlyCards() []*CardInfo {
	if m != nil {
		return m.FlyCards
	}
	return nil
}

func (m *GameAckFly) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *GameAckFly) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *GameAckFly) GetJiaoInfos() []*JiaoInfo {
	if m != nil {
		return m.JiaoInfos
	}
	return nil
}

// 宜宾麻将 提
type GameReqTi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	TiCard           *CardInfo    `protobuf:"bytes,3,opt,name=tiCard" json:"tiCard,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqTi) Reset()                    { *m = GameReqTi{} }
func (m *GameReqTi) String() string            { return proto.CompactTextString(m) }
func (*GameReqTi) ProtoMessage()               {}
func (*GameReqTi) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{51} }

func (m *GameReqTi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqTi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameReqTi) GetTiCard() *CardInfo {
	if m != nil {
		return m.TiCard
	}
	return nil
}

type GameAckTi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	TiCard           *CardInfo    `protobuf:"bytes,3,opt,name=tiCard" json:"tiCard,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckTi) Reset()                    { *m = GameAckTi{} }
func (m *GameAckTi) String() string            { return proto.CompactTextString(m) }
func (*GameAckTi) ProtoMessage()               {}
func (*GameAckTi) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{52} }

func (m *GameAckTi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckTi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameAckTi) GetTiCard() *CardInfo {
	if m != nil {
		return m.TiCard
	}
	return nil
}

// 下叫提示 打哪张牌能胡哪些牌
type GameAckJiaoinfos struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	JiaoInfos        []*JiaoInfo  `protobuf:"bytes,2,rep,name=jiaoInfos" json:"jiaoInfos,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckJiaoinfos) Reset()                    { *m = GameAckJiaoinfos{} }
func (m *GameAckJiaoinfos) String() string            { return proto.CompactTextString(m) }
func (*GameAckJiaoinfos) ProtoMessage()               {}
func (*GameAckJiaoinfos) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{53} }

func (m *GameAckJiaoinfos) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckJiaoinfos) GetJiaoInfos() []*JiaoInfo {
	if m != nil {
		return m.JiaoInfos
	}
	return nil
}

// 听牌提示 当前手牌能胡哪些牌
type GameAckTinginfos struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PaiInfos         []*JiaoPaiInfo `protobuf:"bytes,2,rep,name=paiInfos" json:"paiInfos,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *GameAckTinginfos) Reset()                    { *m = GameAckTinginfos{} }
func (m *GameAckTinginfos) String() string            { return proto.CompactTextString(m) }
func (*GameAckTinginfos) ProtoMessage()               {}
func (*GameAckTinginfos) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{54} }

func (m *GameAckTinginfos) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckTinginfos) GetPaiInfos() []*JiaoPaiInfo {
	if m != nil {
		return m.PaiInfos
	}
	return nil
}

// 杠牌 请求一组杠牌id 例如: 东南西北 中中中中 东 南
type GameReqGang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GangBean         *GangBean    `protobuf:"bytes,2,opt,name=gangBean" json:"gangBean,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqGang) Reset()                    { *m = GameReqGang{} }
func (m *GameReqGang) String() string            { return proto.CompactTextString(m) }
func (*GameReqGang) ProtoMessage()               {}
func (*GameReqGang) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{55} }

func (m *GameReqGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqGang) GetGangBean() *GangBean {
	if m != nil {
		return m.GangBean
	}
	return nil
}

type GameAckGang struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GangBean         *GangBean       `protobuf:"bytes,3,opt,name=gangBean" json:"gangBean,omitempty"`
	UserIdOut        *uint32         `protobuf:"varint,4,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32         `protobuf:"varint,5,opt,name=userIdIn" json:"userIdIn,omitempty"`
	UserCoinBeans    []*UserCoinBean `protobuf:"bytes,7,rep,name=userCoinBeans" json:"userCoinBeans,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *GameAckGang) Reset()                    { *m = GameAckGang{} }
func (m *GameAckGang) String() string            { return proto.CompactTextString(m) }
func (*GameAckGang) ProtoMessage()               {}
func (*GameAckGang) Descriptor() ([]byte, []int) { return fileDescriptor33, []int{56} }

func (m *GameAckGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckGang) GetGangBean() *GangBean {
	if m != nil {
		return m.GangBean
	}
	return nil
}

func (m *GameAckGang) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *GameAckGang) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *GameAckGang) GetUserCoinBeans() []*UserCoinBean {
	if m != nil {
		return m.UserCoinBeans
	}
	return nil
}

func init() {
	proto.RegisterType((*UserCoinBean)(nil), "ddproto.user_coin_bean")
	proto.RegisterType((*Game_Opening)(nil), "ddproto.game_Opening")
	proto.RegisterType((*Game_DealCards)(nil), "ddproto.game_DealCards")
	proto.RegisterType((*Game_ExchangeCards)(nil), "ddproto.game_ExchangeCards")
	proto.RegisterType((*Game_DealHaiDiCards)(nil), "ddproto.game_DealHaiDiCards")
	proto.RegisterType((*Game_ReqDealHaiDiCards)(nil), "ddproto.game_ReqDealHaiDiCards")
	proto.RegisterType((*Game_AckDealHaiDiCards)(nil), "ddproto.game_AckDealHaiDiCards")
	proto.RegisterType((*Game_AckExchangeCards)(nil), "ddproto.game_AckExchangeCards")
	proto.RegisterType((*Game_ExchangeCardsEnd)(nil), "ddproto.Game_ExchangeCardsEnd")
	proto.RegisterType((*Game_DingQue)(nil), "ddproto.game_DingQue")
	proto.RegisterType((*DingQueEndBean)(nil), "ddproto.DingQueEndBean")
	proto.RegisterType((*Game_DingQueEnd)(nil), "ddproto.game_DingQueEnd")
	proto.RegisterType((*Game_BroadcastBeginDingQue)(nil), "ddproto.game_BroadcastBeginDingQue")
	proto.RegisterType((*Game_BroadcastBeginExchange)(nil), "ddproto.game_BroadcastBeginExchange")
	proto.RegisterType((*Game_GetInCard)(nil), "ddproto.game_GetInCard")
	proto.RegisterType((*Game_SendOutCard)(nil), "ddproto.game_SendOutCard")
	proto.RegisterType((*Game_AckSendOutCard)(nil), "ddproto.game_AckSendOutCard")
	proto.RegisterType((*Game_ActPeng)(nil), "ddproto.game_ActPeng")
	proto.RegisterType((*Game_AckActPeng)(nil), "ddproto.game_AckActPeng")
	proto.RegisterType((*Game_ActChi)(nil), "ddproto.game_ActChi")
	proto.RegisterType((*Game_AckActChi)(nil), "ddproto.game_AckActChi")
	proto.RegisterType((*Game_ActGang)(nil), "ddproto.game_ActGang")
	proto.RegisterType((*Game_AckActGang)(nil), "ddproto.game_AckActGang")
	proto.RegisterType((*Game_ChangShaActGang)(nil), "ddproto.game_ChangShaActGang")
	proto.RegisterType((*Game_ChangShaAckActGang)(nil), "ddproto.game_ChangShaAckActGang")
	proto.RegisterType((*Game_ActHu)(nil), "ddproto.game_ActHu")
	proto.RegisterType((*Game_AckActHu)(nil), "ddproto.game_AckActHu")
	proto.RegisterType((*Game_ActChangShaQiShouHu)(nil), "ddproto.game_ActChangShaQiShouHu")
	proto.RegisterType((*Game_AckActChangShaQiShouHu)(nil), "ddproto.game_AckActChangShaQiShouHu")
	proto.RegisterType((*Game_AckActHuChangSha)(nil), "ddproto.game_AckActHuChangSha")
	proto.RegisterType((*Game_ActGuo)(nil), "ddproto.game_ActGuo")
	proto.RegisterType((*Game_AckActGuo)(nil), "ddproto.game_AckActGuo")
	proto.RegisterType((*Game_ChangShaOverTurnAfterGang)(nil), "ddproto.game_ChangShaOverTurnAfterGang")
	proto.RegisterType((*Game_ChangshQiShouHuOverTurn)(nil), "ddproto.game_ChangshQiShouHuOverTurn")
	proto.RegisterType((*Game_OverTurn)(nil), "ddproto.game_OverTurn")
	proto.RegisterType((*ChiOverTurn)(nil), "ddproto.ChiOverTurn")
	proto.RegisterType((*JiaoInfo)(nil), "ddproto.JiaoInfo")
	proto.RegisterType((*JiaoPaiInfo)(nil), "ddproto.JiaoPaiInfo")
	proto.RegisterType((*Game_SendGameInfo)(nil), "ddproto.game_SendGameInfo")
	proto.RegisterType((*GameReqBuxiazi)(nil), "ddproto.game_req_buxiazi")
	proto.RegisterType((*GameAckBuxiazi)(nil), "ddproto.game_ack_buxiazi")
	proto.RegisterType((*GameBcBaoting)(nil), "ddproto.game_bc_baoting")
	proto.RegisterType((*GameReqBaoting)(nil), "ddproto.game_req_baoting")
	proto.RegisterType((*GameAckBaoting)(nil), "ddproto.game_ack_baoting")
	proto.RegisterType((*GameBcFenzhang)(nil), "ddproto.game_bc_fenzhang")
	proto.RegisterType((*GameBcPiao)(nil), "ddproto.game_bc_piao")
	proto.RegisterType((*GameReqPiao)(nil), "ddproto.game_req_piao")
	proto.RegisterType((*GameAckPiao)(nil), "ddproto.game_ack_piao")
	proto.RegisterType((*GameBcBenjin)(nil), "ddproto.game_bc_benjin")
	proto.RegisterType((*GameReqFly)(nil), "ddproto.game_req_fly")
	proto.RegisterType((*GameAckFly)(nil), "ddproto.game_ack_fly")
	proto.RegisterType((*GameReqTi)(nil), "ddproto.game_req_ti")
	proto.RegisterType((*GameAckTi)(nil), "ddproto.game_ack_ti")
	proto.RegisterType((*GameAckJiaoinfos)(nil), "ddproto.game_ack_jiaoinfos")
	proto.RegisterType((*GameAckTinginfos)(nil), "ddproto.game_ack_tinginfos")
	proto.RegisterType((*GameReqGang)(nil), "ddproto.game_req_gang")
	proto.RegisterType((*GameAckGang)(nil), "ddproto.game_ack_gang")
	proto.RegisterEnum("ddproto.ExchangeType", ExchangeType_name, ExchangeType_value)
	proto.RegisterEnum("ddproto.RECONNECT_TYPE", RECONNECT_TYPE_name, RECONNECT_TYPE_value)
}

func init() { proto.RegisterFile("majiang_play.proto", fileDescriptor33) }

var fileDescriptor33 = []byte{
	// 1814 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x59, 0x49, 0x73, 0xdb, 0xc8,
	0x15, 0x1e, 0x70, 0x91, 0xc8, 0xc7, 0xc5, 0x14, 0x24, 0x59, 0x18, 0x4f, 0x16, 0x1b, 0xf2, 0x24,
	0x8e, 0x27, 0x51, 0x65, 0x54, 0x39, 0xe6, 0x42, 0x52, 0x1c, 0x92, 0xae, 0x31, 0x45, 0x5b, 0xf2,
	0x2c, 0xaa, 0xa9, 0x30, 0x4d, 0xa0, 0x49, 0xb4, 0x45, 0x35, 0x68, 0x2c, 0x89, 0xe5, 0x3f, 0x90,
	0x4b, 0xaa, 0x72, 0xc9, 0x25, 0xf7, 0xa4, 0x72, 0x9a, 0xca, 0x75, 0x7e, 0x40, 0xfe, 0x43, 0x0e,
	0xf9, 0x13, 0xf9, 0x09, 0xa9, 0xde, 0x00, 0x90, 0x12, 0x68, 0x90, 0xae, 0x71, 0xcd, 0xc5, 0x65,
	0x76, 0xa3, 0xdf, 0x7b, 0xfd, 0xbd, 0xed, 0x7b, 0x2d, 0xd0, 0xaf, 0xd0, 0x4b, 0x82, 0xe8, 0x74,
	0x34, 0x9f, 0xa1, 0xeb, 0xa3, 0xb9, 0xe7, 0x06, 0xae, 0xbe, 0x6d, 0xdb, 0xfc, 0x3f, 0xf7, 0x76,
	0x2d, 0xf7, 0xea, 0xca, 0xa5, 0x23, 0x6b, 0x46, 0x30, 0x0d, 0xc4, 0xee, 0xbd, 0xe8, 0xc4, 0x18,
	0xf9, 0x58, 0xac, 0x99, 0x47, 0x50, 0x0f, 0x7d, 0xec, 0x8d, 0x2c, 0x97, 0xd0, 0xd1, 0x18, 0x23,
	0xaa, 0xd7, 0x61, 0x8b, 0xad, 0xf4, 0x6d, 0x43, 0xbb, 0xaf, 0x3d, 0xaa, 0xe9, 0x55, 0x28, 0xb0,
	0x4d, 0x23, 0x77, 0x5f, 0x7b, 0x94, 0x37, 0xff, 0xa6, 0x41, 0x75, 0x8a, 0xae, 0xf0, 0xe8, 0x74,
	0x8e, 0x29, 0xa1, 0x53, 0xfd, 0x21, 0x6c, 0x39, 0x18, 0xd9, 0xd8, 0xe3, 0x9f, 0x57, 0x8e, 0xf7,
	0x8e, 0xa4, 0x0d, 0x47, 0x43, 0xf6, 0x6f, 0x8f, 0xef, 0xe9, 0xfb, 0x50, 0x6b, 0x87, 0x9e, 0x37,
	0x9c, 0xa1, 0xeb, 0xb6, 0x1b, 0xd2, 0x80, 0x4b, 0x2b, 0xea, 0x35, 0x28, 0xda, 0xc4, 0xc2, 0x9f,
	0x1a, 0xf9, 0xe4, 0xcf, 0x63, 0xa3, 0xc0, 0x7f, 0x1e, 0x41, 0x8d, 0x59, 0xd2, 0x76, 0x09, 0x6d,
	0x61, 0x44, 0x7d, 0xa3, 0x78, 0x3f, 0xff, 0xa8, 0x72, 0x7c, 0x10, 0x69, 0x58, 0xb4, 0xdc, 0x0c,
	0xa1, 0xce, 0x4d, 0x3b, 0xc1, 0x68, 0xd6, 0x46, 0x9e, 0xed, 0x67, 0x34, 0xee, 0xe7, 0x00, 0x0c,
	0x43, 0xec, 0xb1, 0x43, 0x46, 0x8e, 0x2b, 0xd9, 0x8d, 0xbf, 0x8c, 0xb6, 0xf4, 0x3d, 0xa8, 0xda,
	0x18, 0xcd, 0xb0, 0xf7, 0x42, 0x00, 0xc4, 0xac, 0xae, 0x99, 0x7f, 0xd6, 0x40, 0xe7, 0x7a, 0x3b,
	0xaf, 0x2d, 0x07, 0xd1, 0x29, 0x5e, 0x47, 0xf7, 0x27, 0xd0, 0xc0, 0xf2, 0xd8, 0x69, 0x18, 0xf0,
	0x93, 0xd2, 0x82, 0x9d, 0xe8, 0x7b, 0xb6, 0xda, 0xa7, 0x13, 0x37, 0xe1, 0x1a, 0xae, 0x59, 0xdf,
	0x85, 0x8a, 0x3a, 0x3c, 0x08, 0xaf, 0x04, 0x6a, 0xe6, 0x2b, 0xd8, 0x8d, 0x50, 0xe8, 0x21, 0x72,
	0x42, 0xd6, 0x31, 0xe7, 0x21, 0x94, 0x1d, 0x44, 0x6c, 0x22, 0x91, 0xd0, 0x32, 0xd9, 0x61, 0x7e,
	0x03, 0x77, 0xb9, 0xca, 0xe7, 0xf8, 0xd5, 0x46, 0x5a, 0x63, 0x79, 0x39, 0x15, 0x72, 0x14, 0x63,
	0x21, 0xbd, 0x14, 0x49, 0x6f, 0x5a, 0x97, 0xdf, 0x83, 0xf4, 0x37, 0xb0, 0xaf, 0xa4, 0x6f, 0xe2,
	0xbf, 0x65, 0xe1, 0xb7, 0xf9, 0x33, 0x9f, 0xe2, 0x4f, 0xf3, 0xaf, 0x1a, 0xec, 0x77, 0x6f, 0x44,
	0x4e, 0x87, 0xda, 0x19, 0x95, 0x3f, 0x86, 0x3b, 0x4a, 0x59, 0x9f, 0xbe, 0x25, 0x76, 0x96, 0x62,
	0x45, 0x24, 0xdc, 0x1e, 0x54, 0xd5, 0xe2, 0xf9, 0xf5, 0x1c, 0xcb, 0x08, 0x3a, 0x93, 0x29, 0x7e,
	0x42, 0xe8, 0xf4, 0x59, 0x88, 0x33, 0x1a, 0x53, 0x83, 0xa2, 0xe5, 0xce, 0x5c, 0x4f, 0xa6, 0xf6,
	0x72, 0x8c, 0xfc, 0x1a, 0xea, 0x52, 0x5e, 0x87, 0xda, 0xad, 0xdb, 0x0a, 0x4d, 0x1d, 0xb6, 0x26,
	0x33, 0xf7, 0x8f, 0x58, 0x4a, 0x30, 0x7f, 0x07, 0x77, 0x92, 0x66, 0x64, 0x87, 0xe5, 0x63, 0x28,
	0x3c, 0x0b, 0xb1, 0xc2, 0x22, 0x2e, 0x17, 0x8b, 0xfa, 0x4d, 0x1b, 0xee, 0x71, 0xf9, 0x2d, 0xcf,
	0x45, 0xb6, 0x85, 0xfc, 0xa0, 0x85, 0xa7, 0x84, 0x6e, 0x7c, 0xe9, 0xfc, 0xa3, 0xa2, 0xbe, 0x03,
	0x65, 0x0f, 0x5b, 0x2e, 0xa5, 0xd8, 0x0a, 0x64, 0x7c, 0x7d, 0x01, 0x1f, 0xdd, 0xa2, 0x45, 0x39,
	0x3c, 0xa3, 0x9a, 0x05, 0xb9, 0x39, 0x2e, 0xf7, 0x4b, 0x59, 0xec, 0xba, 0x38, 0x10, 0xbe, 0xcf,
	0x28, 0xea, 0xa7, 0x50, 0xb0, 0x56, 0x25, 0xb7, 0xd9, 0x83, 0x06, 0x17, 0x7c, 0x86, 0xa9, 0x2d,
	0x43, 0x38, 0x7b, 0x2e, 0x30, 0xd1, 0x32, 0x17, 0x8a, 0xe6, 0xbf, 0x35, 0x59, 0x8a, 0x9a, 0xd6,
	0xe5, 0x46, 0xd2, 0x3c, 0xec, 0x87, 0xb3, 0xe0, 0xf6, 0x80, 0x8a, 0x2e, 0x52, 0x48, 0xab, 0x52,
	0xf7, 0xa1, 0xc8, 0x3e, 0x38, 0x36, 0x8a, 0x2b, 0xea, 0x18, 0xf1, 0x9b, 0x61, 0xe0, 0x1a, 0x5b,
	0x0c, 0x53, 0x96, 0x0e, 0x0e, 0xa2, 0xf6, 0x10, 0x11, 0xd1, 0xa4, 0xb6, 0xf9, 0x35, 0x88, 0x4c,
	0x87, 0xa6, 0x15, 0x0c, 0x71, 0xe6, 0x8e, 0xb7, 0x5c, 0x18, 0x0e, 0xa1, 0x34, 0xc7, 0x74, 0xca,
	0x0b, 0x6b, 0x3e, 0x0d, 0xfb, 0xef, 0x34, 0x19, 0xf3, 0x4d, 0xeb, 0x72, 0x3d, 0x75, 0x49, 0xf1,
	0xa9, 0x35, 0x60, 0x07, 0xca, 0xc2, 0xa6, 0xd3, 0x30, 0x90, 0x28, 0x36, 0xa0, 0x24, 0x96, 0xfa,
	0x94, 0x23, 0x59, 0x63, 0x2d, 0xe0, 0x25, 0x41, 0x2e, 0x3b, 0xa0, 0x3a, 0x6e, 0x2c, 0xea, 0x89,
	0xdc, 0xd1, 0xef, 0xc0, 0x36, 0xf1, 0x9f, 0x31, 0x36, 0x21, 0xb0, 0x33, 0xff, 0xa2, 0x41, 0x45,
	0xc1, 0xd4, 0x76, 0xc8, 0x86, 0x28, 0x99, 0xb0, 0x6d, 0x39, 0x64, 0x25, 0x48, 0xfa, 0xcf, 0xa0,
	0x62, 0x39, 0xae, 0xeb, 0x8b, 0x6a, 0x69, 0x14, 0xd2, 0xaa, 0xeb, 0x3f, 0x34, 0x99, 0x22, 0x02,
	0xcc, 0xec, 0x46, 0x25, 0x8c, 0x78, 0x0f, 0x50, 0x9a, 0x61, 0x1c, 0x5f, 0x5d, 0xf4, 0x2e, 0xf1,
	0x35, 0x45, 0x6f, 0x89, 0x2f, 0x1d, 0x20, 0x37, 0x0e, 0xb9, 0x71, 0x25, 0xf3, 0x3f, 0x8b, 0xb1,
	0xb6, 0x86, 0xea, 0x86, 0x50, 0xc5, 0x3b, 0x86, 0xc8, 0xcd, 0x43, 0x28, 0x75, 0x63, 0xe5, 0x59,
	0x20, 0x2b, 0xdc, 0x80, 0xac, 0xc8, 0x57, 0x74, 0x00, 0x5e, 0x19, 0xcf, 0x1c, 0xd4, 0x0a, 0x65,
	0x5a, 0xde, 0xe0, 0x81, 0xdb, 0xab, 0x79, 0xe0, 0x9f, 0x34, 0xd8, 0xe3, 0x37, 0x6b, 0x4b, 0x49,
	0xef, 0x01, 0xd9, 0x3d, 0xa8, 0x2a, 0xbb, 0x99, 0x2a, 0x89, 0xf1, 0x3f, 0x35, 0x38, 0x58, 0xb2,
	0xe4, 0x07, 0x84, 0xb5, 0x88, 0x06, 0x91, 0xbe, 0x18, 0x40, 0x05, 0x61, 0x2f, 0xdc, 0x10, 0xa8,
	0x07, 0xb0, 0xe5, 0x84, 0xab, 0x0b, 0xdc, 0xff, 0x34, 0xa8, 0x25, 0x82, 0x6e, 0x1d, 0x55, 0x4e,
	0x98, 0x00, 0xe1, 0xed, 0xaa, 0xb2, 0x41, 0xc0, 0x3b, 0xc0, 0x05, 0x79, 0xaa, 0x3a, 0xc0, 0x03,
	0xd8, 0x9e, 0x23, 0xc2, 0x15, 0xb1, 0x20, 0xab, 0x1f, 0x37, 0x62, 0x73, 0xc4, 0xfa, 0xcd, 0x68,
	0x2c, 0xad, 0x8e, 0xc6, 0x6f, 0xc0, 0x88, 0xeb, 0xa2, 0x88, 0x82, 0x67, 0xe4, 0xcc, 0x71, 0xc3,
	0x8d, 0x71, 0x06, 0xc8, 0x39, 0xa1, 0xa4, 0x17, 0xdf, 0x6a, 0x92, 0x5f, 0xa8, 0x22, 0xb7, 0xa9,
	0x86, 0x05, 0x78, 0x0f, 0xa1, 0x24, 0x1b, 0x61, 0x3a, 0x7b, 0x65, 0x68, 0x3a, 0xa1, 0x9c, 0x84,
	0x0a, 0x32, 0x00, 0x22, 0xf4, 0x8a, 0xb7, 0xa3, 0x67, 0xfe, 0x36, 0xa6, 0xdb, 0xdc, 0xff, 0xca,
	0x60, 0xfd, 0x10, 0xf2, 0x4e, 0xe8, 0x1b, 0x1a, 0xd7, 0x76, 0x37, 0x3a, 0xb7, 0xf0, 0xb1, 0xd9,
	0x8e, 0x7b, 0x4c, 0x37, 0x74, 0x37, 0x83, 0xcf, 0xfc, 0x6c, 0xa1, 0x2d, 0x6c, 0x2e, 0xe7, 0x5b,
	0x0d, 0x7e, 0xb2, 0x90, 0xdc, 0xa7, 0x7f, 0xc0, 0xde, 0x79, 0xe8, 0xd1, 0xe6, 0x24, 0xc0, 0xde,
	0x1a, 0x39, 0xce, 0x48, 0x24, 0xa2, 0xbd, 0x50, 0x30, 0x3b, 0x41, 0xa3, 0x68, 0x37, 0x74, 0x85,
	0x8b, 0x59, 0x3b, 0x62, 0x25, 0x60, 0x88, 0x48, 0x6a, 0xaf, 0x63, 0xdf, 0x88, 0x7c, 0xb8, 0xd9,
	0x67, 0xa2, 0xdc, 0x3b, 0x81, 0x1f, 0xc5, 0xe6, 0xfa, 0x8e, 0x0a, 0x11, 0x65, 0x75, 0x36, 0x63,
	0xcd, 0xff, 0x16, 0x64, 0x06, 0xaf, 0x77, 0xee, 0x46, 0x10, 0xeb, 0x00, 0x14, 0xbf, 0x0e, 0x92,
	0x93, 0x34, 0x23, 0x15, 0xc8, 0x0a, 0xe2, 0x49, 0x84, 0x2d, 0x58, 0x88, 0x32, 0x1a, 0xc4, 0xf3,
	0xb5, 0x24, 0x17, 0xba, 0x11, 0xed, 0x88, 0xb1, 0xdb, 0x56, 0x58, 0x21, 0x8b, 0xb3, 0x4c, 0xa3,
	0x94, 0x56, 0x18, 0x1e, 0x42, 0x59, 0xd5, 0x73, 0xdf, 0x28, 0xa7, 0x21, 0x5a, 0x85, 0x42, 0x40,
	0xae, 0xb0, 0x01, 0xdc, 0x90, 0x06, 0x94, 0xe6, 0x8a, 0x15, 0x56, 0xf8, 0xca, 0x42, 0x6f, 0xaf,
	0xa6, 0xd1, 0x24, 0xe1, 0xcb, 0xb6, 0x43, 0x8c, 0x1a, 0xb7, 0xef, 0x63, 0x4e, 0x2d, 0xd8, 0x96,
	0x51, 0xe7, 0x67, 0x62, 0xb0, 0xda, 0x0e, 0x89, 0x20, 0x15, 0xb7, 0x6a, 0x85, 0xc6, 0x9d, 0xa5,
	0x88, 0x68, 0xa8, 0x5b, 0x8e, 0xa5, 0xb7, 0x77, 0xd2, 0xec, 0x17, 0x48, 0x9d, 0x13, 0x3a, 0x35,
	0x74, 0x7e, 0xe8, 0x2e, 0xd4, 0x89, 0xdf, 0x42, 0x2e, 0x5b, 0x6a, 0x4e, 0x31, 0x0d, 0x8c, 0xdd,
	0x84, 0xf0, 0xcf, 0x66, 0xd7, 0xc6, 0x5e, 0x02, 0xd1, 0x73, 0x62, 0xec, 0x2b, 0x5d, 0x81, 0x18,
	0xb7, 0x8d, 0xbb, 0x99, 0xba, 0xcd, 0x81, 0xa2, 0x3e, 0x0c, 0x64, 0x51, 0x21, 0x8d, 0xa5, 0x83,
	0x5d, 0xb9, 0x93, 0x64, 0x91, 0x1f, 0xf2, 0x72, 0xf6, 0x29, 0x54, 0x92, 0x38, 0x24, 0x98, 0x58,
	0x3d, 0x2d, 0xac, 0xbf, 0x80, 0x52, 0x04, 0xb7, 0x09, 0xdb, 0xae, 0x18, 0x32, 0x64, 0x2c, 0xde,
	0x4a, 0x1f, 0x99, 0x2b, 0x85, 0xdf, 0x72, 0x4b, 0x3e, 0x60, 0x82, 0x86, 0x62, 0xd3, 0xfc, 0x1c,
	0x2a, 0x89, 0x9f, 0x89, 0x8e, 0x93, 0x2a, 0xb9, 0x02, 0xf9, 0x09, 0xa2, 0xf1, 0xd3, 0x96, 0xc5,
	0xc3, 0x85, 0x4f, 0xda, 0x8c, 0x6d, 0xed, 0x44, 0x63, 0x15, 0x9b, 0xf9, 0x65, 0x28, 0x66, 0x49,
	0x9d, 0x5f, 0xa8, 0xf7, 0x29, 0x1e, 0x37, 0xc2, 0xe6, 0xfd, 0xe8, 0xcb, 0xa7, 0x4f, 0x86, 0xd1,
	0xa6, 0xfe, 0x2b, 0xa8, 0xda, 0xd8, 0xbf, 0x54, 0x0a, 0x64, 0x77, 0x3c, 0x48, 0x7c, 0x7c, 0x92,
	0xd8, 0x66, 0xac, 0xc5, 0xc7, 0xd4, 0x8e, 0x1e, 0xb4, 0x44, 0x19, 0xff, 0x25, 0x54, 0x88, 0xff,
	0x3c, 0x9a, 0x37, 0x59, 0xe6, 0xd5, 0x13, 0x32, 0x9e, 0x77, 0xda, 0xa7, 0x83, 0x41, 0xa7, 0x7d,
	0x3e, 0x3a, 0xff, 0x7a, 0xd8, 0x31, 0xbf, 0x94, 0xf3, 0xa2, 0x87, 0x5f, 0x8d, 0xc6, 0xe1, 0x6b,
	0x82, 0xde, 0x6c, 0x4a, 0xfe, 0x6b, 0x50, 0x64, 0x9e, 0xb1, 0x25, 0x64, 0xdf, 0x69, 0x52, 0x32,
	0xb2, 0x2e, 0xd7, 0x94, 0x9c, 0x48, 0x90, 0x55, 0x0c, 0xfe, 0x35, 0x41, 0x6d, 0x37, 0x74, 0x95,
	0x93, 0xd8, 0xb1, 0x2b, 0x77, 0xf5, 0x54, 0x91, 0x30, 0xba, 0xa8, 0xde, 0xe0, 0xfa, 0xfe, 0x85,
	0x13, 0xba, 0x5f, 0x91, 0x88, 0xb1, 0x9a, 0x17, 0x92, 0x5a, 0x8f, 0xad, 0xd1, 0x18, 0xb9, 0x01,
	0xd9, 0x98, 0x7b, 0xee, 0x40, 0x39, 0x4a, 0x5a, 0xd9, 0xf1, 0x7b, 0x49, 0xbc, 0xdf, 0x45, 0xb8,
	0x49, 0x93, 0xf8, 0xbe, 0x93, 0x99, 0x0f, 0xa1, 0xcc, 0x4e, 0x8b, 0xa4, 0xca, 0xa7, 0x0d, 0x3a,
	0xca, 0xf2, 0xb1, 0x35, 0x9a, 0x60, 0xfa, 0xc6, 0x59, 0x8b, 0x92, 0xfb, 0x01, 0x0a, 0x42, 0x5f,
	0xbe, 0x2c, 0xfc, 0x46, 0x8e, 0x4c, 0x63, 0x6b, 0x34, 0x27, 0x28, 0x63, 0x1e, 0x99, 0x1d, 0xd9,
	0xb9, 0x18, 0x72, 0xd9, 0x8f, 0x09, 0x8e, 0x38, 0x24, 0xc8, 0x95, 0x2f, 0x2f, 0x2f, 0xa4, 0x18,
	0x06, 0xdb, 0x7a, 0x62, 0x16, 0x30, 0x8b, 0xc5, 0x0a, 0xbf, 0x7e, 0x2d, 0x69, 0x09, 0x8b, 0x19,
	0x4c, 0x5f, 0x92, 0xac, 0x8d, 0xf5, 0x01, 0x6c, 0x89, 0xef, 0xd3, 0x9f, 0x74, 0x1c, 0x09, 0x17,
	0xbb, 0xf8, 0x64, 0x76, 0xbd, 0xf9, 0x6c, 0x3e, 0x99, 0x5d, 0xaf, 0xe6, 0xf7, 0x7f, 0x57, 0x7f,
	0x1e, 0x60, 0xe0, 0x64, 0x57, 0x75, 0x08, 0x25, 0x29, 0xda, 0x7f, 0x2f, 0x23, 0xf7, 0x44, 0xf2,
	0x48, 0x06, 0x48, 0x40, 0x36, 0x1f, 0x77, 0x82, 0xd5, 0x4f, 0x15, 0x91, 0x1e, 0x86, 0xc6, 0xf7,
	0xa9, 0xe7, 0xf7, 0xf2, 0x2f, 0x10, 0x4c, 0x0f, 0xbb, 0x3e, 0x61, 0xd7, 0xcf, 0xfe, 0xe4, 0x1f,
	0x23, 0x96, 0x4b, 0x43, 0x6c, 0x9c, 0xd0, 0xc0, 0x52, 0x7d, 0x1d, 0x0d, 0x59, 0x3b, 0xee, 0x45,
	0x22, 0x3f, 0xa7, 0x68, 0x9d, 0xa7, 0x2f, 0x45, 0x35, 0x6e, 0xa4, 0x80, 0x62, 0x1a, 0xe6, 0xbf,
	0xb4, 0x44, 0xd6, 0x6e, 0x28, 0x3c, 0x9f, 0x22, 0x3c, 0xdb, 0xa8, 0xb9, 0xe6, 0x2b, 0xc6, 0x63,
	0x0c, 0x35, 0xf5, 0x36, 0x3f, 0x0a, 0xd8, 0xe0, 0x69, 0xc0, 0x5e, 0xe7, 0xab, 0x76, 0xaf, 0x39,
	0xe8, 0x76, 0x78, 0xe7, 0x1d, 0x9d, 0xbc, 0xe8, 0x3f, 0xe9, 0x37, 0x1b, 0x1f, 0xe8, 0x3f, 0x86,
	0x0f, 0x17, 0x77, 0xce, 0x7a, 0x2f, 0x06, 0x67, 0xbd, 0xfe, 0x45, 0xaf, 0x33, 0x68, 0x68, 0xfa,
	0x47, 0x70, 0xb0, 0xb8, 0x3d, 0xe8, 0xab, 0xcd, 0xdc, 0xe3, 0x4f, 0xa0, 0xbe, 0xd8, 0xd0, 0x75,
	0x80, 0xad, 0xc1, 0xe9, 0xf3, 0xa7, 0xcd, 0xcf, 0x1b, 0x9a, 0x5e, 0x83, 0x72, 0xb4, 0xdb, 0xc8,
	0xb5, 0x72, 0xbd, 0xfc, 0xf0, 0x83, 0xa1, 0xf6, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x64,
	0x42, 0xb5, 0x7c, 0x1c, 0x00, 0x00,
}
