// Code generated by protoc-gen-go. DO NOT EDIT.
// source: mahjong_play.proto

package mjproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Ignoring public import of ProtoHeader from base.proto

// Ignoring public import of Heartbeat from base.proto

// Ignoring public import of WeixinInfo from base.proto

// Ignoring public import of CardInfo from base.proto

// Ignoring public import of PlayOptions from base.proto

// Ignoring public import of ChangShaPlayOptions from base.proto

// Ignoring public import of BaiShanPlayOptions from base.proto

// Ignoring public import of ZhuanZhuanPlayOptions from base.proto

// Ignoring public import of HaiNanPlayOptions from base.proto

// Ignoring public import of RoomTypeInfo from base.proto

// Ignoring public import of ComposeCard from base.proto

// Ignoring public import of PlayerCard from base.proto

// Ignoring public import of GangBean from base.proto

// Ignoring public import of PlayerInfo from base.proto

// Ignoring public import of DeskGameInfo from base.proto

// Ignoring public import of EProtoId from base.proto

// Ignoring public import of ErrorCode from base.proto

// Ignoring public import of MJOption from base.proto

// Ignoring public import of MJRoomType from base.proto

// Ignoring public import of MahjongColor from base.proto

// Ignoring public import of GangType from base.proto

// Ignoring public import of ComposeCardType from base.proto

// Ignoring public import of HuType from base.proto

// Ignoring public import of PaiType from base.proto

// Ignoring public import of MJUserGameStatus from base.proto

// Ignoring public import of DeskGameStatus from base.proto

type ExchangeType int32

const (
	ExchangeType_EXCHANGE_TYPE_DUIJIA      ExchangeType = 0
	ExchangeType_EXCHANGE_TYPE_SHUNSHIZHEN ExchangeType = 1
	ExchangeType_EXCHANGE_TYPE_NISHIZHEN   ExchangeType = 2
)

var ExchangeType_name = map[int32]string{
	0: "EXCHANGE_TYPE_DUIJIA",
	1: "EXCHANGE_TYPE_SHUNSHIZHEN",
	2: "EXCHANGE_TYPE_NISHIZHEN",
}
var ExchangeType_value = map[string]int32{
	"EXCHANGE_TYPE_DUIJIA":      0,
	"EXCHANGE_TYPE_SHUNSHIZHEN": 1,
	"EXCHANGE_TYPE_NISHIZHEN":   2,
}

func (x ExchangeType) Enum() *ExchangeType {
	p := new(ExchangeType)
	*p = x
	return p
}
func (x ExchangeType) String() string {
	return proto.EnumName(ExchangeType_name, int32(x))
}
func (x *ExchangeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ExchangeType_value, data, "ExchangeType")
	if err != nil {
		return err
	}
	*x = ExchangeType(value)
	return nil
}
func (ExchangeType) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

type RECONNECT_TYPE int32

const (
	RECONNECT_TYPE_NORMAL    RECONNECT_TYPE = 1
	RECONNECT_TYPE_RECONNECT RECONNECT_TYPE = 2
)

var RECONNECT_TYPE_name = map[int32]string{
	1: "NORMAL",
	2: "RECONNECT",
}
var RECONNECT_TYPE_value = map[string]int32{
	"NORMAL":    1,
	"RECONNECT": 2,
}

func (x RECONNECT_TYPE) Enum() *RECONNECT_TYPE {
	p := new(RECONNECT_TYPE)
	*p = x
	return p
}
func (x RECONNECT_TYPE) String() string {
	return proto.EnumName(RECONNECT_TYPE_name, int32(x))
}
func (x *RECONNECT_TYPE) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(RECONNECT_TYPE_value, data, "RECONNECT_TYPE")
	if err != nil {
		return err
	}
	*x = RECONNECT_TYPE(value)
	return nil
}
func (RECONNECT_TYPE) EnumDescriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

type UserCoinBean struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Coin             *int64  `protobuf:"varint,2,opt,name=coin" json:"coin,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *UserCoinBean) Reset()                    { *m = UserCoinBean{} }
func (m *UserCoinBean) String() string            { return proto.CompactTextString(m) }
func (*UserCoinBean) ProtoMessage()               {}
func (*UserCoinBean) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

func (m *UserCoinBean) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *UserCoinBean) GetCoin() int64 {
	if m != nil && m.Coin != nil {
		return *m.Coin
	}
	return 0
}

// 开局（接收服务端消息）
type Game_Opening struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CurrPlayCount    *int32          `protobuf:"varint,2,opt,name=CurrPlayCount" json:"CurrPlayCount,omitempty"`
	Dice1            *int32          `protobuf:"varint,3,opt,name=dice1" json:"dice1,omitempty"`
	Dice2            *int32          `protobuf:"varint,4,opt,name=dice2" json:"dice2,omitempty"`
	UserCoinBeans    []*UserCoinBean `protobuf:"bytes,5,rep,name=userCoinBeans" json:"userCoinBeans,omitempty"`
	CurrJiaoLing     *int32          `protobuf:"varint,6,opt,name=currJiaoLing" json:"currJiaoLing,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Game_Opening) Reset()                    { *m = Game_Opening{} }
func (m *Game_Opening) String() string            { return proto.CompactTextString(m) }
func (*Game_Opening) ProtoMessage()               {}
func (*Game_Opening) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{1} }

func (m *Game_Opening) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_Opening) GetCurrPlayCount() int32 {
	if m != nil && m.CurrPlayCount != nil {
		return *m.CurrPlayCount
	}
	return 0
}

func (m *Game_Opening) GetDice1() int32 {
	if m != nil && m.Dice1 != nil {
		return *m.Dice1
	}
	return 0
}

func (m *Game_Opening) GetDice2() int32 {
	if m != nil && m.Dice2 != nil {
		return *m.Dice2
	}
	return 0
}

func (m *Game_Opening) GetUserCoinBeans() []*UserCoinBean {
	if m != nil {
		return m.UserCoinBeans
	}
	return nil
}

func (m *Game_Opening) GetCurrJiaoLing() int32 {
	if m != nil && m.CurrJiaoLing != nil {
		return *m.CurrJiaoLing
	}
	return 0
}

// 发牌
type Game_DealCards struct {
	Header           *ProtoHeader  `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PlayerCard       []*PlayerCard `protobuf:"bytes,2,rep,name=playerCard" json:"playerCard,omitempty"`
	DealerUserId     *uint32       `protobuf:"varint,3,opt,name=dealerUserId" json:"dealerUserId,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Game_DealCards) Reset()                    { *m = Game_DealCards{} }
func (m *Game_DealCards) String() string            { return proto.CompactTextString(m) }
func (*Game_DealCards) ProtoMessage()               {}
func (*Game_DealCards) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{2} }

func (m *Game_DealCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DealCards) GetPlayerCard() []*PlayerCard {
	if m != nil {
		return m.PlayerCard
	}
	return nil
}

func (m *Game_DealCards) GetDealerUserId() uint32 {
	if m != nil && m.DealerUserId != nil {
		return *m.DealerUserId
	}
	return 0
}

// 换牌（3张）
type Game_ExchangeCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ExchangeOutCards []*CardInfo  `protobuf:"bytes,2,rep,name=exchangeOutCards" json:"exchangeOutCards,omitempty"`
	UserId           *uint32      `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	ExchangeNum      *int32       `protobuf:"varint,4,opt,name=exchangeNum" json:"exchangeNum,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ExchangeCards) Reset()                    { *m = Game_ExchangeCards{} }
func (m *Game_ExchangeCards) String() string            { return proto.CompactTextString(m) }
func (*Game_ExchangeCards) ProtoMessage()               {}
func (*Game_ExchangeCards) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{3} }

func (m *Game_ExchangeCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ExchangeCards) GetExchangeOutCards() []*CardInfo {
	if m != nil {
		return m.ExchangeOutCards
	}
	return nil
}

func (m *Game_ExchangeCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ExchangeCards) GetExchangeNum() int32 {
	if m != nil && m.ExchangeNum != nil {
		return *m.ExchangeNum
	}
	return 0
}

// 发海底牌：长沙麻将需要询问是否需要海底牌
type Game_DealHaiDiCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	HaidiCard        *CardInfo    `protobuf:"bytes,2,opt,name=haidiCard" json:"haidiCard,omitempty"`
	UserId           *uint32      `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_DealHaiDiCards) Reset()                    { *m = Game_DealHaiDiCards{} }
func (m *Game_DealHaiDiCards) String() string            { return proto.CompactTextString(m) }
func (*Game_DealHaiDiCards) ProtoMessage()               {}
func (*Game_DealHaiDiCards) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{4} }

func (m *Game_DealHaiDiCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DealHaiDiCards) GetHaidiCard() *CardInfo {
	if m != nil {
		return m.HaidiCard
	}
	return nil
}

func (m *Game_DealHaiDiCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type Game_ReqDealHaiDiCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Need             *bool        `protobuf:"varint,3,opt,name=need" json:"need,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ReqDealHaiDiCards) Reset()                    { *m = Game_ReqDealHaiDiCards{} }
func (m *Game_ReqDealHaiDiCards) String() string            { return proto.CompactTextString(m) }
func (*Game_ReqDealHaiDiCards) ProtoMessage()               {}
func (*Game_ReqDealHaiDiCards) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{5} }

func (m *Game_ReqDealHaiDiCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ReqDealHaiDiCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ReqDealHaiDiCards) GetNeed() bool {
	if m != nil && m.Need != nil {
		return *m.Need
	}
	return false
}

type Game_AckDealHaiDiCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Need             *bool        `protobuf:"varint,3,opt,name=need" json:"need,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckDealHaiDiCards) Reset()                    { *m = Game_AckDealHaiDiCards{} }
func (m *Game_AckDealHaiDiCards) String() string            { return proto.CompactTextString(m) }
func (*Game_AckDealHaiDiCards) ProtoMessage()               {}
func (*Game_AckDealHaiDiCards) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{6} }

func (m *Game_AckDealHaiDiCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckDealHaiDiCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_AckDealHaiDiCards) GetNeed() bool {
	if m != nil && m.Need != nil {
		return *m.Need
	}
	return false
}

//
type Game_AckExchangeCards struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	ExchangeOutCards []*CardInfo  `protobuf:"bytes,3,rep,name=exchangeOutCards" json:"exchangeOutCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckExchangeCards) Reset()                    { *m = Game_AckExchangeCards{} }
func (m *Game_AckExchangeCards) String() string            { return proto.CompactTextString(m) }
func (*Game_AckExchangeCards) ProtoMessage()               {}
func (*Game_AckExchangeCards) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{7} }

func (m *Game_AckExchangeCards) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckExchangeCards) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_AckExchangeCards) GetExchangeOutCards() []*CardInfo {
	if m != nil {
		return m.ExchangeOutCards
	}
	return nil
}

type Game_ExchangeCardsEnd struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ExchangeInCards  []*CardInfo  `protobuf:"bytes,2,rep,name=exchangeInCards" json:"exchangeInCards,omitempty"`
	ExchangeNum      *int32       `protobuf:"varint,3,opt,name=exchangeNum" json:"exchangeNum,omitempty"`
	ExchangeType     *int32       `protobuf:"varint,4,opt,name=exchangeType" json:"exchangeType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ExchangeCardsEnd) Reset()                    { *m = Game_ExchangeCardsEnd{} }
func (m *Game_ExchangeCardsEnd) String() string            { return proto.CompactTextString(m) }
func (*Game_ExchangeCardsEnd) ProtoMessage()               {}
func (*Game_ExchangeCardsEnd) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{8} }

func (m *Game_ExchangeCardsEnd) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ExchangeCardsEnd) GetExchangeInCards() []*CardInfo {
	if m != nil {
		return m.ExchangeInCards
	}
	return nil
}

func (m *Game_ExchangeCardsEnd) GetExchangeNum() int32 {
	if m != nil && m.ExchangeNum != nil {
		return *m.ExchangeNum
	}
	return 0
}

func (m *Game_ExchangeCardsEnd) GetExchangeType() int32 {
	if m != nil && m.ExchangeType != nil {
		return *m.ExchangeType
	}
	return 0
}

// 定缺（和个人玩家ACK）
type Game_DingQue struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Color            *int32       `protobuf:"varint,2,opt,name=color" json:"color,omitempty"`
	UserId           *uint32      `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_DingQue) Reset()                    { *m = Game_DingQue{} }
func (m *Game_DingQue) String() string            { return proto.CompactTextString(m) }
func (*Game_DingQue) ProtoMessage()               {}
func (*Game_DingQue) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{9} }

func (m *Game_DingQue) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DingQue) GetColor() int32 {
	if m != nil && m.Color != nil {
		return *m.Color
	}
	return 0
}

func (m *Game_DingQue) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

type DingQueEndBean struct {
	UserId           *uint32 `protobuf:"varint,1,opt,name=userId" json:"userId,omitempty"`
	Flower           *int32  `protobuf:"varint,2,opt,name=flower" json:"flower,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DingQueEndBean) Reset()                    { *m = DingQueEndBean{} }
func (m *DingQueEndBean) String() string            { return proto.CompactTextString(m) }
func (*DingQueEndBean) ProtoMessage()               {}
func (*DingQueEndBean) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{10} }

func (m *DingQueEndBean) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *DingQueEndBean) GetFlower() int32 {
	if m != nil && m.Flower != nil {
		return *m.Flower
	}
	return 0
}

type Game_DingQueEnd struct {
	Header           *ProtoHeader      `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Ques             []*DingQueEndBean `protobuf:"bytes,2,rep,name=Ques" json:"Ques,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Game_DingQueEnd) Reset()                    { *m = Game_DingQueEnd{} }
func (m *Game_DingQueEnd) String() string            { return proto.CompactTextString(m) }
func (*Game_DingQueEnd) ProtoMessage()               {}
func (*Game_DingQueEnd) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{11} }

func (m *Game_DingQueEnd) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_DingQueEnd) GetQues() []*DingQueEndBean {
	if m != nil {
		return m.Ques
	}
	return nil
}

// 定缺开始广播（和ACK）
type Game_BroadcastBeginDingQue struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Color            []int32      `protobuf:"varint,2,rep,name=color" json:"color,omitempty"`
	Reconnect        *bool        `protobuf:"varint,3,opt,name=reconnect" json:"reconnect,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_BroadcastBeginDingQue) Reset()                    { *m = Game_BroadcastBeginDingQue{} }
func (m *Game_BroadcastBeginDingQue) String() string            { return proto.CompactTextString(m) }
func (*Game_BroadcastBeginDingQue) ProtoMessage()               {}
func (*Game_BroadcastBeginDingQue) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{12} }

func (m *Game_BroadcastBeginDingQue) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_BroadcastBeginDingQue) GetColor() []int32 {
	if m != nil {
		return m.Color
	}
	return nil
}

func (m *Game_BroadcastBeginDingQue) GetReconnect() bool {
	if m != nil && m.Reconnect != nil {
		return *m.Reconnect
	}
	return false
}

// 换牌开始(广播)
type Game_BroadcastBeginExchange struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Reconnect        *bool        `protobuf:"varint,2,opt,name=reconnect" json:"reconnect,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_BroadcastBeginExchange) Reset()                    { *m = Game_BroadcastBeginExchange{} }
func (m *Game_BroadcastBeginExchange) String() string            { return proto.CompactTextString(m) }
func (*Game_BroadcastBeginExchange) ProtoMessage()               {}
func (*Game_BroadcastBeginExchange) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{13} }

func (m *Game_BroadcastBeginExchange) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_BroadcastBeginExchange) GetReconnect() bool {
	if m != nil && m.Reconnect != nil {
		return *m.Reconnect
	}
	return false
}

// 摸牌
type Game_GetInCard struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Card             *CardInfo    `protobuf:"bytes,2,opt,name=card" json:"card,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_GetInCard) Reset()                    { *m = Game_GetInCard{} }
func (m *Game_GetInCard) String() string            { return proto.CompactTextString(m) }
func (*Game_GetInCard) ProtoMessage()               {}
func (*Game_GetInCard) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{14} }

func (m *Game_GetInCard) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_GetInCard) GetCard() *CardInfo {
	if m != nil {
		return m.Card
	}
	return nil
}

// 出牌
type Game_SendOutCard struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CardId           *int32       `protobuf:"varint,2,opt,name=cardId" json:"cardId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_SendOutCard) Reset()                    { *m = Game_SendOutCard{} }
func (m *Game_SendOutCard) String() string            { return proto.CompactTextString(m) }
func (*Game_SendOutCard) ProtoMessage()               {}
func (*Game_SendOutCard) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{15} }

func (m *Game_SendOutCard) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SendOutCard) GetCardId() int32 {
	if m != nil && m.CardId != nil {
		return *m.CardId
	}
	return 0
}

type Game_AckSendOutCard struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Result           *int32       `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
	UserId           *uint32      `protobuf:"varint,3,opt,name=userId" json:"userId,omitempty"`
	Card             *CardInfo    `protobuf:"bytes,4,opt,name=card" json:"card,omitempty"`
	Card2            *CardInfo    `protobuf:"bytes,5,opt,name=card2" json:"card2,omitempty"`
	IsAuto           *bool        `protobuf:"varint,6,opt,name=isAuto" json:"isAuto,omitempty"`
	HandPaiCount     *int32       `protobuf:"varint,7,opt,name=handPaiCount" json:"handPaiCount,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckSendOutCard) Reset()                    { *m = Game_AckSendOutCard{} }
func (m *Game_AckSendOutCard) String() string            { return proto.CompactTextString(m) }
func (*Game_AckSendOutCard) ProtoMessage()               {}
func (*Game_AckSendOutCard) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{16} }

func (m *Game_AckSendOutCard) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckSendOutCard) GetResult() int32 {
	if m != nil && m.Result != nil {
		return *m.Result
	}
	return 0
}

func (m *Game_AckSendOutCard) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_AckSendOutCard) GetCard() *CardInfo {
	if m != nil {
		return m.Card
	}
	return nil
}

func (m *Game_AckSendOutCard) GetCard2() *CardInfo {
	if m != nil {
		return m.Card2
	}
	return nil
}

func (m *Game_AckSendOutCard) GetIsAuto() bool {
	if m != nil && m.IsAuto != nil {
		return *m.IsAuto
	}
	return false
}

func (m *Game_AckSendOutCard) GetHandPaiCount() int32 {
	if m != nil && m.HandPaiCount != nil {
		return *m.HandPaiCount
	}
	return 0
}

// 碰牌
type Game_ActPeng struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	PengCard         *CardInfo    `protobuf:"bytes,3,opt,name=pengCard" json:"pengCard,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActPeng) Reset()                    { *m = Game_ActPeng{} }
func (m *Game_ActPeng) String() string            { return proto.CompactTextString(m) }
func (*Game_ActPeng) ProtoMessage()               {}
func (*Game_ActPeng) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{17} }

func (m *Game_ActPeng) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActPeng) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ActPeng) GetPengCard() *CardInfo {
	if m != nil {
		return m.PengCard
	}
	return nil
}

type Game_AckActPeng struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PengCard         []*CardInfo  `protobuf:"bytes,2,rep,name=pengCard" json:"pengCard,omitempty"`
	UserIdOut        *uint32      `protobuf:"varint,3,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32      `protobuf:"varint,4,opt,name=userIdIn" json:"userIdIn,omitempty"`
	JiaoInfos        []*JiaoInfo  `protobuf:"bytes,5,rep,name=jiaoInfos" json:"jiaoInfos,omitempty"`
	IsQiang          *bool        `protobuf:"varint,6,opt,name=isQiang" json:"isQiang,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckActPeng) Reset()                    { *m = Game_AckActPeng{} }
func (m *Game_AckActPeng) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActPeng) ProtoMessage()               {}
func (*Game_AckActPeng) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{18} }

func (m *Game_AckActPeng) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActPeng) GetPengCard() []*CardInfo {
	if m != nil {
		return m.PengCard
	}
	return nil
}

func (m *Game_AckActPeng) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_AckActPeng) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *Game_AckActPeng) GetJiaoInfos() []*JiaoInfo {
	if m != nil {
		return m.JiaoInfos
	}
	return nil
}

func (m *Game_AckActPeng) GetIsQiang() bool {
	if m != nil && m.IsQiang != nil {
		return *m.IsQiang
	}
	return false
}

// 吃牌
type Game_ActChi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	ChiCard          *CardInfo    `protobuf:"bytes,3,opt,name=chiCard" json:"chiCard,omitempty"`
	ChooseCards      []*CardInfo  `protobuf:"bytes,4,rep,name=chooseCards" json:"chooseCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActChi) Reset()                    { *m = Game_ActChi{} }
func (m *Game_ActChi) String() string            { return proto.CompactTextString(m) }
func (*Game_ActChi) ProtoMessage()               {}
func (*Game_ActChi) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{19} }

func (m *Game_ActChi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActChi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ActChi) GetChiCard() *CardInfo {
	if m != nil {
		return m.ChiCard
	}
	return nil
}

func (m *Game_ActChi) GetChooseCards() []*CardInfo {
	if m != nil {
		return m.ChooseCards
	}
	return nil
}

type Game_AckActChi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	ChiCard          []*CardInfo  `protobuf:"bytes,2,rep,name=chiCard" json:"chiCard,omitempty"`
	UserIdOut        *uint32      `protobuf:"varint,3,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32      `protobuf:"varint,4,opt,name=userIdIn" json:"userIdIn,omitempty"`
	JiaoInfos        []*JiaoInfo  `protobuf:"bytes,5,rep,name=jiaoInfos" json:"jiaoInfos,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckActChi) Reset()                    { *m = Game_AckActChi{} }
func (m *Game_AckActChi) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActChi) ProtoMessage()               {}
func (*Game_AckActChi) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{20} }

func (m *Game_AckActChi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActChi) GetChiCard() []*CardInfo {
	if m != nil {
		return m.ChiCard
	}
	return nil
}

func (m *Game_AckActChi) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_AckActChi) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *Game_AckActChi) GetJiaoInfos() []*JiaoInfo {
	if m != nil {
		return m.JiaoInfos
	}
	return nil
}

// 杠牌
type Game_ActGang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	GangCard         *CardInfo    `protobuf:"bytes,3,opt,name=gangCard" json:"gangCard,omitempty"`
	Bu               *bool        `protobuf:"varint,4,opt,name=bu" json:"bu,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActGang) Reset()                    { *m = Game_ActGang{} }
func (m *Game_ActGang) String() string            { return proto.CompactTextString(m) }
func (*Game_ActGang) ProtoMessage()               {}
func (*Game_ActGang) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{21} }

func (m *Game_ActGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActGang) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ActGang) GetGangCard() *CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

func (m *Game_ActGang) GetBu() bool {
	if m != nil && m.Bu != nil {
		return *m.Bu
	}
	return false
}

type Game_AckActGang struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GangType         *int32          `protobuf:"varint,2,opt,name=gangType" json:"gangType,omitempty"`
	GangCard         []*CardInfo     `protobuf:"bytes,3,rep,name=GangCard" json:"GangCard,omitempty"`
	UserIdOut        *uint32         `protobuf:"varint,4,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32         `protobuf:"varint,5,opt,name=userIdIn" json:"userIdIn,omitempty"`
	ChangShaBu       *bool           `protobuf:"varint,6,opt,name=changShaBu" json:"changShaBu,omitempty"`
	UserCoinBeans    []*UserCoinBean `protobuf:"bytes,7,rep,name=userCoinBeans" json:"userCoinBeans,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Game_AckActGang) Reset()                    { *m = Game_AckActGang{} }
func (m *Game_AckActGang) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActGang) ProtoMessage()               {}
func (*Game_AckActGang) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{22} }

func (m *Game_AckActGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActGang) GetGangType() int32 {
	if m != nil && m.GangType != nil {
		return *m.GangType
	}
	return 0
}

func (m *Game_AckActGang) GetGangCard() []*CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

func (m *Game_AckActGang) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_AckActGang) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *Game_AckActGang) GetChangShaBu() bool {
	if m != nil && m.ChangShaBu != nil {
		return *m.ChangShaBu
	}
	return false
}

func (m *Game_AckActGang) GetUserCoinBeans() []*UserCoinBean {
	if m != nil {
		return m.UserCoinBeans
	}
	return nil
}

// 长沙杠牌杠牌
type Game_ChangShaActGang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	GangCard         *CardInfo    `protobuf:"bytes,3,opt,name=gangCard" json:"gangCard,omitempty"`
	ChangShaGang     *bool        `protobuf:"varint,4,opt,name=changShaGang" json:"changShaGang,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ChangShaActGang) Reset()                    { *m = Game_ChangShaActGang{} }
func (m *Game_ChangShaActGang) String() string            { return proto.CompactTextString(m) }
func (*Game_ChangShaActGang) ProtoMessage()               {}
func (*Game_ChangShaActGang) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{23} }

func (m *Game_ChangShaActGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ChangShaActGang) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ChangShaActGang) GetGangCard() *CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

func (m *Game_ChangShaActGang) GetChangShaGang() bool {
	if m != nil && m.ChangShaGang != nil {
		return *m.ChangShaGang
	}
	return false
}

// 长沙杠牌回复
type Game_ChangShaAckActGang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GangType         *int32       `protobuf:"varint,2,opt,name=gangType" json:"gangType,omitempty"`
	GangCard         []*CardInfo  `protobuf:"bytes,3,rep,name=GangCard" json:"GangCard,omitempty"`
	UserIdOut        *uint32      `protobuf:"varint,4,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32      `protobuf:"varint,5,opt,name=userIdIn" json:"userIdIn,omitempty"`
	Bu               *bool        `protobuf:"varint,6,opt,name=bu" json:"bu,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ChangShaAckActGang) Reset()                    { *m = Game_ChangShaAckActGang{} }
func (m *Game_ChangShaAckActGang) String() string            { return proto.CompactTextString(m) }
func (*Game_ChangShaAckActGang) ProtoMessage()               {}
func (*Game_ChangShaAckActGang) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{24} }

func (m *Game_ChangShaAckActGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ChangShaAckActGang) GetGangType() int32 {
	if m != nil && m.GangType != nil {
		return *m.GangType
	}
	return 0
}

func (m *Game_ChangShaAckActGang) GetGangCard() []*CardInfo {
	if m != nil {
		return m.GangCard
	}
	return nil
}

func (m *Game_ChangShaAckActGang) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_ChangShaAckActGang) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *Game_ChangShaAckActGang) GetBu() bool {
	if m != nil && m.Bu != nil {
		return *m.Bu
	}
	return false
}

// 胡牌
type Game_ActHu struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	HuCard           *CardInfo    `protobuf:"bytes,3,opt,name=huCard" json:"huCard,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActHu) Reset()                    { *m = Game_ActHu{} }
func (m *Game_ActHu) String() string            { return proto.CompactTextString(m) }
func (*Game_ActHu) ProtoMessage()               {}
func (*Game_ActHu) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{25} }

func (m *Game_ActHu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActHu) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ActHu) GetHuCard() *CardInfo {
	if m != nil {
		return m.HuCard
	}
	return nil
}

type Game_AckActHu struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	HuType           *int32          `protobuf:"varint,2,opt,name=huType" json:"huType,omitempty"`
	HuCard           *CardInfo       `protobuf:"bytes,3,opt,name=huCard" json:"huCard,omitempty"`
	UserIdOut        *uint32         `protobuf:"varint,4,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32         `protobuf:"varint,5,opt,name=userIdIn" json:"userIdIn,omitempty"`
	IsZiMo           *bool           `protobuf:"varint,6,opt,name=isZiMo" json:"isZiMo,omitempty"`
	PaiType          []PaiType       `protobuf:"varint,7,rep,name=paiType,enum=mjproto.PaiType" json:"paiType,omitempty"`
	UserCoinBeans    []*UserCoinBean `protobuf:"bytes,8,rep,name=userCoinBeans" json:"userCoinBeans,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Game_AckActHu) Reset()                    { *m = Game_AckActHu{} }
func (m *Game_AckActHu) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActHu) ProtoMessage()               {}
func (*Game_AckActHu) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{26} }

func (m *Game_AckActHu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActHu) GetHuType() int32 {
	if m != nil && m.HuType != nil {
		return *m.HuType
	}
	return 0
}

func (m *Game_AckActHu) GetHuCard() *CardInfo {
	if m != nil {
		return m.HuCard
	}
	return nil
}

func (m *Game_AckActHu) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_AckActHu) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *Game_AckActHu) GetIsZiMo() bool {
	if m != nil && m.IsZiMo != nil {
		return *m.IsZiMo
	}
	return false
}

func (m *Game_AckActHu) GetPaiType() []PaiType {
	if m != nil {
		return m.PaiType
	}
	return nil
}

func (m *Game_AckActHu) GetUserCoinBeans() []*UserCoinBean {
	if m != nil {
		return m.UserCoinBeans
	}
	return nil
}

// 长沙起手胡牌
type Game_ActChangShaQiShouHu struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Hu               *bool        `protobuf:"varint,3,opt,name=hu" json:"hu,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActChangShaQiShouHu) Reset()                    { *m = Game_ActChangShaQiShouHu{} }
func (m *Game_ActChangShaQiShouHu) String() string            { return proto.CompactTextString(m) }
func (*Game_ActChangShaQiShouHu) ProtoMessage()               {}
func (*Game_ActChangShaQiShouHu) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{27} }

func (m *Game_ActChangShaQiShouHu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActChangShaQiShouHu) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_ActChangShaQiShouHu) GetHu() bool {
	if m != nil && m.Hu != nil {
		return *m.Hu
	}
	return false
}

// 长沙起手胡牌 这里需要广播
type Game_AckActChangShaQiShouHu struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	HuType           *int32       `protobuf:"varint,2,opt,name=huType" json:"huType,omitempty"`
	HandPais         []*CardInfo  `protobuf:"bytes,3,rep,name=handPais" json:"handPais,omitempty"`
	HuUserId         *uint32      `protobuf:"varint,4,opt,name=huUserId" json:"huUserId,omitempty"`
	PaiType          []PaiType    `protobuf:"varint,5,rep,name=paiType,enum=mjproto.PaiType" json:"paiType,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckActChangShaQiShouHu) Reset()                    { *m = Game_AckActChangShaQiShouHu{} }
func (m *Game_AckActChangShaQiShouHu) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActChangShaQiShouHu) ProtoMessage()               {}
func (*Game_AckActChangShaQiShouHu) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{28} }

func (m *Game_AckActChangShaQiShouHu) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActChangShaQiShouHu) GetHuType() int32 {
	if m != nil && m.HuType != nil {
		return *m.HuType
	}
	return 0
}

func (m *Game_AckActChangShaQiShouHu) GetHandPais() []*CardInfo {
	if m != nil {
		return m.HandPais
	}
	return nil
}

func (m *Game_AckActChangShaQiShouHu) GetHuUserId() uint32 {
	if m != nil && m.HuUserId != nil {
		return *m.HuUserId
	}
	return 0
}

func (m *Game_AckActChangShaQiShouHu) GetPaiType() []PaiType {
	if m != nil {
		return m.PaiType
	}
	return nil
}

// 长沙麻将的胡牌结果
type Game_AckActHuChangSha struct {
	Hus              []*Game_AckActHu `protobuf:"bytes,1,rep,name=hus" json:"hus,omitempty"`
	XXX_unrecognized []byte           `json:"-"`
}

func (m *Game_AckActHuChangSha) Reset()                    { *m = Game_AckActHuChangSha{} }
func (m *Game_AckActHuChangSha) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActHuChangSha) ProtoMessage()               {}
func (*Game_AckActHuChangSha) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{29} }

func (m *Game_AckActHuChangSha) GetHus() []*Game_AckActHu {
	if m != nil {
		return m.Hus
	}
	return nil
}

// 过牌
type Game_ActGuo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ActGuo) Reset()                    { *m = Game_ActGuo{} }
func (m *Game_ActGuo) String() string            { return proto.CompactTextString(m) }
func (*Game_ActGuo) ProtoMessage()               {}
func (*Game_ActGuo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{30} }

func (m *Game_ActGuo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ActGuo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 过牌收到服务器确认后，还是要协议 【PID_game_SENDOVERTURN ：game_SendOverTurn】 后结束此轮
type Game_AckActGuo struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_AckActGuo) Reset()                    { *m = Game_AckActGuo{} }
func (m *Game_AckActGuo) String() string            { return proto.CompactTextString(m) }
func (*Game_AckActGuo) ProtoMessage()               {}
func (*Game_AckActGuo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{31} }

func (m *Game_AckActGuo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_AckActGuo) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 一般OverTurn 只有一张牌，可以对于长沙麻将，在杠之后会有两张牌，这了需要特殊处理
type Game_ChangShaOverTurnAfterGang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CanHu            *bool        `protobuf:"varint,2,opt,name=canHu" json:"canHu,omitempty"`
	CanGuo           *bool        `protobuf:"varint,3,opt,name=canGuo" json:"canGuo,omitempty"`
	GangPai          []*CardInfo  `protobuf:"bytes,4,rep,name=gangPai" json:"gangPai,omitempty"`
	HuCards          []*CardInfo  `protobuf:"bytes,5,rep,name=huCards" json:"huCards,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ChangShaOverTurnAfterGang) Reset()                    { *m = Game_ChangShaOverTurnAfterGang{} }
func (m *Game_ChangShaOverTurnAfterGang) String() string            { return proto.CompactTextString(m) }
func (*Game_ChangShaOverTurnAfterGang) ProtoMessage()               {}
func (*Game_ChangShaOverTurnAfterGang) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{32} }

func (m *Game_ChangShaOverTurnAfterGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_ChangShaOverTurnAfterGang) GetCanHu() bool {
	if m != nil && m.CanHu != nil {
		return *m.CanHu
	}
	return false
}

func (m *Game_ChangShaOverTurnAfterGang) GetCanGuo() bool {
	if m != nil && m.CanGuo != nil {
		return *m.CanGuo
	}
	return false
}

func (m *Game_ChangShaOverTurnAfterGang) GetGangPai() []*CardInfo {
	if m != nil {
		return m.GangPai
	}
	return nil
}

func (m *Game_ChangShaOverTurnAfterGang) GetHuCards() []*CardInfo {
	if m != nil {
		return m.HuCards
	}
	return nil
}

type Game_ChangshQiShouHuOverTurn struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *Game_ChangshQiShouHuOverTurn) Reset()                    { *m = Game_ChangshQiShouHuOverTurn{} }
func (m *Game_ChangshQiShouHuOverTurn) String() string            { return proto.CompactTextString(m) }
func (*Game_ChangshQiShouHuOverTurn) ProtoMessage()               {}
func (*Game_ChangshQiShouHuOverTurn) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{33} }

func (m *Game_ChangshQiShouHuOverTurn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

// 轮到谁操作(摸牌、碰/杠/过/胡)
type Game_OverTurn struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32        `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	NextUserId       *uint32        `protobuf:"varint,3,opt,name=nextUserId" json:"nextUserId,omitempty"`
	ActType          *int32         `protobuf:"varint,4,opt,name=actType" json:"actType,omitempty"`
	CanPeng          *bool          `protobuf:"varint,5,opt,name=canPeng" json:"canPeng,omitempty"`
	CanGang          *bool          `protobuf:"varint,6,opt,name=canGang" json:"canGang,omitempty"`
	CanHu            *bool          `protobuf:"varint,7,opt,name=canHu" json:"canHu,omitempty"`
	ActCard          *CardInfo      `protobuf:"bytes,8,opt,name=actCard" json:"actCard,omitempty"`
	GangCards        []*CardInfo    `protobuf:"bytes,9,rep,name=gangCards" json:"gangCards,omitempty"`
	Time             *int32         `protobuf:"varint,10,opt,name=time" json:"time,omitempty"`
	PaiCount         *int32         `protobuf:"varint,11,opt,name=paiCount" json:"paiCount,omitempty"`
	JiaoInfos        []*JiaoInfo    `protobuf:"bytes,12,rep,name=jiaoInfos" json:"jiaoInfos,omitempty"`
	CanChi           *bool          `protobuf:"varint,13,opt,name=canChi" json:"canChi,omitempty"`
	ChiInfo          []*ChiOverTurn `protobuf:"bytes,14,rep,name=chiInfo" json:"chiInfo,omitempty"`
	CanBu            *bool          `protobuf:"varint,15,opt,name=canBu" json:"canBu,omitempty"`
	CanGuo           *bool          `protobuf:"varint,16,opt,name=canGuo" json:"canGuo,omitempty"`
	BuCards          []*CardInfo    `protobuf:"bytes,17,rep,name=buCards" json:"buCards,omitempty"`
	CanTing          *bool          `protobuf:"varint,18,opt,name=canTing" json:"canTing,omitempty"`
	IsBaoTingAgent   *bool          `protobuf:"varint,19,opt,name=isBaoTingAgent" json:"isBaoTingAgent,omitempty"`
	CanFly           *bool          `protobuf:"varint,20,opt,name=canFly" json:"canFly,omitempty"`
	CanTi            *bool          `protobuf:"varint,21,opt,name=canTi" json:"canTi,omitempty"`
	TiCards          []*CardInfo    `protobuf:"bytes,22,rep,name=tiCards" json:"tiCards,omitempty"`
	UserIdOut        *uint32        `protobuf:"varint,23,opt,name=userIdOut" json:"userIdOut,omitempty"`
	GangBeans        []*GangBean    `protobuf:"bytes,24,rep,name=gangBeans" json:"gangBeans,omitempty"`
	IsQiang          *bool          `protobuf:"varint,25,opt,name=isQiang" json:"isQiang,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Game_OverTurn) Reset()                    { *m = Game_OverTurn{} }
func (m *Game_OverTurn) String() string            { return proto.CompactTextString(m) }
func (*Game_OverTurn) ProtoMessage()               {}
func (*Game_OverTurn) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{34} }

func (m *Game_OverTurn) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_OverTurn) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *Game_OverTurn) GetNextUserId() uint32 {
	if m != nil && m.NextUserId != nil {
		return *m.NextUserId
	}
	return 0
}

func (m *Game_OverTurn) GetActType() int32 {
	if m != nil && m.ActType != nil {
		return *m.ActType
	}
	return 0
}

func (m *Game_OverTurn) GetCanPeng() bool {
	if m != nil && m.CanPeng != nil {
		return *m.CanPeng
	}
	return false
}

func (m *Game_OverTurn) GetCanGang() bool {
	if m != nil && m.CanGang != nil {
		return *m.CanGang
	}
	return false
}

func (m *Game_OverTurn) GetCanHu() bool {
	if m != nil && m.CanHu != nil {
		return *m.CanHu
	}
	return false
}

func (m *Game_OverTurn) GetActCard() *CardInfo {
	if m != nil {
		return m.ActCard
	}
	return nil
}

func (m *Game_OverTurn) GetGangCards() []*CardInfo {
	if m != nil {
		return m.GangCards
	}
	return nil
}

func (m *Game_OverTurn) GetTime() int32 {
	if m != nil && m.Time != nil {
		return *m.Time
	}
	return 0
}

func (m *Game_OverTurn) GetPaiCount() int32 {
	if m != nil && m.PaiCount != nil {
		return *m.PaiCount
	}
	return 0
}

func (m *Game_OverTurn) GetJiaoInfos() []*JiaoInfo {
	if m != nil {
		return m.JiaoInfos
	}
	return nil
}

func (m *Game_OverTurn) GetCanChi() bool {
	if m != nil && m.CanChi != nil {
		return *m.CanChi
	}
	return false
}

func (m *Game_OverTurn) GetChiInfo() []*ChiOverTurn {
	if m != nil {
		return m.ChiInfo
	}
	return nil
}

func (m *Game_OverTurn) GetCanBu() bool {
	if m != nil && m.CanBu != nil {
		return *m.CanBu
	}
	return false
}

func (m *Game_OverTurn) GetCanGuo() bool {
	if m != nil && m.CanGuo != nil {
		return *m.CanGuo
	}
	return false
}

func (m *Game_OverTurn) GetBuCards() []*CardInfo {
	if m != nil {
		return m.BuCards
	}
	return nil
}

func (m *Game_OverTurn) GetCanTing() bool {
	if m != nil && m.CanTing != nil {
		return *m.CanTing
	}
	return false
}

func (m *Game_OverTurn) GetIsBaoTingAgent() bool {
	if m != nil && m.IsBaoTingAgent != nil {
		return *m.IsBaoTingAgent
	}
	return false
}

func (m *Game_OverTurn) GetCanFly() bool {
	if m != nil && m.CanFly != nil {
		return *m.CanFly
	}
	return false
}

func (m *Game_OverTurn) GetCanTi() bool {
	if m != nil && m.CanTi != nil {
		return *m.CanTi
	}
	return false
}

func (m *Game_OverTurn) GetTiCards() []*CardInfo {
	if m != nil {
		return m.TiCards
	}
	return nil
}

func (m *Game_OverTurn) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *Game_OverTurn) GetGangBeans() []*GangBean {
	if m != nil {
		return m.GangBeans
	}
	return nil
}

func (m *Game_OverTurn) GetIsQiang() bool {
	if m != nil && m.IsQiang != nil {
		return *m.IsQiang
	}
	return false
}

// 吃牌的结构
type ChiOverTurn struct {
	ChiCard          []*CardInfo `protobuf:"bytes,14,rep,name=chiCard" json:"chiCard,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *ChiOverTurn) Reset()                    { *m = ChiOverTurn{} }
func (m *ChiOverTurn) String() string            { return proto.CompactTextString(m) }
func (*ChiOverTurn) ProtoMessage()               {}
func (*ChiOverTurn) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{35} }

func (m *ChiOverTurn) GetChiCard() []*CardInfo {
	if m != nil {
		return m.ChiCard
	}
	return nil
}

type JiaoInfo struct {
	OutCard          *CardInfo      `protobuf:"bytes,1,opt,name=outCard" json:"outCard,omitempty"`
	PaiInfos         []*JiaoPaiInfo `protobuf:"bytes,2,rep,name=paiInfos" json:"paiInfos,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *JiaoInfo) Reset()                    { *m = JiaoInfo{} }
func (m *JiaoInfo) String() string            { return proto.CompactTextString(m) }
func (*JiaoInfo) ProtoMessage()               {}
func (*JiaoInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{36} }

func (m *JiaoInfo) GetOutCard() *CardInfo {
	if m != nil {
		return m.OutCard
	}
	return nil
}

func (m *JiaoInfo) GetPaiInfos() []*JiaoPaiInfo {
	if m != nil {
		return m.PaiInfos
	}
	return nil
}

type JiaoPaiInfo struct {
	HuCard           *CardInfo `protobuf:"bytes,1,opt,name=huCard" json:"huCard,omitempty"`
	Fan              *int32    `protobuf:"varint,2,opt,name=fan" json:"fan,omitempty"`
	Count            *int32    `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *JiaoPaiInfo) Reset()                    { *m = JiaoPaiInfo{} }
func (m *JiaoPaiInfo) String() string            { return proto.CompactTextString(m) }
func (*JiaoPaiInfo) ProtoMessage()               {}
func (*JiaoPaiInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{37} }

func (m *JiaoPaiInfo) GetHuCard() *CardInfo {
	if m != nil {
		return m.HuCard
	}
	return nil
}

func (m *JiaoPaiInfo) GetFan() int32 {
	if m != nil && m.Fan != nil {
		return *m.Fan
	}
	return 0
}

func (m *JiaoPaiInfo) GetCount() int32 {
	if m != nil && m.Count != nil {
		return *m.Count
	}
	return 0
}

// 发送游戏信息(广播)
type Game_SendGameInfo struct {
	Header *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	// 1. 首先是牌桌的玩家数据（玩家数据包括其id昵称筹码头像等基本信息，其手牌数据，以及自己打出的牌的数据，还有状态是否已经胡牌了，玩家在整局的总输赢）
	PlayerInfo []*PlayerInfo `protobuf:"bytes,2,rep,name=playerInfo" json:"playerInfo,omitempty"`
	// 2. 桌面信息（包括：游戏是否结束，当前轮到哪个玩家，倒计时剩余时间）
	DeskGameInfo *DeskGameInfo `protobuf:"bytes,3,opt,name=deskGameInfo" json:"deskGameInfo,omitempty"`
	//
	SenderUserId     *uint32         `protobuf:"varint,4,opt,name=senderUserId" json:"senderUserId,omitempty"`
	IsReconnect      *RECONNECT_TYPE `protobuf:"varint,5,opt,name=isReconnect,enum=mjproto.RECONNECT_TYPE" json:"isReconnect,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *Game_SendGameInfo) Reset()                    { *m = Game_SendGameInfo{} }
func (m *Game_SendGameInfo) String() string            { return proto.CompactTextString(m) }
func (*Game_SendGameInfo) ProtoMessage()               {}
func (*Game_SendGameInfo) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{38} }

func (m *Game_SendGameInfo) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *Game_SendGameInfo) GetPlayerInfo() []*PlayerInfo {
	if m != nil {
		return m.PlayerInfo
	}
	return nil
}

func (m *Game_SendGameInfo) GetDeskGameInfo() *DeskGameInfo {
	if m != nil {
		return m.DeskGameInfo
	}
	return nil
}

func (m *Game_SendGameInfo) GetSenderUserId() uint32 {
	if m != nil && m.SenderUserId != nil {
		return *m.SenderUserId
	}
	return 0
}

func (m *Game_SendGameInfo) GetIsReconnect() RECONNECT_TYPE {
	if m != nil && m.IsReconnect != nil {
		return *m.IsReconnect
	}
	return RECONNECT_TYPE_NORMAL
}

type GameReqBuxiazi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	PaiId            *int32       `protobuf:"varint,3,opt,name=paiId" json:"paiId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqBuxiazi) Reset()                    { *m = GameReqBuxiazi{} }
func (m *GameReqBuxiazi) String() string            { return proto.CompactTextString(m) }
func (*GameReqBuxiazi) ProtoMessage()               {}
func (*GameReqBuxiazi) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{39} }

func (m *GameReqBuxiazi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqBuxiazi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameReqBuxiazi) GetPaiId() int32 {
	if m != nil && m.PaiId != nil {
		return *m.PaiId
	}
	return 0
}

type GameAckBuxiazi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BuCards          []*CardInfo  `protobuf:"bytes,2,rep,name=buCards" json:"buCards,omitempty"`
	XiaCouont        *int32       `protobuf:"varint,3,opt,name=xiaCouont" json:"xiaCouont,omitempty"`
	MoCards          []*CardInfo  `protobuf:"bytes,4,rep,name=moCards" json:"moCards,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	IsZhuoXiaBu      *bool        `protobuf:"varint,6,opt,name=IsZhuoXiaBu" json:"IsZhuoXiaBu,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckBuxiazi) Reset()                    { *m = GameAckBuxiazi{} }
func (m *GameAckBuxiazi) String() string            { return proto.CompactTextString(m) }
func (*GameAckBuxiazi) ProtoMessage()               {}
func (*GameAckBuxiazi) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{40} }

func (m *GameAckBuxiazi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckBuxiazi) GetBuCards() []*CardInfo {
	if m != nil {
		return m.BuCards
	}
	return nil
}

func (m *GameAckBuxiazi) GetXiaCouont() int32 {
	if m != nil && m.XiaCouont != nil {
		return *m.XiaCouont
	}
	return 0
}

func (m *GameAckBuxiazi) GetMoCards() []*CardInfo {
	if m != nil {
		return m.MoCards
	}
	return nil
}

func (m *GameAckBuxiazi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameAckBuxiazi) GetIsZhuoXiaBu() bool {
	if m != nil && m.IsZhuoXiaBu != nil {
		return *m.IsZhuoXiaBu
	}
	return false
}

// 报听的广播
type GameBcBaoting struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsBaoTing        *bool        `protobuf:"varint,3,opt,name=isBaoTing" json:"isBaoTing,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameBcBaoting) Reset()                    { *m = GameBcBaoting{} }
func (m *GameBcBaoting) String() string            { return proto.CompactTextString(m) }
func (*GameBcBaoting) ProtoMessage()               {}
func (*GameBcBaoting) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{41} }

func (m *GameBcBaoting) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameBcBaoting) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameBcBaoting) GetIsBaoTing() bool {
	if m != nil && m.IsBaoTing != nil {
		return *m.IsBaoTing
	}
	return false
}

// 玩家请求报听
type GameReqBaoting struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqBaoting) Reset()                    { *m = GameReqBaoting{} }
func (m *GameReqBaoting) String() string            { return proto.CompactTextString(m) }
func (*GameReqBaoting) ProtoMessage()               {}
func (*GameReqBaoting) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{42} }

func (m *GameReqBaoting) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqBaoting) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 回复玩家请求报听 单播
type GameAckBaoting struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	TingInfos        []*JiaoInfo  `protobuf:"bytes,3,rep,name=tingInfos" json:"tingInfos,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckBaoting) Reset()                    { *m = GameAckBaoting{} }
func (m *GameAckBaoting) String() string            { return proto.CompactTextString(m) }
func (*GameAckBaoting) ProtoMessage()               {}
func (*GameAckBaoting) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{43} }

func (m *GameAckBaoting) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckBaoting) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameAckBaoting) GetTingInfos() []*JiaoInfo {
	if m != nil {
		return m.TingInfos
	}
	return nil
}

// 剩余18张牌 如果所有玩家都没有杠
// 开始分张 没人发一张牌
type GameBcFenzhang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Status           *int32       `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameBcFenzhang) Reset()                    { *m = GameBcFenzhang{} }
func (m *GameBcFenzhang) String() string            { return proto.CompactTextString(m) }
func (*GameBcFenzhang) ProtoMessage()               {}
func (*GameBcFenzhang) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{44} }

func (m *GameBcFenzhang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameBcFenzhang) GetStatus() int32 {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return 0
}

// 宜宾麻将 开始飘阶段
// 飘分 给每个玩家单独推送 让其飘分
type GameBcPiao struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CanPiaoFens      []int32      `protobuf:"varint,2,rep,name=canPiaoFens" json:"canPiaoFens,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameBcPiao) Reset()                    { *m = GameBcPiao{} }
func (m *GameBcPiao) String() string            { return proto.CompactTextString(m) }
func (*GameBcPiao) ProtoMessage()               {}
func (*GameBcPiao) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{45} }

func (m *GameBcPiao) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameBcPiao) GetCanPiaoFens() []int32 {
	if m != nil {
		return m.CanPiaoFens
	}
	return nil
}

// 宜宾麻将 飘还是不飘
type GameReqPiao struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	IsPiao           *bool        `protobuf:"varint,2,opt,name=isPiao" json:"isPiao,omitempty"`
	PiaoFen          *int32       `protobuf:"varint,3,opt,name=piaoFen" json:"piaoFen,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqPiao) Reset()                    { *m = GameReqPiao{} }
func (m *GameReqPiao) String() string            { return proto.CompactTextString(m) }
func (*GameReqPiao) ProtoMessage()               {}
func (*GameReqPiao) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{46} }

func (m *GameReqPiao) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqPiao) GetIsPiao() bool {
	if m != nil && m.IsPiao != nil {
		return *m.IsPiao
	}
	return false
}

func (m *GameReqPiao) GetPiaoFen() int32 {
	if m != nil && m.PiaoFen != nil {
		return *m.PiaoFen
	}
	return 0
}

// 宜宾麻将 玩家选择飘的回复
type GameAckPiao struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	IsPiao           *bool        `protobuf:"varint,3,opt,name=isPiao" json:"isPiao,omitempty"`
	PiaoFen          *int32       `protobuf:"varint,4,opt,name=piaoFen" json:"piaoFen,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckPiao) Reset()                    { *m = GameAckPiao{} }
func (m *GameAckPiao) String() string            { return proto.CompactTextString(m) }
func (*GameAckPiao) ProtoMessage()               {}
func (*GameAckPiao) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{47} }

func (m *GameAckPiao) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckPiao) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameAckPiao) GetIsPiao() bool {
	if m != nil && m.IsPiao != nil {
		return *m.IsPiao
	}
	return false
}

func (m *GameAckPiao) GetPiaoFen() int32 {
	if m != nil && m.PiaoFen != nil {
		return *m.PiaoFen
	}
	return 0
}

// 宜宾麻将 广播本金牌
type GameBcBenjin struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Benjin           *CardInfo    `protobuf:"bytes,2,opt,name=benjin" json:"benjin,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameBcBenjin) Reset()                    { *m = GameBcBenjin{} }
func (m *GameBcBenjin) String() string            { return proto.CompactTextString(m) }
func (*GameBcBenjin) ProtoMessage()               {}
func (*GameBcBenjin) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{48} }

func (m *GameBcBenjin) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameBcBenjin) GetBenjin() *CardInfo {
	if m != nil {
		return m.Benjin
	}
	return nil
}

// 宜宾麻将 飞
type GameReqFly struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	FlyCard          *CardInfo    `protobuf:"bytes,3,opt,name=flyCard" json:"flyCard,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqFly) Reset()                    { *m = GameReqFly{} }
func (m *GameReqFly) String() string            { return proto.CompactTextString(m) }
func (*GameReqFly) ProtoMessage()               {}
func (*GameReqFly) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{49} }

func (m *GameReqFly) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqFly) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameReqFly) GetFlyCard() *CardInfo {
	if m != nil {
		return m.FlyCard
	}
	return nil
}

type GameAckFly struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	FlyCards         []*CardInfo  `protobuf:"bytes,2,rep,name=flyCards" json:"flyCards,omitempty"`
	UserIdOut        *uint32      `protobuf:"varint,3,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32      `protobuf:"varint,4,opt,name=userIdIn" json:"userIdIn,omitempty"`
	JiaoInfos        []*JiaoInfo  `protobuf:"bytes,5,rep,name=jiaoInfos" json:"jiaoInfos,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckFly) Reset()                    { *m = GameAckFly{} }
func (m *GameAckFly) String() string            { return proto.CompactTextString(m) }
func (*GameAckFly) ProtoMessage()               {}
func (*GameAckFly) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{50} }

func (m *GameAckFly) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckFly) GetFlyCards() []*CardInfo {
	if m != nil {
		return m.FlyCards
	}
	return nil
}

func (m *GameAckFly) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *GameAckFly) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *GameAckFly) GetJiaoInfos() []*JiaoInfo {
	if m != nil {
		return m.JiaoInfos
	}
	return nil
}

// 宜宾麻将 提
type GameReqTi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	TiCard           *CardInfo    `protobuf:"bytes,3,opt,name=tiCard" json:"tiCard,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqTi) Reset()                    { *m = GameReqTi{} }
func (m *GameReqTi) String() string            { return proto.CompactTextString(m) }
func (*GameReqTi) ProtoMessage()               {}
func (*GameReqTi) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{51} }

func (m *GameReqTi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqTi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameReqTi) GetTiCard() *CardInfo {
	if m != nil {
		return m.TiCard
	}
	return nil
}

type GameAckTi struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	TiCard           *CardInfo    `protobuf:"bytes,3,opt,name=tiCard" json:"tiCard,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckTi) Reset()                    { *m = GameAckTi{} }
func (m *GameAckTi) String() string            { return proto.CompactTextString(m) }
func (*GameAckTi) ProtoMessage()               {}
func (*GameAckTi) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{52} }

func (m *GameAckTi) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckTi) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameAckTi) GetTiCard() *CardInfo {
	if m != nil {
		return m.TiCard
	}
	return nil
}

// 下叫提示 打哪张牌能胡哪些牌
type GameAckJiaoinfos struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	JiaoInfos        []*JiaoInfo  `protobuf:"bytes,2,rep,name=jiaoInfos" json:"jiaoInfos,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckJiaoinfos) Reset()                    { *m = GameAckJiaoinfos{} }
func (m *GameAckJiaoinfos) String() string            { return proto.CompactTextString(m) }
func (*GameAckJiaoinfos) ProtoMessage()               {}
func (*GameAckJiaoinfos) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{53} }

func (m *GameAckJiaoinfos) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckJiaoinfos) GetJiaoInfos() []*JiaoInfo {
	if m != nil {
		return m.JiaoInfos
	}
	return nil
}

// 听牌提示 当前手牌能胡哪些牌
type GameAckTinginfos struct {
	Header           *ProtoHeader   `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	PaiInfos         []*JiaoPaiInfo `protobuf:"bytes,2,rep,name=paiInfos" json:"paiInfos,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *GameAckTinginfos) Reset()                    { *m = GameAckTinginfos{} }
func (m *GameAckTinginfos) String() string            { return proto.CompactTextString(m) }
func (*GameAckTinginfos) ProtoMessage()               {}
func (*GameAckTinginfos) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{54} }

func (m *GameAckTinginfos) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckTinginfos) GetPaiInfos() []*JiaoPaiInfo {
	if m != nil {
		return m.PaiInfos
	}
	return nil
}

// 杠牌 请求一组杠牌id 例如: 东南西北 中中中中 东 南
type GameReqGang struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GangBean         *GangBean    `protobuf:"bytes,2,opt,name=gangBean" json:"gangBean,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqGang) Reset()                    { *m = GameReqGang{} }
func (m *GameReqGang) String() string            { return proto.CompactTextString(m) }
func (*GameReqGang) ProtoMessage()               {}
func (*GameReqGang) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{55} }

func (m *GameReqGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqGang) GetGangBean() *GangBean {
	if m != nil {
		return m.GangBean
	}
	return nil
}

type GameAckGang struct {
	Header           *ProtoHeader    `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	GangBean         *GangBean       `protobuf:"bytes,3,opt,name=gangBean" json:"gangBean,omitempty"`
	UserIdOut        *uint32         `protobuf:"varint,4,opt,name=userIdOut" json:"userIdOut,omitempty"`
	UserIdIn         *uint32         `protobuf:"varint,5,opt,name=userIdIn" json:"userIdIn,omitempty"`
	UserCoinBeans    []*UserCoinBean `protobuf:"bytes,7,rep,name=userCoinBeans" json:"userCoinBeans,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *GameAckGang) Reset()                    { *m = GameAckGang{} }
func (m *GameAckGang) String() string            { return proto.CompactTextString(m) }
func (*GameAckGang) ProtoMessage()               {}
func (*GameAckGang) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{56} }

func (m *GameAckGang) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckGang) GetGangBean() *GangBean {
	if m != nil {
		return m.GangBean
	}
	return nil
}

func (m *GameAckGang) GetUserIdOut() uint32 {
	if m != nil && m.UserIdOut != nil {
		return *m.UserIdOut
	}
	return 0
}

func (m *GameAckGang) GetUserIdIn() uint32 {
	if m != nil && m.UserIdIn != nil {
		return *m.UserIdIn
	}
	return 0
}

func (m *GameAckGang) GetUserCoinBeans() []*UserCoinBean {
	if m != nil {
		return m.UserCoinBeans
	}
	return nil
}

// 补花的ack 没有req 由服务器推
type GameAckBuhua struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	BuCards          []int32      `protobuf:"varint,2,rep,name=buCards" json:"buCards,omitempty"`
	MoCards          []int32      `protobuf:"varint,4,rep,name=moCards" json:"moCards,omitempty"`
	UserId           *uint32      `protobuf:"varint,5,opt,name=userId" json:"userId,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckBuhua) Reset()                    { *m = GameAckBuhua{} }
func (m *GameAckBuhua) String() string            { return proto.CompactTextString(m) }
func (*GameAckBuhua) ProtoMessage()               {}
func (*GameAckBuhua) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{57} }

func (m *GameAckBuhua) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckBuhua) GetBuCards() []int32 {
	if m != nil {
		return m.BuCards
	}
	return nil
}

func (m *GameAckBuhua) GetMoCards() []int32 {
	if m != nil {
		return m.MoCards
	}
	return nil
}

func (m *GameAckBuhua) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

// 上嘎 给每个玩家单独推送 让其上嘎
type GameBcShangga struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	CanShangGas      []int32      `protobuf:"varint,2,rep,name=canShangGas" json:"canShangGas,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameBcShangga) Reset()                    { *m = GameBcShangga{} }
func (m *GameBcShangga) String() string            { return proto.CompactTextString(m) }
func (*GameBcShangga) ProtoMessage()               {}
func (*GameBcShangga) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{58} }

func (m *GameBcShangga) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameBcShangga) GetCanShangGas() []int32 {
	if m != nil {
		return m.CanShangGas
	}
	return nil
}

// 上嘎请求
type GameReqShangga struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	Ga               *int32       `protobuf:"varint,2,opt,name=ga" json:"ga,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameReqShangga) Reset()                    { *m = GameReqShangga{} }
func (m *GameReqShangga) String() string            { return proto.CompactTextString(m) }
func (*GameReqShangga) ProtoMessage()               {}
func (*GameReqShangga) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{59} }

func (m *GameReqShangga) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameReqShangga) GetGa() int32 {
	if m != nil && m.Ga != nil {
		return *m.Ga
	}
	return 0
}

// 上嘎的ack 成功广播 失败单播
type GameAckShangga struct {
	Header           *ProtoHeader `protobuf:"bytes,1,opt,name=header" json:"header,omitempty"`
	UserId           *uint32      `protobuf:"varint,2,opt,name=userId" json:"userId,omitempty"`
	Ga               *int32       `protobuf:"varint,3,opt,name=ga" json:"ga,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *GameAckShangga) Reset()                    { *m = GameAckShangga{} }
func (m *GameAckShangga) String() string            { return proto.CompactTextString(m) }
func (*GameAckShangga) ProtoMessage()               {}
func (*GameAckShangga) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{60} }

func (m *GameAckShangga) GetHeader() *ProtoHeader {
	if m != nil {
		return m.Header
	}
	return nil
}

func (m *GameAckShangga) GetUserId() uint32 {
	if m != nil && m.UserId != nil {
		return *m.UserId
	}
	return 0
}

func (m *GameAckShangga) GetGa() int32 {
	if m != nil && m.Ga != nil {
		return *m.Ga
	}
	return 0
}

func init() {
	proto.RegisterType((*UserCoinBean)(nil), "mjproto.user_coin_bean")
	proto.RegisterType((*Game_Opening)(nil), "mjproto.game_Opening")
	proto.RegisterType((*Game_DealCards)(nil), "mjproto.game_DealCards")
	proto.RegisterType((*Game_ExchangeCards)(nil), "mjproto.game_ExchangeCards")
	proto.RegisterType((*Game_DealHaiDiCards)(nil), "mjproto.game_DealHaiDiCards")
	proto.RegisterType((*Game_ReqDealHaiDiCards)(nil), "mjproto.game_ReqDealHaiDiCards")
	proto.RegisterType((*Game_AckDealHaiDiCards)(nil), "mjproto.game_AckDealHaiDiCards")
	proto.RegisterType((*Game_AckExchangeCards)(nil), "mjproto.game_AckExchangeCards")
	proto.RegisterType((*Game_ExchangeCardsEnd)(nil), "mjproto.Game_ExchangeCardsEnd")
	proto.RegisterType((*Game_DingQue)(nil), "mjproto.game_DingQue")
	proto.RegisterType((*DingQueEndBean)(nil), "mjproto.DingQueEndBean")
	proto.RegisterType((*Game_DingQueEnd)(nil), "mjproto.game_DingQueEnd")
	proto.RegisterType((*Game_BroadcastBeginDingQue)(nil), "mjproto.game_BroadcastBeginDingQue")
	proto.RegisterType((*Game_BroadcastBeginExchange)(nil), "mjproto.game_BroadcastBeginExchange")
	proto.RegisterType((*Game_GetInCard)(nil), "mjproto.game_GetInCard")
	proto.RegisterType((*Game_SendOutCard)(nil), "mjproto.game_SendOutCard")
	proto.RegisterType((*Game_AckSendOutCard)(nil), "mjproto.game_AckSendOutCard")
	proto.RegisterType((*Game_ActPeng)(nil), "mjproto.game_ActPeng")
	proto.RegisterType((*Game_AckActPeng)(nil), "mjproto.game_AckActPeng")
	proto.RegisterType((*Game_ActChi)(nil), "mjproto.game_ActChi")
	proto.RegisterType((*Game_AckActChi)(nil), "mjproto.game_AckActChi")
	proto.RegisterType((*Game_ActGang)(nil), "mjproto.game_ActGang")
	proto.RegisterType((*Game_AckActGang)(nil), "mjproto.game_AckActGang")
	proto.RegisterType((*Game_ChangShaActGang)(nil), "mjproto.game_ChangShaActGang")
	proto.RegisterType((*Game_ChangShaAckActGang)(nil), "mjproto.game_ChangShaAckActGang")
	proto.RegisterType((*Game_ActHu)(nil), "mjproto.game_ActHu")
	proto.RegisterType((*Game_AckActHu)(nil), "mjproto.game_AckActHu")
	proto.RegisterType((*Game_ActChangShaQiShouHu)(nil), "mjproto.game_ActChangShaQiShouHu")
	proto.RegisterType((*Game_AckActChangShaQiShouHu)(nil), "mjproto.game_AckActChangShaQiShouHu")
	proto.RegisterType((*Game_AckActHuChangSha)(nil), "mjproto.game_AckActHuChangSha")
	proto.RegisterType((*Game_ActGuo)(nil), "mjproto.game_ActGuo")
	proto.RegisterType((*Game_AckActGuo)(nil), "mjproto.game_AckActGuo")
	proto.RegisterType((*Game_ChangShaOverTurnAfterGang)(nil), "mjproto.game_ChangShaOverTurnAfterGang")
	proto.RegisterType((*Game_ChangshQiShouHuOverTurn)(nil), "mjproto.game_ChangshQiShouHuOverTurn")
	proto.RegisterType((*Game_OverTurn)(nil), "mjproto.game_OverTurn")
	proto.RegisterType((*ChiOverTurn)(nil), "mjproto.ChiOverTurn")
	proto.RegisterType((*JiaoInfo)(nil), "mjproto.JiaoInfo")
	proto.RegisterType((*JiaoPaiInfo)(nil), "mjproto.JiaoPaiInfo")
	proto.RegisterType((*Game_SendGameInfo)(nil), "mjproto.game_SendGameInfo")
	proto.RegisterType((*GameReqBuxiazi)(nil), "mjproto.game_req_buxiazi")
	proto.RegisterType((*GameAckBuxiazi)(nil), "mjproto.game_ack_buxiazi")
	proto.RegisterType((*GameBcBaoting)(nil), "mjproto.game_bc_baoting")
	proto.RegisterType((*GameReqBaoting)(nil), "mjproto.game_req_baoting")
	proto.RegisterType((*GameAckBaoting)(nil), "mjproto.game_ack_baoting")
	proto.RegisterType((*GameBcFenzhang)(nil), "mjproto.game_bc_fenzhang")
	proto.RegisterType((*GameBcPiao)(nil), "mjproto.game_bc_piao")
	proto.RegisterType((*GameReqPiao)(nil), "mjproto.game_req_piao")
	proto.RegisterType((*GameAckPiao)(nil), "mjproto.game_ack_piao")
	proto.RegisterType((*GameBcBenjin)(nil), "mjproto.game_bc_benjin")
	proto.RegisterType((*GameReqFly)(nil), "mjproto.game_req_fly")
	proto.RegisterType((*GameAckFly)(nil), "mjproto.game_ack_fly")
	proto.RegisterType((*GameReqTi)(nil), "mjproto.game_req_ti")
	proto.RegisterType((*GameAckTi)(nil), "mjproto.game_ack_ti")
	proto.RegisterType((*GameAckJiaoinfos)(nil), "mjproto.game_ack_jiaoinfos")
	proto.RegisterType((*GameAckTinginfos)(nil), "mjproto.game_ack_tinginfos")
	proto.RegisterType((*GameReqGang)(nil), "mjproto.game_req_gang")
	proto.RegisterType((*GameAckGang)(nil), "mjproto.game_ack_gang")
	proto.RegisterType((*GameAckBuhua)(nil), "mjproto.game_ack_buhua")
	proto.RegisterType((*GameBcShangga)(nil), "mjproto.game_bc_shangga")
	proto.RegisterType((*GameReqShangga)(nil), "mjproto.game_req_shangga")
	proto.RegisterType((*GameAckShangga)(nil), "mjproto.game_ack_shangga")
	proto.RegisterEnum("mjproto.ExchangeType", ExchangeType_name, ExchangeType_value)
	proto.RegisterEnum("mjproto.RECONNECT_TYPE", RECONNECT_TYPE_name, RECONNECT_TYPE_value)
}

func init() { proto.RegisterFile("mahjong_play.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 2176 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0xcf, 0x6f, 0x1c, 0x49,
	0xf5, 0xdf, 0x9e, 0xf1, 0xd8, 0xe3, 0x37, 0xf6, 0xc4, 0xe9, 0x38, 0x4e, 0x6f, 0x36, 0xdf, 0xc8,
	0x2a, 0x7d, 0x81, 0x6c, 0x42, 0xb2, 0xe0, 0x3d, 0x2d, 0xb0, 0x12, 0xe3, 0x89, 0x33, 0x76, 0x94,
	0xb5, 0x9d, 0xb6, 0x83, 0x42, 0x0e, 0x0c, 0x35, 0x3d, 0xe5, 0xe9, 0xb2, 0xc7, 0xdd, 0xb3, 0xfd,
	0x03, 0xe2, 0x95, 0x58, 0x09, 0x71, 0x40, 0x20, 0x0e, 0x48, 0x1c, 0xb8, 0x70, 0xe3, 0x0f, 0xe0,
	0xc4, 0x09, 0x71, 0xe0, 0xc6, 0x5f, 0xb0, 0x07, 0xc4, 0x95, 0x3f, 0x00, 0xf8, 0x03, 0x40, 0x55,
	0xfd, 0xaa, 0xbb, 0x7a, 0xec, 0xf6, 0xa4, 0xc7, 0xa3, 0xac, 0xb8, 0x24, 0x7e, 0x55, 0xaf, 0xeb,
	0xbd, 0xaa, 0xf7, 0xeb, 0xf3, 0xde, 0x80, 0x79, 0x4a, 0xdd, 0x63, 0xdf, 0x1b, 0x74, 0x47, 0x43,
	0x7a, 0xf6, 0x68, 0x14, 0xf8, 0x91, 0x6f, 0x2e, 0x9c, 0x1e, 0xcb, 0x3f, 0x6e, 0x43, 0x8f, 0x86,
	0x2c, 0x59, 0x24, 0xdf, 0x81, 0x66, 0x1c, 0xb2, 0xa0, 0xeb, 0xf8, 0xdc, 0xeb, 0xf6, 0x18, 0xf5,
	0xcc, 0x35, 0x98, 0x17, 0x2b, 0x3b, 0x7d, 0xcb, 0x58, 0x37, 0xee, 0x2d, 0xdb, 0x48, 0x99, 0x26,
	0xcc, 0x09, 0x26, 0xab, 0xb2, 0x6e, 0xdc, 0xab, 0xda, 0xf2, 0x6f, 0xf2, 0x4f, 0x03, 0x96, 0x06,
	0xf4, 0x94, 0x75, 0xf7, 0x46, 0xcc, 0xe3, 0xde, 0xc0, 0xfc, 0x3a, 0xcc, 0xbb, 0x8c, 0xf6, 0x59,
	0x20, 0x3f, 0x6e, 0x6c, 0xac, 0x3e, 0x42, 0xa1, 0x8f, 0xf6, 0xc5, 0xbf, 0xdb, 0x72, 0xcf, 0x46,
	0x1e, 0xf3, 0xff, 0x61, 0xb9, 0x1d, 0x07, 0xc1, 0xfe, 0x90, 0x9e, 0xb5, 0xfd, 0xd8, 0x8b, 0xe4,
	0xd9, 0x35, 0x3b, 0xbf, 0x68, 0xae, 0x42, 0xad, 0xcf, 0x1d, 0xf6, 0x4d, 0xab, 0x2a, 0x77, 0x13,
	0x42, 0xad, 0x6e, 0x58, 0x73, 0xd9, 0xea, 0x86, 0xf9, 0x31, 0x2c, 0x0b, 0x75, 0xdb, 0x3e, 0xf7,
	0x36, 0x19, 0xf5, 0x42, 0xab, 0xb6, 0x5e, 0xbd, 0xd7, 0xd8, 0xb8, 0x95, 0xaa, 0x91, 0xbf, 0xac,
	0x9d, 0xe7, 0x36, 0x09, 0x2c, 0x39, 0x71, 0x10, 0x3c, 0xe5, 0xd4, 0x7f, 0xc6, 0xbd, 0x81, 0x35,
	0x2f, 0xcf, 0xce, 0xad, 0x91, 0xdf, 0x1a, 0xd0, 0x94, 0x77, 0x7e, 0xcc, 0xe8, 0xb0, 0x4d, 0x83,
	0x7e, 0x58, 0xf2, 0xd6, 0x1f, 0x02, 0x08, 0xab, 0xb0, 0x40, 0x7c, 0x6c, 0x55, 0xa4, 0x82, 0x37,
	0xb2, 0x2f, 0xd2, 0x2d, 0x5b, 0x63, 0x13, 0x9a, 0xf5, 0x19, 0x1d, 0xb2, 0xe0, 0x45, 0x62, 0x9b,
	0xaa, 0xb4, 0x4d, 0x6e, 0x8d, 0xfc, 0xc9, 0x00, 0x53, 0x6a, 0xb6, 0xf5, 0xda, 0x71, 0xa9, 0x37,
	0x60, 0xd3, 0x68, 0xf7, 0x31, 0xac, 0x30, 0xfc, 0x7c, 0x2f, 0x8e, 0xe4, 0x09, 0xa8, 0xe3, 0xf5,
	0xf4, 0x3b, 0xb1, 0xba, 0xe3, 0x1d, 0xf9, 0xf6, 0x39, 0x56, 0xcd, 0x7b, 0xaa, 0x39, 0xef, 0x59,
	0x87, 0x86, 0xe2, 0xdd, 0x8d, 0x4f, 0xd1, 0x68, 0xfa, 0x12, 0xf9, 0x95, 0x01, 0x37, 0xd2, 0x77,
	0xdd, 0xa6, 0xfc, 0x31, 0x9f, 0x46, 0xfd, 0x0f, 0x60, 0xd1, 0xa5, 0xbc, 0xcf, 0xf1, 0x6d, 0x8d,
	0x8b, 0xf5, 0xce, 0x78, 0x8a, 0x14, 0x26, 0x01, 0xac, 0x49, 0x6d, 0x6c, 0xf6, 0xe9, 0x95, 0x14,
	0xca, 0xce, 0xaf, 0x8c, 0x87, 0x93, 0xc7, 0x58, 0x22, 0xb5, 0x6e, 0xcb, 0xbf, 0x53, 0x99, 0x2d,
	0xe7, 0xe4, 0xad, 0xc9, 0xfc, 0x9d, 0x01, 0x37, 0x95, 0xd0, 0xab, 0xf8, 0x4d, 0x91, 0xcc, 0x8b,
	0xfc, 0xa9, 0xfa, 0xc6, 0xfe, 0x44, 0xfe, 0x6a, 0xc0, 0xcd, 0xce, 0x39, 0x9f, 0xde, 0xf2, 0xfa,
	0x25, 0xd5, 0xfb, 0x36, 0x5c, 0x53, 0x67, 0xef, 0x78, 0x13, 0xbc, 0x7a, 0x9c, 0x73, 0xdc, 0x79,
	0xab, 0xe7, 0x9c, 0x57, 0x84, 0xa7, 0x22, 0x0f, 0xcf, 0x46, 0x0c, 0xfd, 0x3b, 0xb7, 0x46, 0x8e,
	0x31, 0x57, 0x3e, 0xe6, 0xde, 0xe0, 0x79, 0xcc, 0x4a, 0x5e, 0x60, 0x15, 0x6a, 0x8e, 0x3f, 0xf4,
	0x03, 0xcc, 0x91, 0x09, 0x51, 0xe8, 0xbd, 0xdf, 0x85, 0x26, 0x8a, 0xd9, 0xf2, 0xfa, 0x9b, 0x97,
	0xa5, 0xf5, 0x35, 0x98, 0x3f, 0x1a, 0xfa, 0x3f, 0x66, 0xea, 0x60, 0xa4, 0xc8, 0x10, 0xae, 0xe9,
	0xda, 0x96, 0x7f, 0xf1, 0x07, 0x30, 0xf7, 0x3c, 0x66, 0xea, 0x99, 0xb3, 0x0c, 0x9c, 0xd7, 0xcb,
	0x96, 0x4c, 0xe4, 0x73, 0xb8, 0x2d, 0xa5, 0x6d, 0x06, 0x3e, 0xed, 0x3b, 0x34, 0x8c, 0x36, 0xd9,
	0x80, 0x7b, 0x57, 0x7e, 0xa9, 0x6a, 0xf6, 0x52, 0x77, 0x60, 0x31, 0x60, 0x8e, 0xef, 0x79, 0xcc,
	0x89, 0x30, 0x00, 0xb2, 0x05, 0xc2, 0xe1, 0xbd, 0x0b, 0xe4, 0x2b, 0x9f, 0x2b, 0xa9, 0x40, 0x4e,
	0x54, 0x65, 0x5c, 0x14, 0xc3, 0xf2, 0xd1, 0x61, 0x51, 0xe2, 0x5f, 0x25, 0x4f, 0xff, 0x0a, 0xcc,
	0x39, 0x97, 0x26, 0x37, 0xb9, 0x4d, 0x5e, 0xc2, 0x8a, 0x14, 0x73, 0xc0, 0xbc, 0x3e, 0x46, 0x53,
	0xf9, 0x88, 0x16, 0x27, 0x61, 0x44, 0xd7, 0x6c, 0xa4, 0xc8, 0x7f, 0x54, 0xa2, 0x6e, 0x39, 0x27,
	0x57, 0x3a, 0x3d, 0x60, 0x61, 0x3c, 0x54, 0x45, 0x1f, 0xa9, 0xc2, 0x02, 0xa2, 0xae, 0x3d, 0x77,
	0xe9, 0xb5, 0xcd, 0xaf, 0x41, 0x4d, 0xfc, 0xbf, 0x61, 0xd5, 0x8a, 0xf8, 0x92, 0x7d, 0x21, 0x87,
	0x87, 0xad, 0x38, 0xf2, 0x65, 0x91, 0xaf, 0xdb, 0x48, 0x89, 0x48, 0x76, 0xa9, 0xd7, 0xdf, 0xa7,
	0x3c, 0x81, 0x24, 0x0b, 0x49, 0x24, 0xeb, 0x6b, 0xe4, 0x67, 0x0a, 0xf6, 0xb4, 0x9c, 0x68, 0x9f,
	0x95, 0x86, 0x3d, 0x45, 0xa9, 0xf2, 0x21, 0xd4, 0x47, 0xcc, 0x1b, 0xc8, 0xd2, 0x55, 0x2d, 0x52,
	0x3f, 0x65, 0x21, 0xff, 0x36, 0x30, 0x44, 0x5b, 0xce, 0xc9, 0x74, 0x8a, 0xe8, 0x02, 0x0b, 0xb3,
	0x61, 0xca, 0x22, 0xfc, 0x3a, 0xd1, 0x74, 0x2f, 0x8e, 0xd0, 0x3a, 0xd9, 0x82, 0x79, 0x1b, 0xea,
	0x09, 0xb1, 0xe3, 0x49, 0x23, 0x2d, 0xdb, 0x29, 0x2d, 0xaa, 0xf2, 0x31, 0xa7, 0xbe, 0x38, 0x4f,
	0x41, 0xb2, 0x4c, 0xd2, 0x53, 0xdc, 0xb1, 0x33, 0x1e, 0xd3, 0x82, 0x05, 0x1e, 0x3e, 0xe7, 0x14,
	0x31, 0x58, 0xdd, 0x56, 0x24, 0xf9, 0xa3, 0x01, 0x0d, 0xf5, 0xf6, 0x6d, 0x97, 0xcf, 0xe8, 0xe9,
	0x1f, 0xc0, 0x82, 0xe3, 0xf2, 0xcb, 0x5f, 0x5e, 0x71, 0x98, 0x1f, 0x42, 0xc3, 0x71, 0x7d, 0x3f,
	0x4c, 0x6a, 0x91, 0x35, 0x57, 0xf4, 0x72, 0x3a, 0x17, 0xf9, 0x42, 0xc1, 0xc6, 0xc4, 0x5a, 0xe5,
	0x55, 0xd7, 0x54, 0x2c, 0xb4, 0x55, 0xaa, 0xe2, 0xdb, 0x33, 0x15, 0xf9, 0x8d, 0x16, 0x0c, 0x1d,
	0x3a, 0xcb, 0x60, 0x18, 0xd0, 0x89, 0xc1, 0xa0, 0x58, 0xcc, 0x26, 0x54, 0x7a, 0xb1, 0xbc, 0x4c,
	0xdd, 0xae, 0xf4, 0x62, 0xf2, 0xfb, 0x4a, 0x2e, 0x38, 0xa6, 0x50, 0xec, 0x76, 0xa2, 0x80, 0x2c,
	0xe7, 0x49, 0x8a, 0x4a, 0x69, 0xa1, 0x5c, 0x27, 0x53, 0xae, 0x28, 0x70, 0x14, 0x4b, 0xde, 0x1a,
	0x73, 0x97, 0x59, 0xa3, 0x36, 0x66, 0x8d, 0xbb, 0x00, 0xb2, 0x04, 0x1d, 0xb8, 0x74, 0x33, 0xc6,
	0x50, 0xd0, 0x56, 0xce, 0xf7, 0x3b, 0x0b, 0x65, 0xfa, 0x1d, 0xf2, 0x07, 0x03, 0x56, 0xe5, 0x2b,
	0xb5, 0xf1, 0xc8, 0x2f, 0xd5, 0x86, 0xa2, 0xfb, 0x42, 0x3d, 0x84, 0x12, 0x68, 0xcd, 0xdc, 0x1a,
	0xf9, 0xbb, 0x01, 0xb7, 0xc6, 0x34, 0xfe, 0x5f, 0xb6, 0x6f, 0xe2, 0xb6, 0xf3, 0xa9, 0xdb, 0xfe,
	0x04, 0x40, 0xc5, 0xd2, 0x76, 0x3c, 0x23, 0x2b, 0xbc, 0x0f, 0xf3, 0x6e, 0x7c, 0xb9, 0x0d, 0x90,
	0x81, 0xfc, 0xb9, 0x02, 0xcb, 0x5a, 0xd4, 0x4c, 0xa3, 0x82, 0x1b, 0x6b, 0x2f, 0x8a, 0x54, 0x09,
	0x15, 0xae, 0xf0, 0x96, 0xb2, 0xa2, 0xbf, 0xe2, 0x9f, 0x68, 0x15, 0x5d, 0x50, 0xe6, 0x7d, 0x58,
	0x18, 0x51, 0x2e, 0xb5, 0x12, 0xd1, 0xd1, 0xdc, 0x58, 0xc9, 0xee, 0x90, 0xac, 0xdb, 0x8a, 0xe1,
	0x7c, 0x3c, 0xd5, 0x4b, 0xc5, 0xd3, 0x08, 0xac, 0xac, 0x36, 0x25, 0xfe, 0xf9, 0x9c, 0x1f, 0xb8,
	0x7e, 0x3c, 0x33, 0x63, 0x36, 0xa1, 0xe2, 0xc6, 0x88, 0x5f, 0x2b, 0x6e, 0x4c, 0xfe, 0x66, 0x20,
	0x72, 0x55, 0x65, 0xe5, 0xaa, 0x52, 0x2f, 0xb4, 0xdf, 0x43, 0xa8, 0x23, 0x00, 0xba, 0xa4, 0x79,
	0x4b, 0x59, 0x84, 0x95, 0xdc, 0x18, 0x07, 0x15, 0x58, 0x5f, 0x14, 0xad, 0x5b, 0xa3, 0x36, 0xc1,
	0x1a, 0xa4, 0x95, 0xb5, 0xa6, 0xd2, 0x1b, 0xd5, 0xed, 0xcc, 0x7b, 0x50, 0x75, 0xe3, 0xd0, 0x32,
	0xa4, 0x2a, 0x6b, 0xe9, 0x01, 0x39, 0x66, 0x5b, 0xb0, 0x90, 0x83, 0x0c, 0x2d, 0x74, 0x62, 0x7f,
	0x36, 0x46, 0x20, 0xdf, 0xcb, 0x95, 0xf2, 0xd9, 0x9d, 0xfb, 0x85, 0x01, 0x77, 0x73, 0xc9, 0x6d,
	0xef, 0x47, 0x2c, 0x38, 0x8c, 0x03, 0xaf, 0x75, 0x14, 0xb1, 0x60, 0x8a, 0x1c, 0x27, 0x5a, 0x21,
	0xea, 0x6d, 0xc7, 0xd8, 0x85, 0x24, 0x44, 0x02, 0xec, 0xbd, 0x4e, 0xec, 0xa3, 0x1f, 0x21, 0x25,
	0x10, 0x86, 0xc8, 0x80, 0xfb, 0x94, 0x17, 0x63, 0x1a, 0xc5, 0x21, 0x98, 0x93, 0x88, 0x3d, 0x8f,
	0x12, 0x32, 0x66, 0xe4, 0x20, 0xcf, 0xe0, 0x4e, 0x76, 0xaf, 0xd0, 0x55, 0xde, 0xa9, 0xae, 0x57,
	0xee, 0x56, 0xe4, 0x2f, 0xf3, 0x98, 0xa5, 0xa6, 0xfb, 0xbe, 0x30, 0xb6, 0xee, 0x02, 0x78, 0xec,
	0x75, 0x94, 0x9b, 0xb0, 0x69, 0x2b, 0x02, 0x94, 0x52, 0x27, 0xd2, 0xfa, 0x7b, 0x45, 0x8a, 0x1d,
	0x87, 0x7a, 0x02, 0x81, 0xcb, 0xac, 0x54, 0xb7, 0x15, 0x89, 0x3b, 0x1d, 0x0d, 0xc8, 0x22, 0x99,
	0xd9, 0x66, 0x41, 0xb7, 0xcd, 0x03, 0x29, 0x43, 0xa6, 0xca, 0x7a, 0x21, 0x10, 0x45, 0x0e, 0x81,
	0xd5, 0x54, 0xf1, 0x0c, 0xad, 0xc5, 0x22, 0x2b, 0x64, 0x3c, 0xa6, 0x09, 0x73, 0x11, 0x3f, 0x65,
	0x16, 0x48, 0xf5, 0xe5, 0xdf, 0x22, 0x58, 0x47, 0xaa, 0xd9, 0x69, 0x24, 0x75, 0x50, 0xd1, 0x79,
	0x30, 0xb8, 0xf4, 0x06, 0xb8, 0x3d, 0x71, 0xad, 0xb6, 0xcb, 0xad, 0xe5, 0xd4, 0xb5, 0x04, 0xd4,
	0x7d, 0x24, 0xc1, 0xab, 0xe0, 0xb1, 0x9a, 0xf2, 0x98, 0xcc, 0x42, 0x6d, 0x97, 0x2b, 0x3b, 0xda,
	0x8a, 0x09, 0x1f, 0x67, 0x33, 0xb6, 0xae, 0xa5, 0x8f, 0xb3, 0xa9, 0x3b, 0xee, 0xca, 0xb8, 0xe3,
	0xf6, 0xd0, 0x17, 0xaf, 0x17, 0xfa, 0x22, 0x72, 0xa0, 0x45, 0x0e, 0xb9, 0x37, 0xb0, 0xcc, 0xd4,
	0x22, 0x82, 0x34, 0xbf, 0x0a, 0x4d, 0x1e, 0x6e, 0x52, 0x5f, 0x10, 0xad, 0x01, 0xf3, 0x22, 0xeb,
	0x86, 0x64, 0x18, 0x5b, 0x45, 0x35, 0x9e, 0x0c, 0xcf, 0xac, 0xd5, 0x54, 0x8d, 0x27, 0xc3, 0x33,
	0x54, 0xfa, 0x90, 0x5b, 0x37, 0x53, 0xa5, 0x0f, 0x65, 0xa0, 0x44, 0xc9, 0x14, 0xcf, 0x5a, 0x2b,
	0x54, 0x0e, 0x39, 0xf2, 0xd5, 0xef, 0xd6, 0x78, 0xf5, 0x43, 0x7b, 0x27, 0x95, 0xc9, 0x1a, 0x3b,
	0xac, 0x83, 0x3b, 0x76, 0xc6, 0xa3, 0xb7, 0x51, 0xef, 0xe6, 0xdb, 0xa8, 0x6f, 0x41, 0x43, 0x7b,
	0x78, 0xbd, 0xb9, 0x68, 0x4e, 0x6a, 0x2e, 0x08, 0x87, 0xba, 0xb2, 0xbd, 0xf8, 0xd0, 0x4f, 0xfa,
	0x7f, 0x0c, 0xbd, 0x8b, 0x3e, 0x44, 0x0e, 0xf3, 0x1b, 0xd2, 0xd5, 0x12, 0x6f, 0xaa, 0x8c, 0xb9,
	0x81, 0x38, 0x71, 0x3f, 0xd9, 0xb4, 0x53, 0x2e, 0xf2, 0x43, 0x68, 0x68, 0x1b, 0x1a, 0x8e, 0x30,
	0x26, 0xe1, 0x88, 0x15, 0xa8, 0x1e, 0x51, 0x0f, 0xeb, 0x98, 0xf8, 0x33, 0x99, 0x0b, 0x09, 0x2f,
	0xaf, 0xaa, 0x09, 0x9a, 0xe8, 0xe5, 0x7f, 0x5d, 0x81, 0xeb, 0xe9, 0xa0, 0xa4, 0x43, 0x4f, 0x99,
	0x14, 0x34, 0xe5, 0x44, 0x5f, 0x3a, 0xf8, 0xc5, 0x13, 0x7d, 0xa9, 0x9c, 0xc6, 0x66, 0x7e, 0x04,
	0x4b, 0x7d, 0x16, 0x9e, 0x28, 0x91, 0x88, 0x8c, 0x6e, 0x66, 0x73, 0x32, 0x6d, 0xd3, 0xce, 0xb1,
	0x0a, 0xa0, 0x1c, 0x32, 0xaf, 0x9f, 0xfe, 0x18, 0x90, 0xd4, 0xd8, 0xdc, 0x9a, 0xf9, 0x11, 0x34,
	0x78, 0x68, 0xa7, 0x63, 0x28, 0x91, 0x96, 0x9a, 0x1a, 0x8e, 0xb1, 0xb7, 0xda, 0x7b, 0xbb, 0xbb,
	0x5b, 0xed, 0xc3, 0xee, 0xe1, 0xf7, 0xf7, 0xb7, 0x6c, 0x9d, 0x97, 0x78, 0x38, 0x3a, 0x0a, 0xd8,
	0xa7, 0xdd, 0x5e, 0xfc, 0x9a, 0xd3, 0xcf, 0x66, 0xd5, 0x66, 0xaf, 0x42, 0x4d, 0x98, 0xb6, 0xaf,
	0x4c, 0x20, 0x09, 0xf2, 0x2f, 0x03, 0x05, 0x52, 0xe7, 0x64, 0x4a, 0x81, 0x5a, 0x06, 0xa8, 0x4c,
	0xcc, 0x00, 0x77, 0x60, 0xf1, 0x35, 0xa7, 0x6d, 0x3f, 0xf6, 0x53, 0x67, 0xc8, 0x16, 0xc4, 0x51,
	0xa7, 0xfe, 0x84, 0xce, 0x5e, 0x71, 0x68, 0x17, 0xad, 0x8d, 0xff, 0xdc, 0xb1, 0x13, 0xbe, 0x72,
	0x63, 0xff, 0x25, 0xcf, 0x1a, 0x37, 0x7d, 0x89, 0xc4, 0xd8, 0x9f, 0xf6, 0x9c, 0x6e, 0x8f, 0xfa,
	0x11, 0x9f, 0x59, 0xd3, 0x75, 0x07, 0x16, 0xd3, 0x7c, 0xa5, 0x06, 0x9d, 0xe9, 0x42, 0x3a, 0x16,
	0x94, 0xb6, 0x9d, 0xa5, 0x5c, 0xf2, 0x8b, 0x9c, 0x15, 0x67, 0x7a, 0xa5, 0x0f, 0x60, 0x51, 0x9c,
	0x96, 0x24, 0x8e, 0x6a, 0x61, 0x19, 0x4a, 0x79, 0xd2, 0x5b, 0xf6, 0x9c, 0xee, 0x11, 0xf3, 0x3e,
	0x73, 0xa7, 0x6a, 0x69, 0xc3, 0x88, 0x46, 0x71, 0xa8, 0x90, 0x70, 0x42, 0x91, 0x1f, 0xe0, 0xb0,
	0xa3, 0xe7, 0x74, 0x47, 0x9c, 0x96, 0x4d, 0x14, 0xeb, 0xd0, 0x10, 0xc0, 0x80, 0x53, 0xff, 0x09,
	0xf3, 0x42, 0x1c, 0x50, 0xeb, 0x4b, 0xc4, 0x47, 0x68, 0x23, 0xec, 0x33, 0x85, 0x00, 0xd9, 0x03,
	0x89, 0xc3, 0x10, 0xf1, 0x21, 0x25, 0x0a, 0xc1, 0x28, 0x11, 0x81, 0x0e, 0xaf, 0x48, 0xf2, 0x73,
	0x03, 0x25, 0x0a, 0xb3, 0x4d, 0x27, 0xf1, 0x42, 0x9b, 0x65, 0x9a, 0x54, 0x8b, 0x34, 0x99, 0xcb,
	0x6b, 0xc2, 0x11, 0x55, 0x8b, 0x88, 0x60, 0xde, 0x31, 0x2f, 0x0b, 0xeb, 0xde, 0x87, 0xf9, 0xe4,
	0xbb, 0xe2, 0xd1, 0x38, 0x32, 0x90, 0x9f, 0xaa, 0x99, 0x95, 0x78, 0xe6, 0xa3, 0xe1, 0xd9, 0xec,
	0xa6, 0x88, 0x47, 0xc3, 0xb3, 0x09, 0x53, 0x44, 0xe4, 0x10, 0x60, 0x7f, 0x29, 0x7d, 0xf8, 0xf2,
	0x3a, 0x3c, 0x84, 0x3a, 0x9e, 0x74, 0x49, 0xca, 0x4b, 0x59, 0xde, 0xe6, 0x40, 0xf0, 0x73, 0x6c,
	0xb9, 0xc4, 0xdb, 0x46, 0x7c, 0x76, 0x43, 0x8c, 0x68, 0xc2, 0x7c, 0x16, 0x19, 0x52, 0xf9, 0xe2,
	0x5d, 0xbf, 0x0c, 0xf9, 0x21, 0xfe, 0x0a, 0x2f, 0xe4, 0x8b, 0x57, 0xe1, 0x12, 0x19, 0x97, 0xfe,
	0x19, 0x3b, 0x7b, 0xf4, 0xca, 0x1b, 0x3c, 0x7a, 0xa4, 0x09, 0x15, 0x79, 0x70, 0x1a, 0xa1, 0xe5,
	0xe1, 0xd9, 0x50, 0xcb, 0x56, 0x03, 0x3a, 0xcd, 0xef, 0x0f, 0x0a, 0xab, 0x9e, 0x8b, 0xd9, 0x14,
	0xce, 0xa6, 0x2c, 0xe4, 0x1f, 0x7a, 0xaa, 0xba, 0xa2, 0xb8, 0xea, 0x44, 0x71, 0x57, 0x98, 0x44,
	0x5d, 0x71, 0x2a, 0xfb, 0x4b, 0xf5, 0x53, 0x41, 0x82, 0x87, 0xdc, 0x98, 0x96, 0xbc, 0xa8, 0x95,
	0x47, 0x43, 0xb5, 0x5c, 0xf3, 0xa3, 0x83, 0x9b, 0xda, 0x44, 0x24, 0x43, 0x68, 0x86, 0x53, 0x42,
	0x51, 0x47, 0x07, 0x74, 0xaa, 0x9a, 0x77, 0x20, 0xbe, 0xed, 0x50, 0xbd, 0xe6, 0xa9, 0x25, 0xb2,
	0xaf, 0x61, 0x92, 0xe9, 0x64, 0x34, 0xa1, 0x32, 0xa0, 0x58, 0xa9, 0x2b, 0x03, 0x4a, 0x5c, 0x0d,
	0x8a, 0x4c, 0x77, 0xe2, 0x25, 0xf3, 0xb7, 0x01, 0xc5, 0x1a, 0x5a, 0x19, 0xd0, 0xfb, 0x0c, 0x96,
	0xd5, 0x8f, 0xfc, 0xdd, 0x28, 0x19, 0x05, 0xac, 0x6e, 0xbd, 0x6c, 0x6f, 0xb7, 0x76, 0x3b, 0x5b,
	0x12, 0x5a, 0x77, 0x1f, 0xbf, 0xd8, 0x79, 0xba, 0xd3, 0x5a, 0x79, 0xc7, 0xfc, 0x3f, 0x78, 0x37,
	0xbf, 0x73, 0xb0, 0xfd, 0x62, 0xf7, 0x60, 0x7b, 0xe7, 0xd5, 0xf6, 0xd6, 0xee, 0x8a, 0x61, 0xbe,
	0x07, 0xb7, 0xf2, 0xdb, 0xbb, 0x3b, 0x6a, 0xb3, 0x72, 0xff, 0x01, 0x34, 0xf3, 0x88, 0xdd, 0x04,
	0x98, 0xdf, 0xdd, 0xb3, 0x3f, 0x69, 0x3d, 0x5b, 0x31, 0xcc, 0x65, 0x58, 0x4c, 0x77, 0x57, 0x2a,
	0xfb, 0xef, 0xfc, 0x37, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x59, 0x24, 0xf7, 0xff, 0x25, 0x00, 0x00,
}
