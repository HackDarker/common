import public "common_client.proto";
package ddproto;

//订单的状态
enum pay_enum_tradeStatus {
    PAY_S_UNIFIEDORDER = 1; //请求统一下单
    PAY_S_WATINGPAY = 2; //等待支付
    PAY_S_SUCC = 3; //支付成功
}

// ProtoHeader 需要在每个 Message 中作为第一个字段

//充值套餐
message pay_base_meal {
    optional int32 id = 1; //充值套餐
    optional int64 money = 2; //需要的金额
    optional int64 diamond = 3; //购买的钻石数量
    optional string memo = 4; //备注
}

//付款的模式,制定对应的商户号，appid,appkey
message pay_base_paymodel {
    optional int32 id = 1;
    optional string appId = 2;
    optional string mchId = 3;
    optional string appKey = 4;
}

//支付明细
message pay_base_details {
    optional int32 id = 1; //订单id，保存到数据库的id
    optional uint32 userId = 2; //
    optional int32 payModelId = 3; //支付模式
    optional int32 mealId = 4; //套餐id
    optional string tradeNo = 5; //支付订单号
    optional pay_enum_tradeStatus status = 6; //订单状态
    optional int64 Diamond = 7;
    optional int64 ChangeDiamond = 8;
    optional int64 Coin = 9;
    optional int64 ChangeCoin = 10;
}

//统一下单 proto
//    总金额	total_fee	是	Int	888	订单总金额，单位为分，详见支付金额
message wxpay_req_unifiedorder {
    optional ProtoHeader header = 1;
    optional int32 meal = 2; //要充值的套餐id
    optional int32 payModelId = 3; //要充值的套餐id
}

//app请求统一下单之后，返回的加密字符串
message wxpay_ack_unifiedorder {
    optional ProtoHeader header = 1;
    optional string partnerId = 2; //商户号
    optional string prepay_id = 3; // 预付回话标志
    optional string nonce_str = 4; //维系返回的随机字符串
    optional string timeStamp = 5;
    optional string package = 6;
    optional string sign = 7; //签名
}

//app收到同步回调之后，请求服务器检测接收异步回调，得到充值之后的信息
message wxpay_req_syncChecker {
    optional ProtoHeader header = 1;
    optional string tradeNo = 2; //制定的商户号，appid等，通过wxpayID区分开
}

//服务器收到微信充值的异步回调之后，返回给app当前的余额信息
message wxpay_ack_syncChecker {
    optional ProtoHeader header = 1;
    optional int32 wxpayId = 2; //制定的商户号，appid等，通过wxpayID区分开
    optional int64 diamond = 3; //充值之后钻石
    optional int64 changeDiamond = 4; //一般指增加的钻石数量
    optional int64 coin = 5; //充值之后金币的数量
    optional int64 changeCoin = 6; //充值之后增加金币的数量
}

//苹果支付充值回调
message applepay_req_rechargecb {
    optional ProtoHeader header = 1;
    optional int64 coin = 2; //要增加的金币数量
}

message applepay_acks_rechargecb {
    optional ProtoHeader header = 1;
    optional int64 rechargeCoin = 2; //要增加的金币数量
    optional int64 coin = 3; //增加之后的金币
}
