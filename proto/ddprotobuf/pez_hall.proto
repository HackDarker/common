syntax = "proto2";
import public "pez_base.proto";

package ddproto;
option optimize_for = LITE_RUNTIME;

// 拼二张创建房间
message pez_req_CreateRoom {
    optional ProtoHeader header = 1;
    optional pez_base_RoomTypeInfo roomTypeInfo = 2; // 房间类型信息，包括：房间类型、局数、玩法、牌张、结算、底
}

// 拼二张创建房间回复的信息
message pez_req_AckCreateRoom {
    optional ProtoHeader header = 1;
    optional int32 deskId = 2; // 用户id
    optional string password = 3; // 房间密码
    optional int64 userBalance = 4; // 用户的余额
    optional int64 createFee = 5; // 创建房间的费用
    optional pez_base_RoomTypeInfo roomTypeInfo = 6; // 房间类型信息，包括：房间类型、局数、玩法、牌张、结算、底
}

// 客户端请求进入 room, 服务器返回game_SendGameInfo
message pez_req_EnterRoom {
    optional ProtoHeader header = 1;
    optional int32 matchId = 2;
    optional int32 tableId = 3;
    optional string PassWord = 4; // 房间密码
    optional uint32 userId = 5; // 请求的userId
    optional int32 roomType = 6; //1,朋友桌，2金币场
    optional int32 enterType = 7; //0,普通进入，1，自动进入或者断线重连
}

message pez_req_AckEnterRoom {
    optional ProtoHeader header = 1;
}


//公告消息
message pez_Notice {
    optional ProtoHeader header = 1;
    optional int32 noticeType = 2; //公告的类型
    optional string channelId = 3; //渠道Id

}

// 公告的内容
message pez_AckNotice {
    optional ProtoHeader header = 1;
    optional int32 noticeType = 2; //公告的类型:1,滚动信息,2,充值信息,3,公告信息
    optional string noticeTitle = 3; //公告的标题
    optional string noticeContent = 4; //公告的内容
    optional string noticeMemo = 5; //公告的备注
    optional int32 id = 6; //公告的id
    repeated string fileds = 7; //公告的字段,目前子还是给充值的协议使用
}

//游戏战绩
message pez_GameRecord {
    optional ProtoHeader header = 1;
    optional int32 id = 2; //战绩id
    optional int32 gameId = 3; //游戏类别
    optional uint32 userId = 4; //用户id
}
//
message pezBeanUserRecord {
    optional ProtoHeader header = 1;
    optional uint32 UserId = 2; //用户id
    optional string NickName = 3; //用户昵称
    optional int64 WinAmount = 4; //用户输赢金额
}
//
message pezBeanGameRecord {
    optional ProtoHeader header = 1;
    optional int32 id = 2; //战绩id
    optional int32 deskId = 3; //关联的桌子的Id
    optional string beginTime = 4; //游戏开始的时间
    repeated pezBeanUserRecord users = 5; //用户
}
//
message pez_AckGameRecord {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; //用户id
    optional int32 gameId = 3; //游戏类别
    repeated pezBeanGameRecord records = 4; //结果
}

// 反馈信息的协议
message pez_Feedback {
    optional ProtoHeader header = 1;
    optional string message = 2; //用户提交的反馈内容
}

