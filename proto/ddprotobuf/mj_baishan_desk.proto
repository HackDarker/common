syntax = "proto2";

import public "common_client.proto";
import public "mj_common.proto";

package ddproto;
option optimize_for = LITE_RUNTIME;

enum mj_enum_protoId {
    PID_QUICK_CONN = 1; //连接服务器
    PID_QUICK_CONN_ACK = 2; //
    PID_GAME_LOGIN = 3; //登录游戏
    PID_GAME_LOGIN_ACK = 4; //
    PID_CREATEROOM = 5; //创建房间
    PID_CREATEROOM_ACK = 6; //创建房间-回复
    PID_ENTER_ROOM = 7; //进入房间
    PID_ENTER_ROOM_ACK = 8; //进入房间-回复
    PID_SEND_GAMEINFO = 9; //游戏信息
    PID_READY = 10; //准备
    PID_READY_ACK = 11; //准备-ack
    PID_EXCHANGECARDS = 12; //换3张
    PID_EXCHANGECARDS_ACK = 13; //换3张-回复
    PID_DINGQUE = 14; //定缺
    PID_OPENING = 15; //开局
    PID_DEAL_CARDS = 16; //发牌
    PID_GET_IN_CARD = 17; //摸牌
    PID_SEND_OUT_CARD = 18; //出牌
    PID_SEND_OUT_CARD_ACK = 19; //出牌-ack
    PID_PENG_CARD = 20; //碰
    PID_PENG_CARD_ACK = 21;
    PID_GANG_CARD = 22; //杠
    PID_GANG_CARD_ACK = 23;
    PID_GUO_CARD = 24; //过
    PID_GUO_CARD_ACK = 25;
    PID_HU_CARD = 26; //胡
    PID_HU_CARD_ACK = 27;
    PID_BROADCAST_BEGIN_DINGQUE = 28; //开始定缺(广播)
    PID_BROADCAST_BEGIN_EXCHANGE = 29; //开始换牌(广播)

    PID_OVERTURN = 30; //轮到下一人操作(广播)
    PID_CURRENTRESULT = 31; //本局结果
    PID_SENDENDLOTTERY = 32; //牌局结束

    PID_DISSOLVE_DESK = 33; //离开房间
    PID_DISSOLVE_DESK_ACK = 34; //
    PID_LEAVE_DESK = 35; //解散房间
    PID_LEAVE_DESK_ACK = 36; //

    PID_MESSAGE = 37; //聊天信息
    PID_SEND_MESSAGE = 38; //广播聊天

    PID_GAME_DINGQUEEND = 39; //定缺结束的广播
    PID_GAME_GAMERECORD = 40; //查询战绩
    PID_GAME_ACKGAMERECORD = 41; //战绩回复
    PID_GAME_ACKGAMERECORDEDN = 42; //换三张结束
    PID_GAME_NOTICE = 43; //请求通知
    PID_GAME_ACKNOTICE = 44; //通知回复
}

enum mj_enum_errorCode {
    EC_MJ_SUCCESS = 0; //表示成功

    //-1   -100 登陆异常

    //-101   -200	游戏异常
    EC_MJ_CREATE_DESK_DIAMOND_NOTENOUGH = -101; // 创建房间的时候余额不足
    EC_MJ_CREATE_DESK_USER_NOTFOUND = -102; // 创建房间的时候未知用户

    EC_MJ_INTO_DESK_NOTFOUND = -103; // 进入房间的时候没有找到房间

    EC_MJ_GAME_READY_REPEAT = -110; // 重复准备

    EC_MJ_GAME_READY_CHIP_NOT_ENOUGH = -111; // 筹码不足
}

// 玩法：包括自摸、点炮、以及可多选的玩法
message mj_base_playOptions {
    optional int32 ziMoRadio = 1; // 单选，自摸类型，如：自摸加底、自摸加番等
    optional int32 dianGangHuaRadio = 2; // 单选，点炮类型，如：点杠花（点炮）、点杠花（自摸）等
    repeated int32 othersCheckBox = 3; // 其他可复选的玩法，如：换三张、幺九将对、门清中张、天地胡、卡二条、可胡七对等
    optional int32 huRadio = 4; // 胡法，如：自摸胡、点炮胡（可抢杠）
}

enum mj_enum_playOption {
    MJ_OPT_EXCHANGE_CARDS = 1; //换3张

    MJ_OPT_ZIMO_JIA_DI = 2; //自摸加底
    MJ_OPT_ZIMO_JIA_FAN = 3; //自摸加番

    MJ_OPT_DIANGANG_HUA_DIANPAO = 4; //点杠花（点炮）
    MJ_OPT_DIANGANG_HUA_ZIMO = 5; //点杠花（自摸）

    MJ_OPT_YAOJIU_JIANGDUI = 6; //幺九+将对
    MJ_OPT_MENQING_MID_CARD = 7; //门清+中张
    MJ_OPT_TIAN_DI_HU = 8; //天/地胡
    MJ_OPT_KA_ER_TIAO = 9; //卡2条

    //三人两房牌
    MJ_OPT_DIANPAO_CAN_HU = 10; //点炮可平胡
    MJ_OPT_DUIDUIHU_2_FAN = 11; //对对胡2番
    MJ_OPT_JIA_XIN_WU = 12; //夹心五

    //倒倒胡
    MJ_OPT_DDH_QIDUI_HU = 13; //可胡7对(倒倒胡)
    MJ_OPT_DDH_ZIMO_HU = 14; //自摸胡(倒倒胡)
    MJ_OPT_DDH_DIANPAO_HU = 15; //点炮胡(倒倒胡)
}

// 麻将牌
message mj_base_cardInfo {
    optional int32 type = 1;
    optional int32 value = 2; //0:牌背； 1~9：万；  10~18：条；  19~27：筒。
    optional int32 id = 3; //牌的id
}


message mj_base_roomTypeInfo {
    optional MJRoomType mjRoomType = 1; // 房间类型，如：血战到底、三人两房、四人两房、德阳麻将、倒倒胡、血流成河
    optional int32 boardsCout = 2; // 局数，如：4局（房卡 × 2）、8局（房卡 × 3）
    optional int64 capMax = 3; // 封顶，如：2番、3番、4番
    optional mj_base_playOptions playOptions = 4; // 玩法：包括自摸、点炮、以及可多选的玩法
    optional int32 cardsNum = 5; // 牌张，如：7张、10张、13张
    optional int32 settlement = 6; // 结算，如：1拖1、1拖2、3拖5
    optional int64 baseValue = 7; // 底
}


message mj_base_composeCard {
    optional int32 value = 1; // 麻将牌值: 0~27
    optional int32 type = 2; // 类型（碰，明杠，暗杠）
}

message mj_base_playerCard {
    repeated mj_base_cardInfo handCard = 1; // 手牌数组（自己是明的，其他玩家服务器返回暗值，避免外挂获取别的玩家手牌）
    repeated mj_base_composeCard composeCard = 2; // 摆牌数组（碰、明杠、暗杠）
    repeated mj_base_cardInfo outCard = 3; // 已出牌数组
    repeated mj_base_cardInfo huCard = 4; // 胡的牌
    optional uint32 UserId = 5; //
}


message mj_base_playerInfo {
    optional bool isBanker = 1; // 是否庄家
    optional mj_base_playerCard playerCard = 2; // 玩家的手牌、摆牌（碰杠）、已打出的牌、胡牌信息。客户端需根据服务端的返回进行排序动画。
    optional int64 coin = 3; // 玩家当前显示的自己的筹码数
    optional string nickName = 4; // 昵称
    optional int32 sex = 5; // 性别: 1=男  2=女
    optional uint32 userId = 6; // 用户id
    optional bool isOwner = 7; // 当前用户是否房主
    optional int32 bReady = 8; // 是否已准备
    optional int32 bDingQue = 9; // 是否已定缺
    optional int32 bExchanged = 10; // 是否已换牌(换3张)
    optional int32 nHuPai = 11; // 0:未胡牌; >=1: 已胡牌(血流成河时,表示已胡次数)
    optional int32 quePai = 12; // 缺哪门牌: 1=万 2=条 3=筒
    optional WeixinInfo wxInfo = 13; // 微信用户信息( 进入房间时、广播新进用户时，才需返回WeixinInfo；其它广播不需要。)
    optional int32 GameStatus = 14; //玩家的游戏状态  .
}


message mj_base_deskGameInfo {
    optional int32 GameStatus = 1; //游戏所处状态: 0:INIT 1:DINGQUE 2;EXCHANGE 3:PLAYING 4:FINISH
    optional mj_base_roomTypeInfo roomTypeInfo = 2; //房间类型信息，包括：房间类型、局数、封顶、玩法、牌张、结算、底
    optional int32 playerNum = 3; //玩家数量
    optional uint32 activeUserId = 4; //当前谁操作，决定：中间的指针应该指向谁，哪个玩家当前是可操作状态
    optional int32 actionTime = 5; // 玩家当前操作时间
    optional int32 delayTime = 6; //当前延时时间
    optional int32 nInitActionTime = 7; // 初始操作时间
    optional int32 nInitDelayTime = 8; // 初始延时时间
    optional int64 initRoomCoin = 9; // 房间的初始带入金额
    optional int32 currPlayCount = 10; // 朋友桌: 当前第几局
    optional int32 totalPlayCount = 11; // 朋友桌: 总共几局
    optional string roomNumber = 12; // 房间号
    optional int32 remainCards = 13; // 还剩几张麻将牌
    optional uint32 Banker = 14; //庄家

}

//房主解散房间(未开局)
message mj_req_dissolveDesk {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 解散房间的用户 id
}
//解散房间回复
message mj_ack_dissolveDesk {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 解散房间的用户 id
    optional int32 deskId = 3; //房间Id
    optional string passWord = 4; //房间密钥
}

