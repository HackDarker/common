syntax = "proto2";

import public "common_client.proto";
import public "erddz_base.proto";

package ddproto;
option optimize_for = LITE_RUNTIME;

////////////////////////////////////////////////////////////////////
// 通信协议

// 开局（接收服务端消息）
message erddz_bc_opening {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; //玩家id
    optional int64 ticket = 3; //房费 金币场填入
    optional int64 userCoin = 4; //玩家当前金币 金币场填入
    optional int64 userRoomCard = 5; //玩家当前房卡数 朋友桌填入
    repeated erddz_base_playerInfo playerInfos = 6; //需广播的各个玩家的信息
}

// 发牌Ï
message erddz_bc_dealCards {
    optional ProtoHeader header = 1;
    repeated client_base_poker playerPokers = 2; //发给我的牌
    optional uint32 showPokerUserId = 3; //明单牌的玩家等于第一个接收到叫地主overturn的玩家
    optional int32 showPokerId = 4; //54张牌：1-54; 0=牌背 明的单牌id
}





// 叫地主
message erddz_req_jiaoDiZhu {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人
    optional bool jiao = 3; //true 叫地主 false 不叫地主
   
}

// 叫地主回复
message erddz_ack_jiaoDiZhu {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人 (广播给其它用户)
    optional bool jiao = 3; //true 叫地主 ，false 不叫地主
   

}

// 抢地主
message erddz_req_robDiZhu {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人
    optional bool rob = 3; // 抢还是不抢

}

message erddz_ack_robDiZhu {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人 (广播给其它用户)
    optional bool rob = 3; // 抢还是不抢

}

// 让牌
message erddz_req_rangcards {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人
    optional uint32 rangNum  = 3; // 让牌张数，1或者2张，0表示不让

}

message erddz_ack_rangcards {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人 (广播给其它用户)
    optional uint32 rangNum  = 3; // 让牌张数，1或者2张，0表示不让

}

// 加倍
message erddz_req_double {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人
    optional bool double = 3; // 加倍还是不加倍
}

message erddz_ack_double {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人 (广播给其它用户)
    optional bool double = 3; // 1=加倍, 2=不加倍
}



// 叫地主结束，开始游戏 (广播)
message erddz_bc_startPlay {
    optional ProtoHeader header = 1;
    repeated client_base_poker footPokers = 2; //3张底牌
    optional int32 footRate = 3; //底牌倍率
    optional uint32 dizhu = 4; //地主
}


// 出牌
message erddz_req_outCards {
    optional ProtoHeader header = 1;
    repeated client_base_poker outCards = 2; //打出的牌
}

message erddz_ack_outCards {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; //出牌的人(广播)
    optional erddz_enum_paiType cardType = 3; //打出的牌型
    optional int32 remainPokers = 4; //手牌还剩多少张
    repeated client_base_poker outCards = 5; //打出的牌
}

// 过牌
message erddz_req_actGuo {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
}

// 
message erddz_ack_actGuo {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; //操作人(广播时用)
}

// 轮到谁操作
message erddz_bc_overTurn {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 当前谁正在操作
    optional int32 time = 3; // 剩余操作时间 秒
    optional erddz_enum_actType actType = 4; // 1:普通出牌 2:叫地主 3:抢地主 4：让牌
    
    optional bool canOutCards = 5; //能否出牌：false=“要不起”
    repeated erddz_base_playerInfo playerInfos = 6; //需广播的各个玩家的信息
   
    optional bool isCanPass = 7; //能否过 flase不能过 必须出牌
    
}

////////////////////////////////////////////////////////

// 游戏信息(广播)
message erddz_bc_gameInfo {
    optional ProtoHeader header = 1;

    repeated erddz_base_playerInfo playerInfo = 2; //玩家数据（玩家数据包括其id昵称筹码头像等基本信息，其手牌数据，以及自己打出的牌的数据）

    optional erddz_base_deskInfo erddzDeskInfo = 3; //桌面信息（包括：游戏是否结束，当前轮到哪个玩家，倒计时剩余时间）

    optional uint32 senderUserId = 4; // 发起请求的人

    optional int32 isReconnect = 5; // 1=正常连接（默认） 2=断线重连

}


