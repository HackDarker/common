syntax = "proto2";

import public "common_client.proto";
import public "ddz_base.proto";

package ddproto;
option optimize_for = LITE_RUNTIME;

////////////////////////////////////////////////////////////////////
// 通信协议

// 开局（接收服务端消息）
message ddz_bc_opening {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; //玩家id
    optional int64 ticket = 3; //房费 金币场填入
    optional int64 userCoin = 4; //玩家当前金币 金币场填入
    optional int64 userRoomCard = 5; //玩家当前房卡数 朋友桌填入
    repeated ddz_base_playerInfo playerInfos = 6; //需广播的各个玩家的信息
}

// 发牌
message ddz_bc_dealCards {
    optional ProtoHeader header = 1;
    repeated client_base_poker playerPokers = 2; //发给我的牌
}

// 明牌
message ddz_req_showHandPokers {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人
    optional int32 rate = 3; //明牌倍数
}

// 明牌ack
message ddz_ack_showHandPokers {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人(广播)
    repeated client_base_poker playerPokers = 3; //明牌数组
    optional int32 playerRate = 4; //玩家当前倍数
}

enum ddz_enum_jdScore {
    DDZ_ONE = 1;
    DDZ_TWO = 2;
    DDZ_THREE = 3;
}

// 叫地主
message ddz_req_jiaoDiZhu {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人
    optional bool jiao = 3; //true 叫地主 false 不叫地主
    optional ddz_enum_jdScore score = 4; // 分数（可选）：1，2，3分
}

// 叫地主回复
message ddz_ack_jiaoDiZhu {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人 (广播给其它用户)
    optional bool jiao = 3; //true 叫地主 ，false 不叫地主
    optional ddz_enum_jdScore score = 4; //分数枚举 1 2 3

}

// 抢地主
message ddz_req_robDiZhu {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人
    optional bool rob = 3; // 抢还是不抢

}

message ddz_ack_robDiZhu {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人 (广播给其它用户)
    optional bool rob = 3; // 抢还是不抢

}


enum ddz_enum_doubleType {
    DDZ_JIA = 1;
    DDZ_BUJIA = 2;
}


enum ddz_enum_laDaoType {
    DDZ_LA = 1;
    DDZ_DAO = 2;
    DDZ_BULADAO = 3;
}

// 加倍
message ddz_req_double {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人
    optional ddz_enum_doubleType double = 3; // 1=加倍, 2=不加倍
}

message ddz_ack_double {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人 (广播给其它用户)
    optional ddz_enum_doubleType double = 3; // 1=加倍, 2=不加倍
}

// 叫地主结束，开始游戏 (广播)
message ddz_bc_startPlay {
    optional ProtoHeader header = 1;
    repeated client_base_poker footPokers = 2; //3张底牌
    optional int32 footRate = 3; //底牌倍率
    optional uint32 dizhu = 4; //地主
}

//////////////////////////////////////////////////////////
// 四川斗地主

// 闷抓
message ddz_req_menuZhua {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人
}

message ddz_ack_menuZhua {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人 (广播给其它用户)
    repeated client_base_poker handPokers = 3; // 发给我的手牌
}

// 看牌
message ddz_req_seeCards {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人
}

message ddz_ack_seeCards {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人 (广播给其它用户)
    repeated client_base_poker handPokers = 3; // 发给我的手牌
}

// 拉/倒
message ddz_req_pull {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人
    optional ddz_enum_laDaoType act = 3; // 1=拉; 2=倒; 3=不拉或不倒
}

message ddz_ack_pull {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 操作人 (广播给其它用户)
    optional ddz_enum_laDaoType act = 3; // 1=拉; 2=倒; 3=不拉或不倒
}

//////////////////////////////////////////////////////////

// 出牌
message ddz_req_outCards {
    optional ProtoHeader header = 1;
    repeated client_base_poker outCards = 2; //打出的牌
}

message ddz_ack_outCards {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; //出牌的人(广播)
    optional ddz_enum_paiType cardType = 3; //打出的牌型
    optional int32 remainPokers = 4; //手牌还剩多少张
    repeated client_base_poker outCards = 5; //打出的牌
}

// 过牌
message ddz_req_actGuo {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2;
}

// 
message ddz_ack_guoAck {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; //操作人(广播时用)
}

// 轮到谁操作
message ddz_bc_overTurn {
    optional ProtoHeader header = 1;
    optional uint32 userId = 2; // 当前谁正在操作
    optional int32 time = 3; // 剩余操作时间
    optional ddz_enum_actType actType = 4; // 1:普通出牌 2:叫地主 3:抢地主 4：加倍 5：闷抓/看牌 6：拉/倒
    optional bool canDouble = 5; //可否加倍（玩家金币数过少，不许加倍）
    optional int32 pullOrPush = 6; //actType=4时：1=拉 2=倒
    optional bool canOutCards = 7; //能否出牌：false=“要不起”
    repeated ddz_base_playerInfo playerInfos = 8; //需广播的各个玩家的信息
    optional ddz_enum_jdScore jiaoScore = 9; //可叫的最低分
    optional bool isCanPass = 10; //能否过 flase不能过 必须出牌
}

////////////////////////////////////////////////////////

// 游戏信息(广播)
message ddz_bc_gameInfo {
    optional ProtoHeader header = 1;

    repeated ddz_base_playerInfo playerInfo = 2; //玩家数据（玩家数据包括其id昵称筹码头像等基本信息，其手牌数据，以及自己打出的牌的数据）

    optional ddz_base_deskInfo ddzDeskInfo = 3; //桌面信息（包括：游戏是否结束，当前轮到哪个玩家，倒计时剩余时间）

    optional uint32 senderUserId = 4; // 发起请求的人

    optional int32 isReconnect = 5; // 1=正常连接（默认） 2=断线重连

}


